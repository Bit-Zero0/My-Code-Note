{
	"ID": "20221013222210-cvcyd82",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20221013222210-cvcyd82",
		"title": "新的类功能",
		"updated": "20221013224504"
	},
	"Children": [
		{
			"ID": "20221013222219-gevcj4u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221013222219-gevcj4u",
				"updated": "20221013222224"
			},
			"Children": [
				{
					"Type": "NodeBlockRef",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeBlockRefID",
							"Data": "20220722082406-j2ahkyt"
						},
						{
							"Type": "NodeBlockRefSpace"
						},
						{
							"Type": "NodeBlockRefDynamicText",
							"Data": "c++默认成员函数"
						},
						{
							"Type": "NodeCloseParen"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n原来C++类中，有6个默认成员函数："
				}
			]
		},
		{
			"ID": "20221013222219-wosx6p9",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221013222219-wosx6p9",
				"updated": "20221013222219"
			},
			"Children": [
				{
					"ID": "20221013222219-euqdvxm",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20221013222219-euqdvxm",
						"updated": "20221013222219"
					},
					"Children": [
						{
							"ID": "20221013222219-twp0g0h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221013222219-twp0g0h",
								"updated": "20221013222219"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "构造函数"
								}
							]
						}
					]
				},
				{
					"ID": "20221013222219-a27gjj3",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20221013222219-a27gjj3",
						"updated": "20221013222219"
					},
					"Children": [
						{
							"ID": "20221013222219-v5vmbbc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221013222219-v5vmbbc",
								"updated": "20221013222219"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "析构函数"
								}
							]
						}
					]
				},
				{
					"ID": "20221013222219-r0g21b4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20221013222219-r0g21b4",
						"updated": "20221013222219"
					},
					"Children": [
						{
							"ID": "20221013222219-3ucr72x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221013222219-3ucr72x",
								"updated": "20221013222219"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "拷贝构造函数"
								}
							]
						}
					]
				},
				{
					"ID": "20221013222219-iywkrse",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20221013222219-iywkrse",
						"updated": "20221013222219"
					},
					"Children": [
						{
							"ID": "20221013222219-67oclnx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221013222219-67oclnx",
								"updated": "20221013222219"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "拷贝赋值重载"
								}
							]
						}
					]
				},
				{
					"ID": "20221013222219-8vwy8nt",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20221013222219-8vwy8nt",
						"updated": "20221013222219"
					},
					"Children": [
						{
							"ID": "20221013222219-vrh7del",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221013222219-vrh7del",
								"updated": "20221013222219"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "取地址重载"
								}
							]
						}
					]
				},
				{
					"ID": "20221013222219-45dblh4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20221013222219-45dblh4",
						"updated": "20221013222219"
					},
					"Children": [
						{
							"ID": "20221013222219-r217z56",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221013222219-r217z56",
								"updated": "20221013222219"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "const 取地址重载\n最后重要的是前4个，后两个用处不大。默认成员函数就是我们不写编译器会生成一个默认的。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221013222219-ateft39",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221013222219-ateft39",
				"updated": "20221013222244"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "C++11 新增了两个："
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "移动构造函数"
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "移动赋值运算符重载"
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20221013222219-znxa0i7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221013222219-znxa0i7",
				"updated": "20221013222219"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "针对移动构造函数和移动赋值运算符重载有一些需要注意的点如下："
				}
			]
		},
		{
			"ID": "20221013222219-jpt3nmk",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221013222219-jpt3nmk",
				"updated": "20221013222219"
			},
			"Children": [
				{
					"ID": "20221013222219-2gvuc16",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221013222219-2gvuc16",
						"updated": "20221013222219"
					},
					"Children": [
						{
							"ID": "20221013222219-bou4qjo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221013222219-bou4qjo",
								"updated": "20221013222219"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果你"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "没有自己实现移动构造函数"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，且没有实现"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "析构函数、拷贝构造、拷贝赋值重载"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "中的"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "任意一个"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。那么编译器会"
								},
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "自动生成一个"
										},
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "默认移动构造"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "默认生成的移动构造函数，对于"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeText",
													"Data": "内置类型成员"
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "会执行逐成员按"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeText",
													"Data": "字节拷贝(浅拷贝)"
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeText",
													"Data": "自定义类型成员"
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "，则需要看这个成员"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeText",
													"Data": "是否实现移动构造"
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "，如果实现了就调用移动构造，==没有实现就调用拷贝构造"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "==。"
								}
							]
						}
					]
				},
				{
					"ID": "20221013222219-gg7ap8w",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221013222219-gg7ap8w",
						"updated": "20221013222219"
					},
					"Children": [
						{
							"ID": "20221013222219-xntcru1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221013222219-xntcru1",
								"updated": "20221013222219"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果你"
								},
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "没有自己实现移动赋值重载函数"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "且没有实现析构函数、拷贝构造、拷贝赋值重载中的任意一个"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，那么"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "编译器会自动生成一个默认移动赋值"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "默认生成的移动构造函数，对于内置类型成员会执行逐成员按"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeText",
													"Data": "字节拷贝(浅拷贝)"
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "，"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeText",
													"Data": "自定义类型成员"
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "，则需要看这个成员"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeText",
													"Data": "是否实现移动赋值"
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "，如果实现了就调用移动赋堂，"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeText",
													"Data": "没有实现就调用拷贝赋值"
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。(默认移动赋值跟上面移动构造完全关似)"
								}
							]
						}
					]
				},
				{
					"ID": "20221013222219-kxwvn70",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221013222219-kxwvn70",
						"updated": "20221013222219"
					},
					"Children": [
						{
							"ID": "20221013222219-wrpcpff",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221013222219-wrpcpff",
								"updated": "20221013222219"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果你提供了移动构造或者移动赋值，编译器不会自动提供拷贝构造和拷贝赋值.。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221013222326-6qr3pij",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221013222326-6qr3pij"
			}
		},
		{
			"ID": "20221013222219-35qf4f6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221013222219-35qf4f6",
				"updated": "20221013224504"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以下代码在vs2013中不能体现，vs2013没有很好支持这个特性，在vs2019下才能演示体现上面\n的特性。需要一份我们"
				},
				{
					"Type": "NodeBlockRef",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeBlockRefID",
							"Data": "20221013224251-h9rq73y"
						},
						{
							"Type": "NodeBlockRefSpace"
						},
						{
							"Type": "NodeBlockRefText",
							"Data": "自己写的string"
						},
						{
							"Type": "NodeCloseParen"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20221013222219-8jai30d",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221013222219-8jai30d",
				"updated": "20221013222219"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Person\n{\npublic:\n\tPerson(const char* name = \"\", int age = 0)\n\t\t:_name(name)\n\t\t, _age(age)\n\t{}\n\tPerson(const Person\u0026 p)\n\t\t:_name(p._name)\n\t\t,_age(p._age)\n\t{}\n\n\tPerson\u0026 operator=(const Person\u0026 p)\n\t{\n\t\tif(this != \u0026p)\n\t\t{\n\t\t\t_name = p._name;\n\t\t\t_age = p._age;\n\t\t}\n\t\treturn *this;\n\t}\n\t~Person()\n\t{}\n\nprivate:\n\tbit::string _name;\n\tint _age;\n};\nint main()\n{\n\tPerson s1;\n\tPerson s2 = s1;\n\tPerson s3 = std::move(s1);\n\tPerson s4;\n\t//s4 = std::move(s2);\n\n\treturn 0;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221013222331-gek7g1p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221013222331-gek7g1p"
			}
		},
		{
			"ID": "20221013222219-a1snk7q",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221013222219-a1snk7q",
				"updated": "20221013222219"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类成员变量初始化"
				}
			]
		},
		{
			"ID": "20221013222219-9rq8dgo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221013222219-9rq8dgo",
				"updated": "20221013222219"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "C++11允许在类定义时给"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "成员变量"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "初始缺省值"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，默认生成构造函数会使用这些缺省值初始化，这\n个我们在雷和对象默认就讲了，这里就不再细讲了。"
				}
			]
		},
		{
			"ID": "20221013222219-p1m2mi5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221013222219-p1m2mi5",
				"updated": "20221013222219"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Person\n{\nprivate:\n\tbit::string _name; \n\tint _age = 0;//这不是初始化，而是缺省值。当对象已经创建，但是没有对该值进行初始化的时候，就会采用此缺省值\n\npublic:\n\t//......\n};\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221013222334-p3hbd28",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221013222334-p3hbd28"
			}
		},
		{
			"ID": "20221013222219-8s4spnq",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221013222219-8s4spnq",
				"updated": "20221013222219"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "强制生成默认函数的关键字default:"
				}
			]
		},
		{
			"ID": "20221013222219-ib4dy76",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221013222219-ib4dy76",
				"updated": "20221013222412"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "C++11可以让你更好的控制要使用的默认函数。假设你要使用某个默认的函数，但是因为一些原因这个函数没有默认生成。\n比如：我们提供了拷贝构造，就不会生成移动构造了，那么我们可以\n使用"
				},
				{
					"Type": "NodeBlockRef",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeBlockRefID",
							"Data": "20221013221853-9toax5a"
						},
						{
							"Type": "NodeBlockRefSpace"
						},
						{
							"Type": "NodeBlockRefText",
							"Data": "default"
						},
						{
							"Type": "NodeCloseParen"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "关键字显示指定移动构造生成。"
				}
			]
		},
		{
			"ID": "20221013222219-d10ulat",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221013222219-d10ulat",
				"updated": "20221013222219"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "禁止生成默认函数的关键字delete:"
				}
			]
		},
		{
			"ID": "20221013222219-j5mlppv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221013222219-j5mlppv",
				"updated": "20221013222841"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果能想要限制某些默认函数的生成，在C++98中，是该函数设置成private，并且只声明补丁已，这样只要其他人想要调用就会报错。在C++11中更简单，只需在该函数声明加上"
				},
				{
					"Type": "NodeBlockRef",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeBlockRefID",
							"Data": "20221013221853-fdy80rg"
						},
						{
							"Type": "NodeBlockRefSpace"
						},
						{
							"Type": "NodeBlockRefText",
							"Data": "=delete"
						},
						{
							"Type": "NodeCloseParen"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "即可，该语法指示编译器不生成对应函数的默认版本，称 "
				},
				{
					"Type": "NodeBlockRef",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeBlockRefID",
							"Data": "20221013221853-fdy80rg"
						},
						{
							"Type": "NodeBlockRefSpace"
						},
						{
							"Type": "NodeBlockRefText",
							"Data": "=delete"
						},
						{
							"Type": "NodeCloseParen"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "修饰的函数为"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "删除函数"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20221013222219-x22poi5",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221013222219-x22poi5",
				"updated": "20221013222219"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "继承和多态中的ﬁnal与override关键字"
				}
			]
		},
		{
			"ID": "20221013222219-sz72aqe",
			"Type": "NodeBlockQueryEmbed",
			"Properties": {
				"id": "20221013222219-sz72aqe",
				"updated": "20221013222943"
			},
			"Children": [
				{
					"Type": "NodeOpenBrace"
				},
				{
					"Type": "NodeOpenBrace"
				},
				{
					"Type": "NodeBlockQueryEmbedScript",
					"Data": "select * from blocks where id='20220827221322-lkjbupk'"
				},
				{
					"Type": "NodeCloseBrace"
				},
				{
					"Type": "NodeCloseBrace"
				}
			]
		},
		{
			"ID": "20221013222939-iof90zy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221013222939-iof90zy"
			}
		}
	]
}