{
	"ID": "20220722133912-zni8bgm",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220722133912-zni8bgm",
		"title": "stack\u0026amp;queue\u0026amp;priority_queue",
		"updated": "20220722134926"
	},
	"Children": [
		{
			"ID": "20220722133929-hvyioor",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220722133929-hvyioor",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "stack"
				}
			]
		},
		{
			"ID": "20220722133929-s1499jv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722133929-s1499jv",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "stack容器的介绍"
				}
			]
		},
		{
			"ID": "20220722133929-yvtc5ec",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-yvtc5ec",
				"updated": "20220722133938"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "assets/"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/020220528202034.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n类模板也是可以有缺省值的  "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "Container = deque\u003cT\u003e"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 就是模板缺省值。\n而这个缺省值其实就是 "
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "容器适配器"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220722133929-cr77693",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220722133929-cr77693",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220722133929-fhlroag",
					"Type": "NodeList",
					"ListData": {
						"Typ": 1
					},
					"Properties": {
						"id": "20220722133929-fhlroag",
						"updated": "20220722133929"
					},
					"Children": [
						{
							"ID": "20220722133929-lsvy9bk",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "MS4=",
								"Num": 1
							},
							"Properties": {
								"id": "20220722133929-lsvy9bk",
								"updated": "20220722133929"
							},
							"Children": [
								{
									"ID": "20220722133929-8lyqhpt",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20220722133929-8lyqhpt",
										"updated": "20220722133929"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "stack是一种容器适配器，专门用在具有"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "后进先出"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "操作的上下文环境中，"
										},
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "其删除只能从容器的一端进行元素的插入与提取操作"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "。"
										}
									]
								}
							]
						},
						{
							"ID": "20220722133929-031s3wb",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "Mi4=",
								"Num": 2
							},
							"Properties": {
								"id": "20220722133929-031s3wb",
								"updated": "20220722133929"
							},
							"Children": [
								{
									"ID": "20220722133929-1qcdek6",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20220722133929-1qcdek6",
										"updated": "20220722133929"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "stack是作为"
										},
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "容器适配器"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "被实现的，"
										},
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "容器适配器即是对特定类封装作为其底层的容器"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "，并提供一组特定的成员函数来访问其元素，将特定类作为其底层的，元素特定容器的尾部(即栈顶)被压入和弹出。"
										}
									]
								}
							]
						},
						{
							"ID": "20220722133929-wgjzhb7",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "My4=",
								"Num": 3
							},
							"Properties": {
								"id": "20220722133929-wgjzhb7",
								"updated": "20220722133929"
							},
							"Children": [
								{
									"ID": "20220722133929-dab37ty",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20220722133929-dab37ty",
										"updated": "20220722133929"
									},
									"Children": [
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "stack的底层容器可以是任何标准的容器类模板或者一些其他特定的容器类"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "，这些容器类应该支持以下操作："
										}
									]
								},
								{
									"ID": "20220722133929-xyz8wc8",
									"Type": "NodeList",
									"ListData": {},
									"Properties": {
										"id": "20220722133929-xyz8wc8",
										"updated": "20220722133929"
									},
									"Children": [
										{
											"ID": "20220722133929-9y8923j",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20220722133929-9y8923j",
												"updated": "20220722133929"
											},
											"Children": [
												{
													"ID": "20220722133929-o2k3vjj",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20220722133929-o2k3vjj",
														"updated": "20220722133929"
													},
													"Children": [
														{
															"Type": "NodeMark",
															"Data": "mark",
															"Children": [
																{
																	"Type": "NodeMark2OpenMarker"
																},
																{
																	"Type": "NodeText",
																	"Data": "empty"
																},
																{
																	"Type": "NodeMark2CloseMarker"
																}
															]
														},
														{
															"Type": "NodeText",
															"Data": "：判空操作"
														}
													]
												}
											]
										},
										{
											"ID": "20220722133929-6eejamt",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20220722133929-6eejamt",
												"updated": "20220722133929"
											},
											"Children": [
												{
													"ID": "20220722133929-k11kf6f",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20220722133929-k11kf6f",
														"updated": "20220722133929"
													},
													"Children": [
														{
															"Type": "NodeMark",
															"Data": "mark",
															"Children": [
																{
																	"Type": "NodeMark2OpenMarker"
																},
																{
																	"Type": "NodeText",
																	"Data": "back"
																},
																{
																	"Type": "NodeMark2CloseMarker"
																}
															]
														},
														{
															"Type": "NodeText",
															"Data": "：获取尾部元素操作"
														}
													]
												}
											]
										},
										{
											"ID": "20220722133929-yg30src",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20220722133929-yg30src",
												"updated": "20220722133929"
											},
											"Children": [
												{
													"ID": "20220722133929-ibk5m07",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20220722133929-ibk5m07",
														"updated": "20220722133929"
													},
													"Children": [
														{
															"Type": "NodeMark",
															"Data": "mark",
															"Children": [
																{
																	"Type": "NodeMark2OpenMarker"
																},
																{
																	"Type": "NodeText",
																	"Data": "push_back"
																},
																{
																	"Type": "NodeMark2CloseMarker"
																}
															]
														},
														{
															"Type": "NodeText",
															"Data": "：尾部插入元素操作"
														}
													]
												}
											]
										},
										{
											"ID": "20220722133929-52057k9",
											"Type": "NodeListItem",
											"ListData": {
												"BulletChar": 42,
												"Marker": "Kg=="
											},
											"Properties": {
												"id": "20220722133929-52057k9",
												"updated": "20220722133929"
											},
											"Children": [
												{
													"ID": "20220722133929-11uickn",
													"Type": "NodeParagraph",
													"Properties": {
														"id": "20220722133929-11uickn",
														"updated": "20220722133929"
													},
													"Children": [
														{
															"Type": "NodeMark",
															"Data": "mark",
															"Children": [
																{
																	"Type": "NodeMark2OpenMarker"
																},
																{
																	"Type": "NodeText",
																	"Data": "pop_back"
																},
																{
																	"Type": "NodeMark2CloseMarker"
																}
															]
														},
														{
															"Type": "NodeText",
															"Data": "：尾部删除元素操作"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"ID": "20220722133929-g91n0q6",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "NC4=",
								"Num": 4
							},
							"Properties": {
								"id": "20220722133929-g91n0q6",
								"updated": "20220722133929"
							},
							"Children": [
								{
									"ID": "20220722133929-k1zb4rs",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20220722133929-k1zb4rs",
										"updated": "20220722133929"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "标准容器"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "vector、deque、list"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "均符合这些需求，默认情况下，如果没有为stack指定特定的底层容器，默认情况下使用"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "deque"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "。"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220722133929-hjc00p3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-hjc00p3",
				"updated": "20220722133954"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "assets/"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/020220528202916.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220722133929-7y694os",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722133929-7y694os",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "stack常见方法"
				}
			]
		},
		{
			"ID": "20220722133929-6qofa3l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-6qofa3l",
				"updated": "20220722134005"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "assets/"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/020220528202958.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220722133929-fblfvak",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722133929-fblfvak",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "stack的模拟实现"
				}
			]
		},
		{
			"ID": "20220722133929-bk6k563",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-bk6k563",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如我们传入的"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "vector"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "容器，"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "stack"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "则会适配"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "vector"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "容器"
				}
			]
		},
		{
			"ID": "20220722133929-o3vhigg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722133929-o3vhigg",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#pragma once\n#include \u003cvector\u003e\n#include \u003clist\u003e\n#include \u003cforward_list\u003e\n\nnamespace fmy \n{\n\ttemplate\u003cclass T ,class Container= deque\u003cT\u003e\u003e\n\tclass stack\n\t{\n\tpublic:\n\t\tbool empty() const\n\t\t{\n\t\t\treturn _con.empty();\n\t\t}\n\n\t\tsize_t size() const\n\t\t{\n\t\t\treturn _con.size();\n\t\t}\n\n\t\tconst T\u0026 front() const\n\t\t{\n\t\t\treturn _con.front();\n\t\t}\n\n\t\tconst T\u0026 top() const\n\t\t{\n\t\t\treturn _con.back();\n\t\t}\n\n\t\tvoid push(const T\u0026 x)\n\t\t{\n\t\t\t_con.push_back(x);\n\t\t}\n\n\t\tvoid pop()\n\t\t{\n\t\t\t_con.pop_back();\n\t\t}\n\tprivate:\n\t\tContainer _con;\n\t};\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220722133929-vflsy7v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-vflsy7v",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如这里我们传入的就是 vector容器"
				}
			]
		},
		{
			"ID": "20220722133929-nzarkxf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722133929-nzarkxf",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \"stack.h\"\n#include \u003ciostream\u003e\n#include \u003cstack\u003e\nusing namespace std;\n\nvoid test1()\n{\n\tfmy::stack\u003cint , std::vector\u003cint\u003e\u003e s;\n\n\ts.push(10);\n\ts.push(20);\n\ts.push(30);\n\ts.push(40);\n\n\twhile (!s.empty())\n\t{\n\t\tcout \u003c\u003c s.top() \u003c\u003c \" \";\n\t\ts.pop();\n\t}\n\tcout \u003c\u003c endl;\n\n}\n\nint main()\n{\n\ttest1();\n\treturn 0;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220722133929-hfabhti",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-hfabhti",
				"updated": "20220722134058"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "assets/"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/020220528203454.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220722133929-7gjwxs8",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722133929-7gjwxs8",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "练习"
				}
			]
		},
		{
			"ID": "20220722133929-fbb1o4q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-fbb1o4q",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "155. 最小栈 - 力扣（LeetCode）"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://leetcode.cn/problems/min-stack/submissions/"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				},
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "栈的压入、弹出序列_牛客题霸_牛客网 (nowcoder.com)"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://www.nowcoder.com/practice/d77d11405cc7470d82554cb392585106?tpId=13\u0026tqId=23290\u0026ru=/practice/4c776177d2c04c2494f2555c9fcc1e49\u0026qru=/ta/coding-interviews/question-ranking"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				},
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "150. 逆波兰表达式求值 - 力扣（LeetCode）"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://leetcode.cn/problems/evaluate-reverse-polish-notation/submissions/"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220722134032-imkdx46",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722134032-imkdx46"
			}
		},
		{
			"ID": "20220722133929-16ea3y8",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220722133929-16ea3y8",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "queue"
				}
			]
		},
		{
			"ID": "20220722133929-mlryfi5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722133929-mlryfi5",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "queue容器的介绍"
				}
			]
		},
		{
			"ID": "20220722133929-3t401ca",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-3t401ca",
				"updated": "20220722134047"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "assets/"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/020220528204020.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n类模板也是可以有缺省值的  "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "Container = deque\u003cT\u003e"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 就是模板缺省值。\n而这个缺省值其实就是 "
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "容器适配器"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220722133929-mzofjc1",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220722133929-mzofjc1",
				"updated": "20220722134118"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220722133929-acwbg4t",
					"Type": "NodeList",
					"ListData": {
						"Typ": 1
					},
					"Properties": {
						"id": "20220722133929-acwbg4t",
						"updated": "20220722134118"
					},
					"Children": [
						{
							"ID": "20220722133929-lhu2omw",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "MS4=",
								"Num": 1
							},
							"Properties": {
								"id": "20220722133929-lhu2omw",
								"updated": "20220722133929"
							},
							"Children": [
								{
									"ID": "20220722133929-b7lpn04",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20220722133929-b7lpn04",
										"updated": "20220722133929"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "队列是一种"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "容器适配器"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "，专门用于在"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "FIFO上下文(先进先出)"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "中操作，其中"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeText",
													"Data": "从容器一端插入元素，另一端提取元素"
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "。"
										}
									]
								}
							]
						},
						{
							"ID": "20220722133929-2cxaedd",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "Mi4=",
								"Num": 2
							},
							"Properties": {
								"id": "20220722133929-2cxaedd",
								"updated": "20220722133929"
							},
							"Children": [
								{
									"ID": "20220722133929-fkrvleo",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20220722133929-fkrvleo",
										"updated": "20220722133929"
									},
									"Children": [
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeText",
													"Data": "队列作为容器适配器实现，容器适配器即将特定容器类封装作为其底层容器类，queue提供一组特定的成员函数来访问其元素"
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "。"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "元素从队尾入队列，从队头出队列"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "。"
										}
									]
								}
							]
						},
						{
							"ID": "20220722133929-fzu40g3",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "My4=",
								"Num": 3
							},
							"Properties": {
								"id": "20220722133929-fzu40g3",
								"updated": "20220722133929"
							},
							"Children": [
								{
									"ID": "20220722133929-davehhy",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20220722133929-davehhy",
										"updated": "20220722133929"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "底层容器可以是标准容器类模板之一，也可以是"
										},
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "其他"
												},
												{
													"Type": "NodeMark",
													"Data": "mark",
													"Children": [
														{
															"Type": "NodeMark2OpenMarker"
														},
														{
															"Type": "NodeText",
															"Data": "专门"
														},
														{
															"Type": "NodeMark2CloseMarker"
														}
													]
												},
												{
													"Type": "NodeText",
													"Data": "设计的容器类。该底层容器应至少支持以下操作"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": ":\n* "
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "empty"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "：检测队列是否为空\n* "
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "size"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "：返回队列中有效元素的个数\n* "
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "front"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "：返回队头元素的引用\n* "
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "back"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "：返回队尾元素的引用\n* "
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "push_back"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "：在队列尾部入队列\n* "
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "pop_front"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "：在队列头部出队列"
										}
									]
								}
							]
						},
						{
							"ID": "20220722133929-be5gier",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "NC4=",
								"Num": 4
							},
							"Properties": {
								"id": "20220722133929-be5gier",
								"updated": "20220722134118"
							},
							"Children": [
								{
									"ID": "20220722133929-42ugelm",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20220722133929-42ugelm",
										"updated": "20220722134118"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "标准容器类"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "deque"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "和"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "list"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "满足了这些要求。默认情况下，如果没有为queue实例化指定容器类，则使用标准容器"
										},
										{
											"Type": "NodeMark",
											"Data": "mark",
											"Children": [
												{
													"Type": "NodeMark2OpenMarker"
												},
												{
													"Type": "NodeStrong",
													"Data": "strong",
													"Children": [
														{
															"Type": "NodeStrongA6kOpenMarker",
															"Data": "**"
														},
														{
															"Type": "NodeText",
															"Data": "deque"
														},
														{
															"Type": "NodeStrongA6kCloseMarker",
															"Data": "**"
														}
													]
												},
												{
													"Type": "NodeMark2CloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "。\n​"
										},
										{
											"Type": "NodeImage",
											"Data": "span",
											"Children": [
												{
													"Type": "NodeBang"
												},
												{
													"Type": "NodeOpenBracket"
												},
												{
													"Type": "NodeLinkText",
													"Data": "assets/"
												},
												{
													"Type": "NodeCloseBracket"
												},
												{
													"Type": "NodeOpenParen"
												},
												{
													"Type": "NodeLinkDest",
													"Data": "assets/020220528204216.png"
												},
												{
													"Type": "NodeCloseParen"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220722134039-sg2vruz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722134039-sg2vruz"
			}
		},
		{
			"ID": "20220722133929-dkdwxm0",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722133929-dkdwxm0",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "stack的常见方法"
				}
			]
		},
		{
			"ID": "20220722133929-5357woh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-5357woh",
				"updated": "20220722134129"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "assets/"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/020220528204153.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220722134145-nicepwz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722134145-nicepwz"
			}
		},
		{
			"ID": "20220722133929-q8tkpjx",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722133929-q8tkpjx",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "queue的模拟实现"
				}
			]
		},
		{
			"ID": "20220722133929-rk4bms7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722133929-rk4bms7",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#pragma once\n#include\u003cvector\u003e\n#include\u003clist\u003e\n\nnamespace fmy\n{\n\t// stack\u003cint, vector\u003cint\u003e\u003e s;\n\t// stack\u003cint, list\u003cint\u003e\u003e s;\n\n\ttemplate\u003cclass T, class Container = deque\u003cT\u003e\u003e\n\tclass queue\n\t{\n\tpublic:\n\t\tbool empty() const\n\t\t{\n\t\t\treturn _con.empty();\n\t\t}\n\n\t\tsize_t size() const\n\t\t{\n\t\t\treturn _con.size();\n\t\t}\n\n\t\tconst T\u0026 front() const\n\t\t{\n\t\t\treturn _con.front();\n\t\t}\n\n\t\tconst T\u0026 back() const\n\t\t{\n\t\t\treturn _con.back();\n\t\t}\n\n\t\tvoid push(const T\u0026 x)\n\t\t{\n\t\t\t_con.push_back(x);\n\t\t}\n\n\t\tvoid pop()\n\t\t{\n\t\t\t_con.pop_front();\n\t\t}\n\tprivate:\n\t\tContainer _con;\n\t};\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220722133929-44ao60m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722133929-44ao60m",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \"queue.h\"\n#include \u003ciostream\u003e\n#include \u003clist\u003e\n#include \u003cqueue\u003e\n\nusing namespace std;\nvoid test2()\n{\n\tfmy::queue\u003cint ,list\u003cint\u003e\u003e q;\n\tq.push(1);\n\tq.push(2);\n\tq.push(3);\n\tq.push(4);\n\n\twhile (!q.empty())\n\t{\n\t\tcout \u003c\u003c q.front() \u003c\u003c \" \";\n\t\tq.pop();\n\t}\n\tcout \u003c\u003c endl;\n}\n\nint main()\n{\n\ttest2();\n\treturn 0;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220722133929-7vai62k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-7vai62k",
				"updated": "20220722134157"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "assets/"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/020220528204446.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220722134159-0ivz3rg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722134159-0ivz3rg"
			}
		},
		{
			"ID": "20220722133929-0qstfw9",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220722133929-0qstfw9",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "priovity_queue"
				}
			]
		},
		{
			"ID": "20220722133929-37ay57a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-37ay57a",
				"updated": "20220722134209"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "assets/"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/020220529201932.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220722133929-afpc3c8",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722133929-afpc3c8",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "priority_queue的介绍"
				}
			]
		},
		{
			"ID": "20220722133929-pkws5f8",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20220722133929-pkws5f8",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"ID": "20220722133929-mm32zbo",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20220722133929-mm32zbo",
						"updated": "20220722133929"
					},
					"Children": [
						{
							"ID": "20220722133929-hubva0g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220722133929-hubva0g",
								"updated": "20220722133929"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "优先队列是一种"
								},
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "容器适配器"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，根据严格的"
								},
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "弱排序标准"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，它的"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "第一个元素总是它所包含的元素中最大的"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20220722133929-hnaq8sc",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20220722133929-hnaq8sc",
						"updated": "20220722133929"
					},
					"Children": [
						{
							"ID": "20220722133929-kel4v89",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220722133929-kel4v89",
								"updated": "20220722133929"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "此上下文类似于"
								},
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "堆"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，在堆中可以随时插入元素，并且只能检索最大堆元素(优先队列中位于顶部的元素)。"
								}
							]
						}
					]
				},
				{
					"ID": "20220722133929-u9jed57",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20220722133929-u9jed57",
						"updated": "20220722133929"
					},
					"Children": [
						{
							"ID": "20220722133929-mtqrxe0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220722133929-mtqrxe0",
								"updated": "20220722133929"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "优先队列被实现为"
								},
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "容器适配器"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，容器适配器即将特定容器类封装作为其底层容器类，"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "queue"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "提供一组特定的成员函数来访问其元素。元素从"
								},
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "特定容器的“尾部”弹出，其称为优先队列的顶部"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20220722133929-csrar31",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20220722133929-csrar31",
						"updated": "20220722133929"
					},
					"Children": [
						{
							"ID": "20220722133929-37ehxb3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220722133929-37ehxb3",
								"updated": "20220722133929"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "底层容器可以是任何标准容器类模板，也可以是其他特定设计的容器类。容器应该可以通过随机访问迭代器访问，并支持以下操作：\n"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "empty()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：检测容器是否为空\n"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "size()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：返回容器中有效元素个数\n"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "front()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：返回容器中第一个元素的引用\n"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "push_back()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：在容器尾部插入元素\n"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "pop_back()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "：删除容器尾部元素"
								}
							]
						}
					]
				},
				{
					"ID": "20220722133929-3idi623",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20220722133929-3idi623",
						"updated": "20220722133929"
					},
					"Children": [
						{
							"ID": "20220722133929-58hbc9y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220722133929-58hbc9y",
								"updated": "20220722133929"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "标准容器类"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "vector"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "和"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "deque"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "满足这些需求。默认情况下，如果没有为特定的priority_queue类实例化指定容器类，则使用"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "vector"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20220722133929-4v3b892",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20220722133929-4v3b892",
						"updated": "20220722133929"
					},
					"Children": [
						{
							"ID": "20220722133929-o14itb8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220722133929-o14itb8",
								"updated": "20220722133929"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "需要支持"
								},
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "随机访问迭代器"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，以便始终在内部保持堆结构。容器适配器通过在需要时自动调用算法函数"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "make_heap"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "、"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "push_heap"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "和"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "pop_heap"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "来自动完成此操作。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220722133929-3kth2fo",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722133929-3kth2fo",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "priority_queue的使用"
				}
			]
		},
		{
			"ID": "20220722133929-afnrh40",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220722133929-afnrh40",
				"updated": "20220722134241"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220722133929-pblaqdx",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220722133929-pblaqdx",
						"updated": "20220722133929"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "优先级队列默认使用vector作为其底层存储数据的容器，在vector上又使用了堆算法将vector中元素构造成堆的结构，因此priority_queue就是堆，所有需要用到堆的位置，都可以考虑使用priority_queue。"
						}
					]
				},
				{
					"ID": "20220722133929-xvm476q",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220722133929-xvm476q",
						"updated": "20220722133929"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "注意：默认情况下priority_queue是大堆。"
						}
					]
				},
				{
					"ID": "20220722133929-k0wsnsc",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220722133929-k0wsnsc",
						"updated": "20220722134241"
					},
					"Children": [
						{
							"Type": "NodeImage",
							"Data": "span",
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "assets/"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/020220529201449.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "![[Pasted image 20220529201449.png]]"
						}
					]
				}
			]
		},
		{
			"ID": "20220722133929-81jezh5",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220722133929-81jezh5",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "priority_queue 的模拟实现"
				}
			]
		},
		{
			"ID": "20220722133929-1xqvbnw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-1xqvbnw",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "要注意到我们事项priority_queue 时，需要用到"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "仿函数"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 。"
				}
			]
		},
		{
			"ID": "20220722133929-j0zz6x6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-j0zz6x6",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现代码："
				}
			]
		},
		{
			"ID": "20220722133929-3l722vf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722133929-3l722vf",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#pragma once\n\nnamespace fmy\n{\n\ttemplate\u003cclass T\u003e\n\tstruct Less // 这就是一个仿函数\n\t{\n\t\tbool operator()(const T\u0026 x, const T\u0026 y) const\n\t\t{\n\t\t\treturn x \u003c y;\n\t\t}\n\t};\n\n\ttemplate\u003cclass T\u003e\n\tstruct Greater // 这就是一个仿函数\n\t{ \n\t\tbool operator()(const T\u0026 x , const T\u0026 y) const{\n\t\t\treturn x \u003e y;\n\t\t}\n\t};\n\n\ttemplate\u003cclass T, class Container = vector\u003cT\u003e, class Compare = Less\u003cT\u003e \u003e //默认的仿函数为Less。\n\tclass priority_queue\n\t{\n\tprivate:\n\t\tvoid adjust_up(size_t child)\n\t\t{\n\t\t\tCompare com;\n\t\t\tsize_t parent = (child - 1) / 2;\n\n\t\t\twhile (child \u003e 0)\n\t\t\t{\n\t\t\t\tif (com(_con[parent], _con[child]))\n\t\t\t\t{\n\t\t\t\t\tswap(_con[parent], _con[child]);\n\t\t\t\t\tchild = parent;\n\t\t\t\t\tparent = (child - 1) / 2;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tvoid adjust_down(size_t parent)\n\t\t{\n\t\t\tCompare com;\n\t\t\tsize_t child = parent * 2 + 1;\n\t\t\twhile (child \u003c _con.size())\n\t\t\t{\n\t\t\t\tif (child + 1 \u003c _con, size() \u0026\u0026 com(_con[child] \u003c _con[child + 1]))\n\t\t\t\t{\n\t\t\t\t\t++child;\n\t\t\t\t}\n\n\t\t\t\tif (com(_con[parent], _con[child]))\n\t\t\t\t{\n\t\t\t\t\tswap(_con[parent], _con[child]);\n\t\t\t\t\tparent = child;\n\t\t\t\t\tchild = parent * 2 + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\tpublic:\n\t\tpriority_queue()\n\t\t{}\n\n\t\ttemplate \u003cclass InputIterator\u003e\n\t\tpriority_queue(InputIterator first, InputIterator last)\n\t\t\t:_con(first , last)\n\t\t{\n\t\t\tfor (int i = (_con.size() - 1 - 1) / 2; i \u003e= 0; --i)\n\t\t\t{\n\t\t\t\tabjust_down(i);\n\t\t\t}\n\t\t}\n\n\t\tvoid push(const T\u0026 x)\n\t\t{\n\t\t\t_con.push(x);\n\t\t\tadjust_up(_con.size() - 1);\n\t\t}\n\n\t\tvoid pop()\n\t\t{\n\t\t\tswap(_con[0], _con[size() - 1]);\n\t\t\t_con.pop();\n\t\t\tadjust_down(0);\n\t\t}\n\n\t\tconst T\u0026 top()\n\t\t{\n\t\t\treturn _con[0];\n\t\t}\n\n\t\tsize_t size()\n\t\t{\n\t\t\treturn _con.size();\n\t\t}\n\n\t\tbool empty()\n\t\t{\n\t\t\treturn _con.empty();\n\t\t}\n\n\tprivate:\n\t\tContainer _con;\n\t};\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220722133929-6b5myzu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-6b5myzu",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "测试代码："
				}
			]
		},
		{
			"ID": "20220722133929-9p0k3ok",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722133929-9p0k3ok",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003ciostream\u003e\n#include \u003cvector\u003e\n#include \u003cfunctional\u003e\n#include \"priority_queue\" //这就是我们写的priority_queue\n\nusing std::cout;\nusing std::endl;\n\nvoid test_priority_queue()\n{\n\tpriority_queue\u003cint , vector\u003cint\u003e , greater\u003cint\u003e \u003e pq;\n\tpq.push(1);\n\tpq.push(2);\n\tpq.push(6);\n\tpq.push(4);\n\tpq.push(1);\n\n\twhile (!pq.empty())\n\t{\n\t\tcout \u003c\u003c pq.top() \u003c\u003c \" \";\n\t\tpq.pop();\n\t\tcout \u003c\u003c endl;\n\t}\n}\n\nint main()\n{\n\ttest_priority_queue();\n\treturn 0;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220722133929-9gnjir4",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722133929-9gnjir4",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "仿函数"
				}
			]
		},
		{
			"ID": "20220722133929-gveior2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-gveior2",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "仿函数，又名 函数对象。"
				}
			]
		},
		{
			"ID": "20220722133929-f1rh8ij",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-f1rh8ij",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "仿函数(functor)，就是使"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "一个类的使用看上去像一个函数"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。其实现就是类中实现一个"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "operator()"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，这个类就有了类似函数的行为，就是一个仿函数类了。"
				}
			]
		},
		{
			"ID": "20220722133929-jxlnwor",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-jxlnwor",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先看priority_queue的类模板："
				}
			]
		},
		{
			"ID": "20220722133929-svwuw6m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722133929-svwuw6m",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "template\u003cclass T, class Container = vector\u003cT\u003e, class Compare = Less\u003cT\u003e \u003e //默认的仿函数为Less。\n\tclass priority_queue\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220722133929-y3p25k1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-y3p25k1",
				"updated": "20220722134445"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "类模板"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "第三个参数"
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "就是我们实现的仿函数 ，默认的"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Less"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "缺省值就是以"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "降序排序"
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220722133929-uc0zsht",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-uc0zsht",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在priority_queue中，两个仿函数的实现，如："
				}
			]
		},
		{
			"ID": "20220722133929-lbjx59t",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722133929-lbjx59t",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "template\u003cclass T\u003e\nstruct Less // 这就是一个仿函数\n{\n\tbool operator()(const T\u0026 x, const T\u0026 y) const\n\t{\n\t\treturn x \u003c y;\n\t}\n};\n\ntemplate\u003cclass T\u003e\nstruct Greater // 这就是一个仿函数\n{ \n\tbool operator()(const T\u0026 x , const T\u0026 y) const{\n\t\treturn x \u003e y;\n\t}\n};\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220722133929-if9ubl1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-if9ubl1",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "Less"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 控制的的 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "priority_queue"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "  中的"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "数组的降序(大堆)"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "Greater"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "控制的则是"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "数组的升序(小堆)"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220722133929-7m1iz65",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-7m1iz65",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "所以重载了"
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "()"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "  操作符 ，所以调用起来，非常像一个函数， 但实际上并不是函数，而是操作符重载。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20220722133929-xqlu96h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722133929-xqlu96h",
				"updated": "20220722133929"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在方法中就实现了调用：  以下默认调用仿函数 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Less"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20220722133929-w76e0zs",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722133929-w76e0zs",
				"ligatures": "true",
				"linewrap": "false",
				"style": "text-align: justify;",
				"updated": "20220722134802"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "void adjust_up(size_t child)\n{\n\tCompare com; //定义出类名，这里默认内部使用的是Less\n\tsize_t parent = (child - 1) / 2;\n\n\twhile (child \u003e 0)\n\t{\n\t\tif (com(_con[parent], _con[child])) //这里就是调用了我们写的Less的仿函数，在仿函数进行比较\n\t\t{\n\t\t\tswap(_con[parent], _con[child]);\n\t\t\tchild = parent;\n\t\t\tparent = (child - 1) / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n\nvoid adjust_down(size_t parent)\n{\n\tCompare com;//实例化仿函数\n\tsize_t child = parent * 2 + 1;\n\twhile (child \u003c _con.size())\n\t{\n\t\tif (child + 1 \u003c _con, size() \u0026\u0026 com(_con[child] \u003c _con[child + 1]))//此处的com也是调用了仿函数Less\n\t\t{\n\t\t\t++child;\n\t\t}\n\n\t\tif (com(_con[parent], _con[child]))//此处的com也是调用了仿函数Less\n\t\t{\n\t\t\tswap(_con[parent], _con[child]);\n\t\t\tparent = child;\n\t\t\tchild = parent * 2 + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n}\n‍‍```\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220722134926-mbusl30",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722134926-mbusl30"
			}
		}
	]
}