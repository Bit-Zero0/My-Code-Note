{
	"ID": "20230505214840-vwy39tt",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230505214840-vwy39tt",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20230505214850-fmb4hwz\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230505214850-plink74\u0026quot;,\u0026quot;scrollTop\u0026quot;:3372,\u0026quot;focusId\u0026quot;:\u0026quot;20230505214850-kou4p41\u0026quot;,\u0026quot;focusStart\u0026quot;:86,\u0026quot;focusEnd\u0026quot;:86}",
		"title": "Docker的基本组成",
		"updated": "20230505214850"
	},
	"Children": [
		{
			"ID": "20230505214850-fmb4hwz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-fmb4hwz",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "**Docker主要由三大部分组成: "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "镜像(image)"
				},
				{
					"Type": "NodeText",
					"Data": " , "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "容器(container)"
				},
				{
					"Type": "NodeText",
					"Data": " ,  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "仓库(repository)"
				},
				{
					"Type": "NodeText",
					"Data": " **"
				}
			]
		},
		{
			"ID": "20230505214850-9bkj9u7",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230505214850-9bkj9u7",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "镜像(image)"
				}
			]
		},
		{
			"ID": "20230505214850-g66d0ab",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-g66d0ab",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Docker 镜像"
				},
				{
					"Type": "NodeText",
					"Data": "(Image)就是一个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "只读"
				},
				{
					"Type": "NodeText",
					"Data": "的模板。镜像可以用来创建 Docker 容器，一个镜像可以创建很多容器。"
				}
			]
		},
		{
			"ID": "20230505214850-qwndynd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-qwndynd",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它也相当于是一个root文件系统。比如官方镜像 centos:7 就包含了完整的一套 centos:7 最小系统的 root 文件系统。"
				}
			]
		},
		{
			"ID": "20230505214850-69292dx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-69292dx",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "相当于容器的“源代码”，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "docker镜像文件类似于Java的类模板，而docker容器实例类似于java中new出来的实例对象"
				},
				{
					"Type": "NodeText",
					"Data": "。\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230427162543.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230505214850-1c06iyb",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230505214850-1c06iyb",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "容器(container)"
				}
			]
		},
		{
			"ID": "20230505214850-pmaed21",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-pmaed21",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "从面向对象角度"
				},
				{
					"Type": "NodeText",
					"Data": "\nDocker 利用容器（Container）独立运行的一个或一组应用，应用程序或服务运行在容器里面，容器就类似于一个虚拟化的运行环境，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "容器是用镜像创建的运行实例"
				},
				{
					"Type": "NodeText",
					"Data": "。就像是Java中的类和实例对象一样，镜像是静态的定义，容器是镜像运行时的实体。容器为镜像提供了一个标准的和隔离的运行环境，它可以被启动、开始、停止、删除。每个容器都是相互隔离的、保证安全的平台"
				}
			]
		},
		{
			"ID": "20230505214850-xeb1msn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-xeb1msn",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "从镜像容器角度"
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "可以把容器看做是一个简易版的 Linux 环境"
				},
				{
					"Type": "NodeText",
					"Data": "（包括root用户权限、进程空间、用户空间和网络空间等）和运行在其中的应用程序。"
				}
			]
		},
		{
			"ID": "20230505214850-gz3ao17",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230505214850-gz3ao17",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "仓库(repository)"
				}
			]
		},
		{
			"ID": "20230505214850-95x0yif",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-95x0yif",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "仓库（Repository）是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "集中存放镜像文件的场所"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230505214850-8t0ymui",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-8t0ymui",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类似于"
				}
			]
		},
		{
			"ID": "20230505214850-dueibf5",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230505214850-dueibf5",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230505214850-ry11tka",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230505214850-ry11tka",
						"updated": "20230505214850"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "Maven仓库，存放各种jar包的地方；\ngithub仓库，存放各种git项目的地方；\nDocker公司提供的官方registry被称为Docker Hub，存放各种镜像模板的地方。"
						}
					]
				}
			]
		},
		{
			"ID": "20230505214850-da51l5v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-da51l5v",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "仓库分为公开仓库（Public）和私有仓库（Private）两种形式。\n最大的公开仓库是 Docker Hub(https://hub.docker.com/)，\n存放了数量庞大的镜像供用户下载。国内的公开仓库包括阿里云 、网易云等"
				}
			]
		},
		{
			"ID": "20230505214850-0gtiu06",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230505214850-0gtiu06",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "小总结"
				}
			]
		},
		{
			"ID": "20230505214850-c7q4hxk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-c7q4hxk",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "需要正确的理解仓库/镜像/容器这几个概念:"
				}
			]
		},
		{
			"ID": "20230505214850-8o4ufn4",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230505214850-8o4ufn4",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230505214850-lzz3ed1",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230505214850-lzz3ed1",
						"updated": "20230505214850"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "Docker 本身是一个容器运行载体或称之为管理引擎。我们把应用程序和配置依赖打包好形成一个可交付的运行环境，这个打包好的运行环境就是image镜像文件。只有通过这个镜像文件才能生成Docker容器实例(类似Java中new出来一个对象)。"
						}
					]
				}
			]
		},
		{
			"ID": "20230505214850-z9una33",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-z9una33",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "image文件可以看作是容器的模板。Docker 根据 image 文件生成容器的实例。同一个 image 文件，可以生成多个同时运行的容器实例。"
				}
			]
		},
		{
			"ID": "20230505214850-cf0ukqh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-cf0ukqh",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "镜像文件"
				}
			]
		},
		{
			"ID": "20230505214850-qy74a2v",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230505214850-qy74a2v",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"ID": "20230505214850-lzihfnw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230505214850-lzihfnw",
						"updated": "20230505214850"
					},
					"Children": [
						{
							"ID": "20230505214850-hs25ua5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230505214850-hs25ua5",
								"updated": "20230505214850"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "image 文件生成的容器实例，本身也是一个文件，称为镜像文件。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230505214850-ej3m3gt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-ej3m3gt",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "容器实例"
				}
			]
		},
		{
			"ID": "20230505214850-an2eamg",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230505214850-an2eamg",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"ID": "20230505214850-x8vx64j",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230505214850-x8vx64j",
						"updated": "20230505214850"
					},
					"Children": [
						{
							"ID": "20230505214850-alr6xu0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230505214850-alr6xu0",
								"updated": "20230505214850"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个容器运行一种服务，当我们需要的时候，就可以通过docker客户端创建一个对应的运行实例，也就是我们的容器"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230505214850-tui4z7i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-tui4z7i",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "仓库"
				}
			]
		},
		{
			"ID": "20230505214850-t1g2sz6",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230505214850-t1g2sz6",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"ID": "20230505214850-9bb3agi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230505214850-9bb3agi",
						"updated": "20230505214850"
					},
					"Children": [
						{
							"ID": "20230505214850-qh2pyzc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230505214850-qh2pyzc",
								"updated": "20230505214850"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "就是放一堆镜像的地方，我们可以把镜像发布到仓库中，需要的时候再从仓库中拉下来就可以了。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230505214850-m2cxqsm",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230505214850-m2cxqsm",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Docker平台架构图解"
				}
			]
		},
		{
			"ID": "20230505214850-6cpeyz9",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230505214850-6cpeyz9",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Docker平台架构图解(入门版)"
				}
			]
		},
		{
			"ID": "20230505214850-vcg0yku",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-vcg0yku",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230427163021.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230505214850-ted8gkp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-ted8gkp",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Docker是一个Client-Server结构的系统，Docker守护进程运行在主机上， 然后通过Socket连接从客户端访问，守护进程从客户端接受命令并管理运行在主机上的容器。 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "容器，是一个运行时环境，就是我们前面说到的集装箱"
				},
				{
					"Type": "NodeText",
					"Data": "。可以对比mysql演示对比讲解\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230427163050.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230505214850-k5kev1t",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230505214850-k5kev1t",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Docker平台架构图解(架构版)"
				}
			]
		},
		{
			"ID": "20230505214850-dddtgib",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230505214850-dddtgib",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Docker是一个C/S模式的架构，后端是一个松耦合架构，众多模块各司其职。Docker运行的基本流程为:"
				}
			]
		},
		{
			"ID": "20230505214850-plink74",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230505214850-plink74",
				"updated": "20230505214850"
			},
			"Children": [
				{
					"ID": "20230505214850-lvp4wf1",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230505214850-lvp4wf1",
						"updated": "20230505214850"
					},
					"Children": [
						{
							"ID": "20230505214850-42s2myh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230505214850-42s2myh",
								"updated": "20230505214850"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用户是使用Docker Client与 Docker Daemon建立通信，并发送请求给后者。"
								}
							]
						}
					]
				},
				{
					"ID": "20230505214850-hd5mwu2",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230505214850-hd5mwu2",
						"updated": "20230505214850"
					},
					"Children": [
						{
							"ID": "20230505214850-r465evj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230505214850-r465evj",
								"updated": "20230505214850"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker Daemon作为Docker架构中的主体部分，首先提供Docker Server的功能使其可以接受Docker Client的请求。"
								}
							]
						}
					]
				},
				{
					"ID": "20230505214850-s6bgo4g",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230505214850-s6bgo4g",
						"updated": "20230505214850"
					},
					"Children": [
						{
							"ID": "20230505214850-2fc9vj9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230505214850-2fc9vj9",
								"updated": "20230505214850"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Docker Engine执行Docker内部的一系列工作，每一项工作都是以一个Job的形式的存在。"
								}
							]
						}
					]
				},
				{
					"ID": "20230505214850-elfuii0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230505214850-elfuii0",
						"updated": "20230505214850"
					},
					"Children": [
						{
							"ID": "20230505214850-5d1g6bi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230505214850-5d1g6bi",
								"updated": "20230505214850"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Job的运行过程中，当需要容器镜像时，则从Docker Registry中下载镜像，并通过镜像管理驱动Graph driver将下载镜像以Graph的形式存储。"
								}
							]
						}
					]
				},
				{
					"ID": "20230505214850-enwy1mx",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20230505214850-enwy1mx",
						"updated": "20230505214850"
					},
					"Children": [
						{
							"ID": "20230505214850-9h9vzry",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230505214850-9h9vzry",
								"updated": "20230505214850"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当需要为Docker创建网络环境时，通过网络管理驱动Network driver创建并配置Docker容器网络环境。"
								}
							]
						}
					]
				},
				{
					"ID": "20230505214850-8i9qqio",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20230505214850-8i9qqio",
						"updated": "20230505214850"
					},
					"Children": [
						{
							"ID": "20230505214850-3e9h9m1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230505214850-3e9h9m1",
								"updated": "20230505214850"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当需要限制Docker容器运行资源或执行用户指令等操作时，则通过Exec driver 来完成。"
								}
							]
						}
					]
				},
				{
					"ID": "20230505214850-ndtfpz9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ny4=",
						"Num": 7
					},
					"Properties": {
						"id": "20230505214850-ndtfpz9",
						"updated": "20230505214850"
					},
					"Children": [
						{
							"ID": "20230505214850-kou4p41",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230505214850-kou4p41",
								"updated": "20230505214850"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Libcontainer是一项独立的容器管理包，Network driver以及Exec driver都是通过Libcontainer来实现具体对容器进行的操作。\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image.png"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230427164052.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		}
	]
}