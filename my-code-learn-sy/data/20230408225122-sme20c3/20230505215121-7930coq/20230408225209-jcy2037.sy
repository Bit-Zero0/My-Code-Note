{
	"ID": "20230408225209-jcy2037",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230408225209-jcy2037",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20230409224954-nak5ovz\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230409224954-p4as2yn\u0026quot;,\u0026quot;scrollTop\u0026quot;:85189.3359375,\u0026quot;focusId\u0026quot;:\u0026quot;20230409224954-5arj3mc\u0026quot;,\u0026quot;focusStart\u0026quot;:5,\u0026quot;focusEnd\u0026quot;:5}",
		"title": "Redis十大数据类型",
		"updated": "20230409224954"
	},
	"Children": [
		{
			"ID": "20230409224954-nak5ovz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-nak5ovz",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "redis常见数据类型操作命令查询："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://redis.io/commands/",
					"TextMarkTextContent": "官网英文"
				},
				{
					"Type": "NodeText",
					"Data": "   "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "http: //www.redis.cn/commands.html",
					"TextMarkTextContent": "中文"
				}
			]
		},
		{
			"ID": "20230409224954-4lmrsgf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-4lmrsgf",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "提前声明"
				},
				{
					"Type": "NodeText",
					"Data": "："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "这里说的数据类型是value的数据类型，key的类型都是字符串"
				}
			]
		},
		{
			"ID": "20230409224954-h3noppu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-h3noppu",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "redis十大数据类型："
				}
			]
		},
		{
			"ID": "20230409224954-g63effs",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230409224954-g63effs",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230409224954-8uci197",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230409224954-8uci197",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "redis字符串("
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "String"
						},
						{
							"Type": "NodeText",
							"Data": ")\nredis列表("
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "List"
						},
						{
							"Type": "NodeText",
							"Data": ")\nredis哈希表("
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "Hash"
						},
						{
							"Type": "NodeText",
							"Data": ")\nredis集合("
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "Set"
						},
						{
							"Type": "NodeText",
							"Data": ")\nredis有序集合("
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "ZSet"
						},
						{
							"Type": "NodeText",
							"Data": ")\nredis地理空间("
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "GEO"
						},
						{
							"Type": "NodeText",
							"Data": ")\nredis基数统计("
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "HyperLogLog"
						},
						{
							"Type": "NodeText",
							"Data": ")\nredis位图("
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "bitmap"
						},
						{
							"Type": "NodeText",
							"Data": ")\nredis位域("
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "bitfield"
						},
						{
							"Type": "NodeText",
							"Data": ")\nredis流("
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "Stream"
						},
						{
							"Type": "NodeText",
							"Data": ")"
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-wvisioc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-wvisioc",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230408204802.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-lxv29a5",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230409224954-lxv29a5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Redis常用键(key)"
				}
			]
		},
		{
			"ID": "20230409224954-2gzmm5z",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				2
			],
			"Properties": {
				"colgroup": "|",
				"id": "20230409224954-2gzmm5z",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "指令"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "效果"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "key *"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "查看当前库的所有Key"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "exists key"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "判断某个key是否存在"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "type key"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "查看你的key是什么类型"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "del key"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "删除指定的key数据"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "unlink key"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "非阻塞删除，仅仅将keys从keyspace元数据中删除，真正的删除会在后续异步中操作。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ttl key"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "查看还有多少秒过期，-1表示永不过期，-2表示已过期"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "expire key 秒钟"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "为给定的key设置过期时间"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "move key dbindex [0-15]"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "将当前数据库的key移动到给定的数据库db 当中"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "select dbindex"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "切换数据库【0-15】，默认为0"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "dbsize"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "查看当前数据库key的数量"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "flushdb "
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "清空当前库"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "flushall"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通杀全部库"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-s0d6y8w",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-s0d6y8w",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "key *"
				}
			]
		},
		{
			"ID": "20230409224954-16mmomx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-16mmomx",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看当前库的所有Key"
				}
			]
		},
		{
			"ID": "20230409224954-s4ybebk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-s4ybebk",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e keys *\n(empty array)\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e set k1 v1\nOK\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e keys *\n1) \"k1\"\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e set k2 v2\nOK\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e keys *\n1) \"k2\"\n2) \"k1\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-pnr3b7s",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-pnr3b7s",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "exists key"
				}
			]
		},
		{
			"ID": "20230409224954-q0cqrud",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-q0cqrud",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "判断某个key是否存在, 会返回存在key 。 判断多个key时 ，返回key存在的个数。"
				}
			]
		},
		{
			"ID": "20230409224954-mytg39g",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-mytg39g",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e set k1 v1\nOK\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e set k2 v2\nOK\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e EXISTS k1\n(integer) 1\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e EXISTS k1 k2\n(integer) 2\n127.0.0.1:6379\u003e EXISTS k3\n(integer) 0\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e EXISTS k1 k2 k3  #k3不存在 ，所以返回2\n(integer) 2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-pjzbws4",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-pjzbws4",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "type key"
				}
			]
		},
		{
			"ID": "20230409224954-df1hnut",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-df1hnut",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看你的key是什么类型"
				}
			]
		},
		{
			"ID": "20230409224954-6ihwakz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-6ihwakz",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e set k2 v2\nOK\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e TYPE k2\nstring\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-146wpz3",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-146wpz3",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "del key"
				}
			]
		},
		{
			"ID": "20230409224954-x1jrfeb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-x1jrfeb",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "删除指定的key数据"
				}
			]
		},
		{
			"ID": "20230409224954-4ntn09i",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-4ntn09i",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e set k2 v2\nOK\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e DEL k2  #删除存在的key成功会1。删除不存在的返回0\n(integer) 1\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e DEL k3 # 该key不存在\n(integer) 0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-4gmtvxf",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-4gmtvxf",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "unlink key"
				}
			]
		},
		{
			"ID": "20230409224954-4r7w9u5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-4r7w9u5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "非阻塞删除，仅仅将keys从keyspace元数据中删除，真正的删除会在后续异步中操作。"
				}
			]
		},
		{
			"ID": "20230409224954-78zwwqc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-78zwwqc",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "del key 是原子的删除，只有删除成功了才会返回删除结果，如果是删除大key用del会将后面的操作都阻塞，而unlink key 不会阻塞，它会在后台异步删除数据。"
				}
			]
		},
		{
			"ID": "20230409224954-bo3va2o",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-bo3va2o",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ttl key"
				}
			]
		},
		{
			"ID": "20230409224954-5skycc8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-5skycc8",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看还有多少秒过期，-1表示永不过期，-2表示已过期"
				}
			]
		},
		{
			"ID": "20230409224954-purw4og",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-purw4og",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e TTL k1 #使用默认的set创建时，都是永久的\n(integer) -1\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-4b3tt96",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-4b3tt96",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "expire key 秒钟"
				}
			]
		},
		{
			"ID": "20230409224954-ro57vw7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-ro57vw7",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为给定的key设置过期时间"
				}
			]
		},
		{
			"ID": "20230409224954-v0mxvk5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-v0mxvk5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e TTL k1\n(integer) -1\n127.0.0.1:6379\u003e EXPIRE k1 10  #设置k1的过期时间\n(integer) 1\n127.0.0.1:6379\u003e TTL k1\n(integer) 8\n127.0.0.1:6379\u003e TTL k1\n(integer) 6\n127.0.0.1:6379\u003e TTL k1\n(integer) 4\n127.0.0.1:6379\u003e TTL k1 #-2表示已过期\n(integer) -2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-79wdqz7",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-79wdqz7",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "select dbindex"
				}
			]
		},
		{
			"ID": "20230409224954-vbeg2iy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-vbeg2iy",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "切换数据库【0-15】，默认为0"
				}
			]
		},
		{
			"ID": "20230409224954-onjk5vr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-onjk5vr",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e select 2 #选择使用2号库，只要不是0号库，端口号后都会有数字标记\nOK\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-hsix4it",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-hsix4it",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "move key dbindex[0-15]"
				}
			]
		},
		{
			"ID": "20230409224954-o0fwdqr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-o0fwdqr",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将当前数据库的key移动到给定的数据库DB当中"
				}
			]
		},
		{
			"ID": "20230409224954-we4kcvi",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-we4kcvi",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e keys *\n1) \"k1\"\n2) \"k2\"\n3) \"k3\"\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e move k2 2 #将k2移动到2号库\n(integer) 1\n127.0.0.1:6379\u003e select 2 #选择使用2号库，只要不是0号库，端口号后都会有数字标记\nOK\n127.0.0.1:6379[2]\u003e keys * \n1) \"k2\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-9dcrw86",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-9dcrw86",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "dbsize"
				}
			]
		},
		{
			"ID": "20230409224954-nao1dje",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-nao1dje",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看当前数据库key的数量"
				}
			]
		},
		{
			"ID": "20230409224954-knxyj8q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-knxyj8q",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e dbsize\n(integer) 2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-y85g9zr",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-y85g9zr",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "11.flushdb"
				}
			]
		},
		{
			"ID": "20230409224954-zea5icr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-zea5icr",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "清空当前库"
				}
			]
		},
		{
			"ID": "20230409224954-yxwvsqk",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-yxwvsqk",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "12.flushall(慎用)"
				}
			]
		},
		{
			"ID": "20230409224954-7mxudyd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-7mxudyd",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通杀全部库"
				}
			]
		},
		{
			"ID": "20230409224954-ilgh47g",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230409224954-ilgh47g",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "String"
				}
			]
		},
		{
			"ID": "20230409224954-4d9v9la",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-4d9v9la",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://redis.io/docs/data-types/strings/",
					"TextMarkTextContent": "官网介绍::string"
				},
				{
					"Type": "NodeText",
					"Data": "\nstring是redis最基本的类型，一个key对应一个value。"
				}
			]
		},
		{
			"ID": "20230409224954-9a0a6m1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-9a0a6m1",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "string类型是二进制安全的，意思是redis的string可以包含任何数据，比如jpg图片或者序列化的对象 。"
				}
			]
		},
		{
			"ID": "20230409224954-mo8a2x4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-mo8a2x4",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "string类型是Redis最基本的数据类型，一个redis中字符串value最多可以是512M、"
				}
			]
		},
		{
			"ID": "20230409224954-hnmmjyg",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-hnmmjyg",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "String常用指令"
				}
			]
		},
		{
			"ID": "20230409224954-efrkj5c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-efrkj5c",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230408213131.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-fonutyr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-fonutyr",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230408212833.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-am65r9s",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-am65r9s",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "get 与 set的返回值"
				}
			]
		},
		{
			"ID": "20230409224954-g7s2dc9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-g7s2dc9",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e set k2 v2 nx\nOK\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e set k1 v1 nx #key存在会失败\n(nil)\n127.0.0.1:6379\u003e set k2 v2uu xx #key存在会使用新值覆盖旧值\nOK\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e set k1 k1yy xx get #先获取key对应的原始值，然后再设新值\n\"v1\"\n127.0.0.1:6379\u003e get k1\n\"k1yy\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-7vaxwe6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-7vaxwe6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "设置与查看过期时间"
				}
			]
		},
		{
			"ID": "20230409224954-kqi2wc4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-kqi2wc4",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e set k1 v1 ex 30 #设置过期时间为30秒\nOK\n127.0.0.1:6379\u003e ttl k1\n(integer) 27\n127.0.0.1:6379\u003e set k1 v1 ex 30 #为key设置新值时，它会将原来的过期时间默认覆盖掉除非设置新的过期时间\nOK\n127.0.0.1:6379\u003e ttl k1\n(integer) 28\n127.0.0.1:6379\u003e set k1 v23\nOK\n127.0.0.1:6379\u003e ttl k1\n(integer) -1\n\n127.0.0.1:6379\u003e set k1 v1 ex 30\nOK\n127.0.0.1:6379\u003e ttl k1\n(integer) 28\n127.0.0.1:6379\u003e set k1 k23 keepttl #保留最开始设置的过期时间，它不会被新值所覆盖\nOK\n127.0.0.1:6379\u003e ttl k1\n(integer) 7\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-uwsuf3w",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-uwsuf3w",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同时设置/获取多个键值"
				}
			]
		},
		{
			"ID": "20230409224954-eaq6f5k",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-eaq6f5k",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e mset k4 v4 k5 v5 k1 v1\nOK\n127.0.0.1:6379\u003e msetnx k4 v4 k5 v5 k1 v1 #只有一个失败，全失败\n(integer) 0\n\n127.0.0.1:6379\u003e msetnx k6 v6 k7 v7 #设置的所有key不存在，才会成功\n(integer) 1\n127.0.0.1:6379\u003e mget k1 k3 k5 k7\n1) \"v1\"\n2) \"v3\"\n3) \"v5\"\n4) \"v7\"\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-0r68hoq",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-0r68hoq",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取指定区间范围内的值"
				}
			]
		},
		{
			"ID": "20230409224954-64vpkhf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-64vpkhf",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "getrange/setrange\n范围的值是使用下标计算。"
				}
			]
		},
		{
			"ID": "20230409224954-6bowo0u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-6bowo0u",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e set k1 abcd123\nOK\n127.0.0.1:6379\u003e getrange k1 0 3\n\"abcd\"\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e getrange k1 0 -1 # 结束下标为-1表示获取的字符串最后一位\n\"abcd123\"\n\n127.0.0.1:6379\u003e getrange k1 0 3\n\"abcd\"\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e setrange k1 0 hhhh\n(integer) 7\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e GETRANGE k1 0 -1 # 表示从0位开始替换\n\"hhhh123\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-06ictmr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-06ictmr",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数值增减"
				}
			]
		},
		{
			"ID": "20230409224954-b6uc8v4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-b6uc8v4",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一定要是数据才能进行加减"
				}
			]
		},
		{
			"ID": "20230409224954-8xs39wf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-8xs39wf",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "递增数字："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "INCR key"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-n97evmf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-n97evmf",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "增加指定的整数："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "INCRBY key increment"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-dxir43w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-dxir43w",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "递减数值："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DECR key"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-g1vy362",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-g1vy362",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "减少指定的整数："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "DECRBY key decrement"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-jxk257l",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-jxk257l",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e incr k1\n(error) ERR value is not an integer or out of range\n127.0.0.1:6379\u003e set k1 10\nOK\n127.0.0.1:6379\u003e incr k1\n(integer) 11\n127.0.0.1:6379\u003e incr k1\n(integer) 12\n\n127.0.0.1:6379\u003e incrby k1 5\n(integer) 17\n127.0.0.1:6379\u003e incrby k1 5\n(integer) 22\n\n127.0.0.1:6379\u003e decr k1\n(integer) 21\n127.0.0.1:6379\u003e decr k1\n(integer) 20\n\n127.0.0.1:6379\u003e decrby k1 5\n(integer) 15\n127.0.0.1:6379\u003e decrby k1 5\n(integer) 10\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-0n9q0bp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-0n9q0bp",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取字符串长度和内容追加"
				}
			]
		},
		{
			"ID": "20230409224954-0zyshrg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-0zyshrg",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取字符串长度："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "strlen key"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-ze531dh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-ze531dh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字符串内容追加："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "append key value"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-2bdmy2h",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-2bdmy2h",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e set k1 abc\nOK\n127.0.0.1:6379\u003e strlen k1\n(integer) 3\n\n127.0.0.1:6379\u003e append k1 def\n(integer) 6\n127.0.0.1:6379\u003e get k1\n\"abcdef\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-wb6it3x",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-wb6it3x",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "分布式锁"
				}
			]
		},
		{
			"ID": "20230409224954-m802zx5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-m802zx5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "setnx key value"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-58paisj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-58paisj",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "setex(set with expire)键秒值/setnx(set if not exist)"
				},
				{
					"Type": "NodeText",
					"Data": "​\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230408220026.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-you74kh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-you74kh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "getset(先get再set)"
				}
			]
		},
		{
			"ID": "20230409224954-g55kdas",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-g55kdas",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "getset：将给定key的值设为value，并返回key的旧值(old value)。"
				}
			]
		},
		{
			"ID": "20230409224954-75qjewh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-75qjewh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单一句话：先get然后立即set"
				}
			]
		},
		{
			"ID": "20230409224954-0k8nmum",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-0k8nmum",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e getset k1 hello\n\"abcdef\"\n127.0.0.1:6379\u003e get k1\n\"hello\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-42h5w4u",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-42h5w4u",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "String应用场景"
				}
			]
		},
		{
			"ID": "20230409224954-kpuqho3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-kpuqho3",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "比如抖音无限点赞某个视频或者商品，点一下加一次"
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230408220313.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-n4dbuw6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-n4dbuw6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "是否喜欢的文章"
				}
			]
		},
		{
			"ID": "20230409224954-4x9cwas",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230409224954-4x9cwas",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230409224954-u3vc6le",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230409224954-u3vc6le",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "阅读数：只要点击了rest地址，直接可以使用incr key 命令增加一个数字1，完成记录数字\n​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "image.png"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230408220348.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "​"
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-ig6eriz",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230409224954-ig6eriz",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "List"
				}
			]
		},
		{
			"ID": "20230409224954-7jrk1ac",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-7jrk1ac",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Redis列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）"
				}
			]
		},
		{
			"ID": "20230409224954-zg4ioh0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-zg4ioh0",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它的底层实际是个双端链表，最多可以包含"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": " 2^32 - 1"
				},
				{
					"Type": "NodeText",
					"Data": "​ 个元素 (4294967295, 每个列表超过40亿个元素)"
				}
			]
		},
		{
			"ID": "20230409224954-802oje8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-802oje8",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "单key多value"
				}
			]
		},
		{
			"ID": "20230409224954-dp49poq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-dp49poq",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单说明："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "一个双端链表的结构"
				},
				{
					"Type": "NodeText",
					"Data": "，容量是2的32次方减1个元素大概40多亿，主要功能有push/pop等，一般用在栈、队列、消息队列等场景。left、right都可以插入添加；"
				}
			]
		},
		{
			"ID": "20230409224954-0frfrjd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-0frfrjd",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果键不存在，创建新的链表；"
				}
			]
		},
		{
			"ID": "20230409224954-q01visj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-q01visj",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果键已存在，新增内容；"
				}
			]
		},
		{
			"ID": "20230409224954-n45bcwm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-n45bcwm",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果值全移除，对应的键也就消失了"
				}
			]
		},
		{
			"ID": "20230409224954-9m8iej5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-9m8iej5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "em",
					"TextMarkTextContent": "它的底层实际上就是个双向链表，对两端的作性能很高，通过索引下标的操作中间的节点性能会较差"
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230408220844.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-10v3ucr",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-10v3ucr",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "List常用指令"
				}
			]
		},
		{
			"ID": "20230409224954-nep2uyp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-nep2uyp",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230408220421.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-ie0oxez",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-ie0oxez",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "lpush/rpush/lrange"
				}
			]
		},
		{
			"ID": "20230409224954-0i5nqd6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-0i5nqd6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "没有rrange"
				}
			]
		},
		{
			"ID": "20230409224954-63j3mmx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-63j3mmx",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e lpush list1 1 2 3 4 5\n(integer) 5\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e rpush list2 11 22 33 44 55\n(integer) 5\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e lrange list1 0 -1\n1) \"5\"\n2) \"4\"\n3) \"3\"\n4) \"2\"\n5) \"1\"\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e lrange list2 0 -1\n1) \"11\"\n2) \"22\"\n3) \"33\"\n4) \"44\"\n5) \"55\"\n127.0.0.1:6379\u003e rrang list1 0 -1\\\n(error) ERR unknown command 'rrang', with args beginning with: 'list1' '0' '-1\\'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-phkn68s",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-phkn68s",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "lpop/rpop"
				}
			]
		},
		{
			"ID": "20230409224954-zoi9cjo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-zoi9cjo",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e lpop list1\n\"5\"\n127.0.0.1:6379\u003e lpop list1 2\n1) \"4\"\n2) \"3\"\n127.0.0.1:6379\u003e rpop list2 2\n1) \"55\"\n2) \"44\"\n\n127.0.0.1:6379\u003e lrange list1 0 -1\n1) \"2\"\n2) \"1\"\n127.0.0.1:6379\u003e lrange list2 0 -1\n1) \"11\"\n2) \"22\"\n3) \"33\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-4omt31l",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-4omt31l",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "lindex"
				}
			]
		},
		{
			"ID": "20230409224954-tfvq7ra",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-tfvq7ra",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "按照索引下标获得元素（从上到下）"
				}
			]
		},
		{
			"ID": "20230409224954-qt9ns94",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-qt9ns94",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e lindex list1 0\n\"2\"\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e lindex list2 0\n\"11\"\n127.0.0.1:6379\u003e lindex list1 3 # 没有的值会返回nil\n(nil)\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-nf0t2i5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-nf0t2i5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "llen"
				}
			]
		},
		{
			"ID": "20230409224954-jz4qfn2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-jz4qfn2",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取List列表中元素的个数"
				}
			]
		},
		{
			"ID": "20230409224954-8poym3q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-8poym3q",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e llen list1\n(integer) 2\n127.0.0.1:6379\u003e llen list2\n(integer) 3\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-rjldvzg",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-rjldvzg",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "lrem key 数字N 给定值v1"
				}
			]
		},
		{
			"ID": "20230409224954-xqovayg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-xqovayg",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "解释：删除N个值等于v1的元素"
				}
			]
		},
		{
			"ID": "20230409224954-ahjdy29",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-ahjdy29",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从left往right删除2个值等于v1的元素，返回的值为实际删除的数量"
				}
			]
		},
		{
			"ID": "20230409224954-j8b398o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-j8b398o",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "LREM list3 0 值，表示删除全部给定的值, "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "零个就是全部值"
				}
			]
		},
		{
			"ID": "20230409224954-uvya3de",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-uvya3de",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e lpush list3 v1 v1 v2 v2 v2 v3 v3 v4 v5 v1\n(integer) 10\n127.0.0.1:6379\u003e lrange list3 0 -1\n 1) \"v1\"\n 2) \"v5\"\n 3) \"v4\"\n 4) \"v3\"\n 5) \"v3\"\n 6) \"v2\"\n 7) \"v2\"\n 8) \"v2\"\n 9) \"v1\"\n10) \"v1\"\n\n127.0.0.1:6379\u003e lrem list3 0 v1\n(integer) 3\n127.0.0.1:6379\u003e lrange list3 0 -1\n1) \"v5\"\n2) \"v4\"\n3) \"v3\"\n4) \"v3\"\n5) \"v2\"\n6) \"v2\"\n7) \"v2\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-txli5gc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-txli5gc",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ltrim key 开始index 结束index"
				}
			]
		},
		{
			"ID": "20230409224954-sv2j2ej",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-sv2j2ej",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "截取指定范围的值后在赋值给key"
				}
			]
		},
		{
			"ID": "20230409224954-zaqjwo1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-zaqjwo1",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e lrange list3 0 -1\n1) \"v5\"\n2) \"v4\"\n3) \"v3\"\n4) \"v3\"\n5) \"v2\"\n6) \"v2\"\n7) \"v2\"\n127.0.0.1:6379\u003e ltrim list3 0 2\nOK\n127.0.0.1:6379\u003e lrange list3 0 -1\n1) \"v5\"\n2) \"v4\"\n3) \"v3\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-8sxa2gi",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-8sxa2gi",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "rpoplpush 源列表 目的列表"
				}
			]
		},
		{
			"ID": "20230409224954-drgzz5u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-drgzz5u",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "移除列表的最后一个元素，并将该元素添加到另一个列表并返回"
				}
			]
		},
		{
			"ID": "20230409224954-14ajrtw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-14ajrtw",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e lrange list1 0 -1\n1) \"2\"\n2) \"1\"\n127.0.0.1:6379\u003e lrange list2 0 -1\n1) \"11\"\n2) \"22\"\n3) \"33\"\n\n127.0.0.1:6379\u003e rpoplpush list1 list2\n\"1\"\n127.0.0.1:6379\u003e lrange list2 0 -1\n1) \"1\"\n2) \"11\"\n3) \"22\"\n4) \"33\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-cytpkvt",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-cytpkvt",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "lset key index value"
				}
			]
		},
		{
			"ID": "20230409224954-w62fs2a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-w62fs2a",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "让指定数组集合的小标位置值替换成新值"
				}
			]
		},
		{
			"ID": "20230409224954-69qffak",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-69qffak",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e lrange list2 0 -1\n1) \"1\"\n2) \"11\"\n3) \"22\"\n4) \"33\"\n127.0.0.1:6379\u003e lset list2 0 66\nOK\n127.0.0.1:6379\u003e lrange list2 0 -1\n1) \"66\"\n2) \"11\"\n3) \"22\"\n4) \"33\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-rr6kyqj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-rr6kyqj",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "linsert key before/after 已有值 插入的新值"
				}
			]
		},
		{
			"ID": "20230409224954-t85dtya",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-t85dtya",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e lrange list1 0 -1\n1) \"5\"\n2) \"4\"\n3) \"3\"\n4) \"2\"\n5) \"1\"\n\n127.0.0.1:6379\u003e linsert list1 before 1 Rust\n(integer) 6\n127.0.0.1:6379\u003e lrange list1 0 -1\n1) \"5\"\n2) \"4\"\n3) \"3\"\n4) \"2\"\n5) \"Rust\"\n6) \"1\"\n\n127.0.0.1:6379\u003e linsert list1 before 4 C++\n(integer) 7\n127.0.0.1:6379\u003e lrange list1 0 -1\n1) \"5\"\n2) \"C++\"\n3) \"4\"\n4) \"3\"\n5) \"2\"\n6) \"Rust\"\n7) \"1\"\n\n127.0.0.1:6379\u003e linsert list1 after  C++ Java\n(integer) 8\n127.0.0.1:6379\u003e lrange list1 0 -1\n1) \"5\"\n2) \"C++\"\n3) \"Java\"\n4) \"4\"\n5) \"3\"\n6) \"2\"\n7) \"Rust\"\n8) \"1\"\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-2qp05fl",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-2qp05fl",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "应用场景"
				}
			]
		},
		{
			"ID": "20230409224954-329aplk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-329aplk",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "微信公众号订阅的消息"
				}
			]
		},
		{
			"ID": "20230409224954-haal9ag",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230409224954-haal9ag",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"ID": "20230409224954-4j4xo5l",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230409224954-4j4xo5l",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"ID": "20230409224954-iy7hlu0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230409224954-iy7hlu0",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "大V作者李永乐老师和CSDN发布了文章分别是 11 和 22"
								}
							]
						}
					]
				},
				{
					"ID": "20230409224954-4jd0uuu",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230409224954-4jd0uuu",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"ID": "20230409224954-28lenpm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230409224954-28lenpm",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我关注了他们两个，只要他们发布了新文章，就会安装进我的List\n​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "  lpush likearticle:阳哥id    11 22"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-0ed7mtp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-0ed7mtp",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3 查看阳哥自己的号订阅的全部文章，类似分页，下面0~10就是一次显示10条\n​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "  lrange likearticle:阳哥id 0 9"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-cm75oox",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-cm75oox",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230408224956.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-6b9xgxm",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230409224954-6b9xgxm",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Hash"
				}
			]
		},
		{
			"ID": "20230409224954-p5n8naz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-p5n8naz",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Redis hash 是一个 string 类型的 field（字段） 和 value（值） 的映射表，hash 特别适合用于存储对象。"
				}
			]
		},
		{
			"ID": "20230409224954-xnrmyrh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-xnrmyrh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Redis 中每个 hash 可以存储 2^32 - 1 键值对（40多亿）"
				}
			]
		},
		{
			"ID": "20230409224954-8oq10mu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-8oq10mu",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "KV模式不变，但V是一个键值对 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Map\u0026lt;String, Map\u0026lt;Object, Object\u0026gt;\u0026gt;"
				}
			]
		},
		{
			"ID": "20230409224954-2g5tad6",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-2g5tad6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Hset常用指令"
				}
			]
		},
		{
			"ID": "20230409224954-pudh5rt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-pudh5rt",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409100102.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-fjyak1j",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-fjyak1j",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "hset/hget/hmset/hmget/hgetall/hdel"
				}
			]
		},
		{
			"ID": "20230409224954-ig98t72",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-ig98t72",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e hset user1 id 66 name zhang3 age 25\n(integer) 3\n127.0.0.1:6379\u003e hget user1 name  #hget只能单个获取\n\"zhang3\"\n127.0.0.1:6379\u003e hget user1 age\n\"25\"\n\n\n127.0.0.1:6379\u003e hmset user2 id 100 name li4 age 33 # 目前版本的hmset和hset的功能是一致的，hmset已弃用\nOK\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e hmget user2 id name age # hmget可以获得多个键值对\n1) \"100\"\n2) \"li4\"\n3) \"33\"\n\n127.0.0.1:6379\u003e hgetall user1 #hgetall 可以key获取全部键值对 \n1) \"id\"\n2) \"66\"\n3) \"name\"\n4) \"zhang3\"\n5) \"age\"\n6) \"25\"\n\n127.0.0.1:6379\u003e hdel user1 id age #hdel可以通过key删除多个键值对\n(integer) 2\n127.0.0.1:6379\u003e hgetall user1\n1) \"name\"\n2) \"zhang3\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-m7tj9u6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-m7tj9u6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "hlen"
				}
			]
		},
		{
			"ID": "20230409224954-cp1dazg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-cp1dazg",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取某个key内的全部数量"
				}
			]
		},
		{
			"ID": "20230409224954-hjk92oj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-hjk92oj",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e hgetall user2\n1) \"id\"\n2) \"100\"\n3) \"name\"\n4) \"li4\"\n5) \"age\"\n6) \"33\"\n127.0.0.1:6379\u003e hlen user2\n(integer) 3\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-b8ft6pw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-b8ft6pw",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "hexists key"
				}
			]
		},
		{
			"ID": "20230409224954-rhbrp00",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-rhbrp00",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查找在key里面的某个值的key"
				}
			]
		},
		{
			"ID": "20230409224954-b83bci8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-b83bci8",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e hexists user2 age\n(integer) 1\n127.0.0.1:6379\u003e hexists user2 name\n(integer) 1\n127.0.0.1:6379\u003e hexists user2 family\n(integer) 0  # user2 中不存在family这个key，所以返回0\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-izqkhri",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-izqkhri",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "hkeys/hvals"
				}
			]
		},
		{
			"ID": "20230409224954-419twu7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-419twu7",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "hkeys key"
				},
				{
					"Type": "NodeText",
					"Data": "​ 查询出所有key对应的子key值\n​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "hvals key"
				},
				{
					"Type": "NodeText",
					"Data": "​ 查询出所有key对应的子key的value值"
				}
			]
		},
		{
			"ID": "20230409224954-ny8rsbq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-ny8rsbq",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e hkeys user2\n1) \"id\"\n2) \"name\"\n3) \"age\"\n\n127.0.0.1:6379\u003e hvals user2\n1) \"100\"\n2) \"li4\"\n3) \"33\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-z6z2wby",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-z6z2wby",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "hincrby/hincrbyfloat"
				}
			]
		},
		{
			"ID": "20230409224954-4kx3ysm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-4kx3ysm",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e hgetall user2\n1) \"id\"\n2) \"100\"\n3) \"name\"\n4) \"li4\"\n5) \"age\"\n6) \"33\"\n\n127.0.0.1:6379\u003e hincrby user2 age 2\n(integer) 35\n127.0.0.1:6379\u003e hincrby user2 age 5\n(integer) 40\n\n127.0.0.1:6379\u003e hincrbyfloat user2 age 1.5\n\"41.5\"\n127.0.0.1:6379\u003e hincrbyfloat user2 age 0.5\n\"42\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-7qvvra0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-7qvvra0",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "hsetnx"
				}
			]
		},
		{
			"ID": "20230409224954-eydbebi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-eydbebi",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不存在赋值，存在了无效"
				}
			]
		},
		{
			"ID": "20230409224954-bqlkbab",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-bqlkbab",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e hsetnx user1 email 123@123.com\n(integer) 1\n127.0.0.1:6379\u003e hsetnx user1 email 422@124.com\n(integer) 0\n127.0.0.1:6379\u003e hget user1 email\n\"123@123.com\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-pf4boy6",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-pf4boy6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "hset应用场景"
				}
			]
		},
		{
			"ID": "20230409224954-7r1tzus",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-7r1tzus",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "JD购物车早期设计目前不再采用，当前小中厂可用"
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409100358.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n新增商品 → hset shopcar:uid1024 334488 1"
				}
			]
		},
		{
			"ID": "20230409224954-9xqna55",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-9xqna55",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "新增商品 → hset shopcar:uid1024 334477 1"
				}
			]
		},
		{
			"ID": "20230409224954-okcwbbo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-okcwbbo",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "增加商品数量 → hincrby shopcar:uid1024 334477 1"
				}
			]
		},
		{
			"ID": "20230409224954-g1h06k2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-g1h06k2",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "商品总数 → hlen shopcar:uid1024"
				}
			]
		},
		{
			"ID": "20230409224954-0hhm6ld",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-0hhm6ld",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "全部选择 → hgetall shopcar:uid1024"
				}
			]
		},
		{
			"ID": "20230409224954-rztj0ab",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230409224954-rztj0ab",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Set"
				}
			]
		},
		{
			"ID": "20230409224954-q2fn3wl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-q2fn3wl",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Redis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据，集合对象的编码可以是 intset 或者 hashtable。"
				}
			]
		},
		{
			"ID": "20230409224954-3g5tm3y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-3g5tm3y",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Redis 中Set集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。"
				}
			]
		},
		{
			"ID": "20230409224954-kgv05tp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-kgv05tp",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "集合中最大的成员数为 2^32 - 1 (4294967295, 每个集合可存储40多亿个成员)"
				}
			]
		},
		{
			"ID": "20230409224954-i7yje4f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-i7yje4f",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "单值多value，且无重复"
				}
			]
		},
		{
			"ID": "20230409224954-og41wrv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-og41wrv",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Set常用指令"
				}
			]
		},
		{
			"ID": "20230409224954-dld28os",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-dld28os",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409100622.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-fnrjs1r",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-fnrjs1r",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SADD key member [member ...]"
				}
			]
		},
		{
			"ID": "20230409224954-01xegzv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-01xegzv",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "添加元素，可以多次向同一个key中设置不同值，不会覆盖之前的值"
				}
			]
		},
		{
			"ID": "20230409224954-nq02mkl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-nq02mkl",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e sadd set1 1 1 1 1 2 3 4 4 5 5 6  #Set集合会自动去重，实际上只存入了6个不同值\n(integer) 6\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-wiezy18",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-wiezy18",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SMEMBERS key"
				}
			]
		},
		{
			"ID": "20230409224954-9d90csa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-9d90csa",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "遍历集合中的所有元素"
				}
			]
		},
		{
			"ID": "20230409224954-57qplv8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-57qplv8",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e smembers set1\n1) \"1\"\n2) \"2\"\n3) \"3\"\n4) \"4\"\n5) \"5\"\n6) \"6\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-j6nxif4",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-j6nxif4",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SISMEMBER key member"
				}
			]
		},
		{
			"ID": "20230409224954-ks7p5zk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-ks7p5zk",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "判断元素是否在集合中"
				}
			]
		},
		{
			"ID": "20230409224954-z6wutic",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-z6wutic",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e sismember set1 2\n(integer) 1\n127.0.0.1:6379\u003e sismember set1 6\n(integer) 1\n127.0.0.1:6379\u003e sismember set1 9\n(integer) 0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-037ov50",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-037ov50",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SREM key member [member ...]"
				}
			]
		},
		{
			"ID": "20230409224954-7d7fj4f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-7d7fj4f",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "删除集合中的元素"
				}
			]
		},
		{
			"ID": "20230409224954-cvo3pxo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-cvo3pxo",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e srem set1 4\n(integer) 1\n127.0.0.1:6379\u003e srem set1 1\n(integer) 1\n127.0.0.1:6379\u003e smembers set1\n1) \"2\"\n2) \"3\"\n3) \"5\"\n4) \"6\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-3dr8tqc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-3dr8tqc",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "scard"
				}
			]
		},
		{
			"ID": "20230409224954-4qqcztr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-4qqcztr",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取集合里面的元素个数"
				}
			]
		},
		{
			"ID": "20230409224954-c1nwfoc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-c1nwfoc",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e scard set1\n(integer) 4\n127.0.0.1:6379\u003e smembers set1\n1) \"2\"\n2) \"3\"\n3) \"5\"\n4) \"6\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-9wziiw3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-9wziiw3",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SRANDMEMBER key [数字]"
				}
			]
		},
		{
			"ID": "20230409224954-cqwa6dl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-cqwa6dl",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从集合中"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "随机展现设置的数字个数元素"
				},
				{
					"Type": "NodeText",
					"Data": "，元素不删除"
				}
			]
		},
		{
			"ID": "20230409224954-rh3fs6s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-rh3fs6s",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e srandmember set1 2\n1) \"3\"\n2) \"5\"\n127.0.0.1:6379\u003e srandmember set1 3\n1) \"3\"\n2) \"2\"\n3) \"5\"\n127.0.0.1:6379\u003e srandmember set1 1\n1) \"2\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-8tt47yr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-8tt47yr",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SPOP key [数字]"
				}
			]
		},
		{
			"ID": "20230409224954-0fpd9qh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-0fpd9qh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从集合中随机"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "弹出"
				},
				{
					"Type": "NodeText",
					"Data": "一个元素，弹出的元素会被删除"
				}
			]
		},
		{
			"ID": "20230409224954-d70jf6d",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-d70jf6d",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e smembers set1\n1) \"1\"\n2) \"2\"\n3) \"3\"\n4) \"4\"\n5) \"5\"\n6) \"6\"\n7) \"7\"\n8) \"8\"\n9) \"9\"\n\n127.0.0.1:6379\u003e spop set1 1\n1) \"2\"\n127.0.0.1:6379\u003e spop set1 3\n1) \"5\"\n2) \"9\"\n3) \"3\"\n\n127.0.0.1:6379\u003e smembers set1\n1) \"1\"\n2) \"4\"\n3) \"6\"\n4) \"7\"\n5) \"8\"\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-9jwhe0d",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-9jwhe0d",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "smove key1 key2"
				}
			]
		},
		{
			"ID": "20230409224954-szzsd3g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-szzsd3g",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将key1里已存在的某个值赋给key2"
				}
			]
		},
		{
			"ID": "20230409224954-ka432t6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-ka432t6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e sadd set1 1 2 3 4\n(integer) 4\n127.0.0.1:6379\u003e sadd set2 a b c d\n(integer) 4\n127.0.0.1:6379\u003e smove set1 set2 1\n(integer) 1\n\n127.0.0.1:6379\u003e smembers set1\n1) \"2\"\n2) \"3\"\n3) \"4\"\n127.0.0.1:6379\u003e smembers set2\n1) \"d\"\n2) \"b\"\n3) \"a\"\n4) \"c\"\n5) \"1\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-0ea8er2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-0ea8er2",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "集合运算-集合的差集运算A-B"
				}
			]
		},
		{
			"ID": "20230409224954-rk3klnw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-rk3klnw",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "属于A但是不属于B的元素构成的集合"
				}
			]
		},
		{
			"ID": "20230409224954-gyxzznb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-gyxzznb",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "SDIFF key [key ...]"
				},
				{
					"Type": "NodeText",
					"Data": "​，可以计算多个元素的差集"
				}
			]
		},
		{
			"ID": "20230409224954-h8m678o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-h8m678o",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e sadd set1 1 2 3 a b c\n(integer) 6\n127.0.0.1:6379\u003e sadd set2 2 3 4  b c d\n(integer) 6\n127.0.0.1:6379\u003e sdiff set1 set2 #属于set1但是不属于set2的元素构成的集合\n1) \"1\"\n2) \"a\"\n\n127.0.0.1:6379\u003e sdiff set2 set1 #属于set2但是不属于set1的元素构成的集合\n1) \"4\"\n2) \"d\"\n\n127.0.0.1:6379\u003e sadd set3 b x 1 3\n(integer) 4\n127.0.0.1:6379\u003e sdiff set1 set2 set3\n1) \"a\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-4mjg7mv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-4mjg7mv",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "集合运算-集合的并集运算A∪B"
				}
			]
		},
		{
			"ID": "20230409224954-f3d1xfl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-f3d1xfl",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "属于A或者属于B的元素构成的集合"
				}
			]
		},
		{
			"ID": "20230409224954-vmhotk9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-vmhotk9",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "SUNION key [key ...]"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-akmfmab",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-akmfmab",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e smembers set1\n1) \"2\"\n2) \"3\"\n3) \"1\"\n4) \"a\"\n5) \"b\"\n6) \"c\"\n127.0.0.1:6379\u003e smembers set2\n1) \"4\"\n2) \"2\"\n3) \"3\"\n4) \"b\"\n5) \"d\"\n6) \"c\"\n\n127.0.0.1:6379\u003e sunion set1 set2\n1) \"4\"\n2) \"2\"\n3) \"3\"\n4) \"1\"\n5) \"d\"\n6) \"a\"\n7) \"b\"\n8) \"c\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-t99xuvx",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-t99xuvx",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "集合运算-集合的交集运算A∩B"
				}
			]
		},
		{
			"ID": "20230409224954-v2oqofp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-v2oqofp",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "属于A同时也属于B的共同拥有的元素构成的集合"
				}
			]
		},
		{
			"ID": "20230409224954-fo10olj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-fo10olj",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "SINTER key [key ...]"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-d53keip",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-d53keip",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e smembers set1\n1) \"2\"\n2) \"3\"\n3) \"1\"\n4) \"a\"\n5) \"b\"\n6) \"c\"\n127.0.0.1:6379\u003e smembers set2\n1) \"4\"\n2) \"2\"\n3) \"3\"\n4) \"b\"\n5) \"d\"\n6) \"c\"\n\n127.0.0.1:6379\u003e sinter set1 set2\n1) \"2\"\n2) \"3\"\n3) \"b\"\n4) \"c\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-ew0y62y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-ew0y62y",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "SINTERCARD numkeys key 【key ...】【LIMIT limit】"
				},
				{
					"Type": "NodeText",
					"Data": "\nnumkeys 的具体值由输入的key个数决定"
				}
			]
		},
		{
			"ID": "20230409224954-sgc74bd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-sgc74bd",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SINTERCARD 为redis7新命令，它不返回结果集，而是返回结果的基数。返回由所有给定集合的交集产生的集合的基数"
				}
			]
		},
		{
			"ID": "20230409224954-jajdtwn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-jajdtwn",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基数的词语解释: 用于表示事物个数的数"
				}
			]
		},
		{
			"ID": "20230409224954-vdp3v4g",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-vdp3v4g",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e smembers set1\n1) \"2\"\n2) \"3\"\n3) \"1\"\n4) \"a\"\n5) \"b\"\n6) \"c\"\n127.0.0.1:6379\u003e smembers set2\n1) \"4\"\n2) \"2\"\n3) \"3\"\n4) \"b\"\n5) \"d\"\n6) \"c\"\n\n127.0.0.1:6379\u003e sinter set1 set2 # sinter返回输入集合key交集的具体值\n1) \"2\"\n2) \"3\"\n3) \"b\"\n4) \"c\"\n\n127.0.0.1:6379\u003e sintercard 2 set1 set2 # sintercard返回输入集合key交集的基数，4个\n(integer) 4\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-0ho0z2r",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-0ho0z2r",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "应用场景"
				}
			]
		},
		{
			"ID": "20230409224954-wbzamxk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-wbzamxk",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "微信抽奖小程序"
				}
			]
		},
		{
			"ID": "20230409224954-toz08zq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-toz08zq",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409105045.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-loyw2co",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				2
			],
			"Properties": {
				"colgroup": "|",
				"id": "20230409224954-loyw2co",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "1 用户ID，立即参与按钮"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "sadd key 用户ID"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2 显示已经有多少人参与了，上图23208人参加"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "SCARD key"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "3 抽奖(从set中任意选取N个中奖人)"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "SRANDMEMBER key 2       随机抽奖2个人，元素不删除  SPOP  key 3                         随机抽奖3个人，元素会删除"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-0rqdln5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-0rqdln5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "微信朋友圈点赞查看同赞朋友"
				}
			]
		},
		{
			"ID": "20230409224954-exyju9c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-exyju9c",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409105344.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-j930v7k",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				2
			],
			"Properties": {
				"colgroup": "|",
				"id": "20230409224954-j930v7k",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "1 新增点赞"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "sadd pub:msgID  点赞用户ID1  点赞用户ID2"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2 取消点赞"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "srem pub:msgID  点赞用户ID"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "3 展现所有点赞过的用户"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "SMEMBERS  pub:msgID"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "4 点赞用户数统计，就是常见的点赞红色数字"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "scard  pub:msgID"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "5 判断某个朋友是否对楼主点赞过"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "SISMEMBER pub:msgID 用户ID"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-0icbzrg",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-0icbzrg",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "QQ内推可能认识的人"
				}
			]
		},
		{
			"ID": "20230409224954-xqip1xy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-xqip1xy",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409105445.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-ii1aba0",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230409224954-ii1aba0",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Zset"
				}
			]
		},
		{
			"ID": "20230409224954-wsgmlg0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-wsgmlg0",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Redis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。"
				}
			]
		},
		{
			"ID": "20230409224954-gp6ngme",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-gp6ngme",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不同的是每个元素都会关联一个double类型的分数，redis正是通过分数来为集合中的成员进行从小到大的排序。"
				}
			]
		},
		{
			"ID": "20230409224954-juczb9m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-juczb9m",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "zset的成员是唯一的,但分数(score)却可以重复。"
				}
			]
		},
		{
			"ID": "20230409224954-q00wkbp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-q00wkbp",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "zset集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。 集合中最大的成员数为 2^32 - 1"
				}
			]
		},
		{
			"ID": "20230409224954-69ng5uh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-69ng5uh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在set基础上，每个val值前加一个score分数值。之前set是k1 v1 v2 v3，现在zset是 k1 score1 v1 score2 v2"
				}
			]
		},
		{
			"ID": "20230409224954-tx327m7",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-tx327m7",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Zset常用指令"
				}
			]
		},
		{
			"ID": "20230409224954-ngkjomd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-ngkjomd",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409120850.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-r1p2630",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-r1p2630",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ZADD key score member [score member ...]"
				}
			]
		},
		{
			"ID": "20230409224954-4vg4zf3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-4vg4zf3",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "添加元素"
				}
			]
		},
		{
			"ID": "20230409224954-smzhojb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-smzhojb",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e zadd zset1 60 v1 70 v2 80 v3 90 v4 100 v5\n(integer) 5\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-99c1rj8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-99c1rj8",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ZRANGE key start stop [WITHSCORES]"
				}
			]
		},
		{
			"ID": "20230409224954-k3gijbq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-k3gijbq",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "按照元素分数从小到大的顺序返回索引从start到stop之间的所有元素"
				}
			]
		},
		{
			"ID": "20230409224954-u9whcv5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-u9whcv5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e zrange zset1 0 -1 \n1) \"v1\"\n2) \"v2\"\n3) \"v3\"\n4) \"v4\"\n5) \"v5\"\n\n127.0.0.1:6379\u003e zrange zset1 0 -1 withscores # 带分数遍历指定下标元素\n 1) \"v1\"\n 2) \"60\"\n 3) \"v2\"\n 4) \"70\"\n 5) \"v3\"\n 6) \"80\"\n 7) \"v4\"\n 8) \"90\"\n 9) \"v5\"\n10) \"100\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-ldm318p",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-ldm318p",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "zrevrange key start stop [WITHSCORES]"
				}
			]
		},
		{
			"ID": "20230409224954-t2zqc4b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-t2zqc4b",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "反转集合，按照元素分数从大到小的顺序返回索引从start到stop之间的所有元素"
				}
			]
		},
		{
			"ID": "20230409224954-qzz8dvh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-qzz8dvh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e zrevrange zset1 0 -1 withscores\n 1) \"v5\"\n 2) \"100\"\n 3) \"v4\"\n 4) \"90\"\n 5) \"v3\"\n 6) \"80\"\n 7) \"v2\"\n 8) \"70\"\n 9) \"v1\"\n10) \"60\"\n\n127.0.0.1:6379\u003e zrevrange zset1 0 -1\n1) \"v5\"\n2) \"v4\"\n3) \"v3\"\n4) \"v2\"\n5) \"v1\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-eyu4g3f",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-eyu4g3f",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ZRANGEBYSCORE key min max 【WITHSCORES】【LIMIT offset count】"
				}
			]
		},
		{
			"ID": "20230409224954-4l6h4gj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-4l6h4gj",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取指定分数范围的元素，可以在min和max前面加个(，表示不包含"
				}
			]
		},
		{
			"ID": "20230409224954-u1wjt4x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-u1wjt4x",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "limit作用是返回限制，limit开始下标步，一共多少步"
				}
			]
		},
		{
			"ID": "20230409224954-kfj6ivj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-kfj6ivj",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e zrangebyscore zset1 60 90 withscores\n1) \"v1\"\n2) \"60\"\n3) \"v2\"\n4) \"70\"\n5) \"v3\"\n6) \"80\"\n7) \"v4\"\n8) \"90\"\n\n127.0.0.1:6379\u003e zrangebyscore zset1 (60 90 withscores # score 大于60，小于等于90\n1) \"v2\"\n2) \"70\"\n3) \"v3\"\n4) \"80\"\n5) \"v4\"\n6) \"90\"\n127.0.0.1:6379\u003e zrangebyscore zset1 60 (90\n1) \"v1\"\n2) \"v2\"\n3) \"v3\"\n\n\n127.0.0.1:6379\u003e zrangebyscore zset1 60 90 limit 0 1\n1) \"v1\"\n127.0.0.1:6379\u003e zrangebyscore zset1 60 90 limit 0 2\n1) \"v1\"\n2) \"v2\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-xubde77",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-xubde77",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ZSCORE key member"
				}
			]
		},
		{
			"ID": "20230409224954-uvqxlg1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-uvqxlg1",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取元素的分数"
				}
			]
		},
		{
			"ID": "20230409224954-yjsrwx6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-yjsrwx6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e zscore zset1 v1\n\"60\"\n127.0.0.1:6379\u003e zscore zset1 v4\n\"90\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-qzih5ho",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-qzih5ho",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ZCARD key"
				}
			]
		},
		{
			"ID": "20230409224954-8nyprv7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-8nyprv7",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取集合中元素的数量"
				}
			]
		},
		{
			"ID": "20230409224954-lvqj5il",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-lvqj5il",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e zcard zset1\n(integer) 5\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-out2gp4",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-out2gp4",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "zrem key member [member ...]"
				}
			]
		},
		{
			"ID": "20230409224954-1d0fn2e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-1d0fn2e",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "某个score对应的value值，作用是删除元素"
				}
			]
		},
		{
			"ID": "20230409224954-23me3v3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-23me3v3",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e zrem zset1 v1\n(integer) 1\n127.0.0.1:6379\u003e zrange zset1 0 -1\n1) \"v2\"\n2) \"v3\"\n3) \"v4\"\n4) \"v5\"\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-7a1r2kh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-7a1r2kh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ZINCRBY key increment member"
				}
			]
		},
		{
			"ID": "20230409224954-fkprott",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-fkprott",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "增加某个元素的分数"
				}
			]
		},
		{
			"ID": "20230409224954-yismktw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-yismktw",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e zincrby zset1 5 v4\n\"95\"\n127.0.0.1:6379\u003e zincrby zset1 5 v2\n\"75\"\n\n127.0.0.1:6379\u003e zrange zset1 0 -1 withscores\n1) \"v2\"\n2) \"75\"\n3) \"v3\"\n4) \"80\"\n5) \"v4\"\n6) \"95\"\n7) \"v5\"\n8) \"100\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-hoq5q2u",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-hoq5q2u",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ZCOUNT key min max"
				}
			]
		},
		{
			"ID": "20230409224954-2hlwhci",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-2hlwhci",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获得指定分数内的元素个数"
				}
			]
		},
		{
			"ID": "20230409224954-273dz4j",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-273dz4j",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e zcount zset1 60 90\n(integer) 2\n127.0.0.1:6379\u003e zcount zset1 60 (100\n(integer) 3\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-t0pyhab",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-t0pyhab",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ZMPOP numkeys key [key ...] MIN|MAX [COUNT count]"
				}
			]
		},
		{
			"ID": "20230409224954-jaaqhcu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-jaaqhcu",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从键名列表中的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "第一个非空排序集中弹出一个或多个元素"
				},
				{
					"Type": "NodeText",
					"Data": "，他们是成员分数对"
				}
			]
		},
		{
			"ID": "20230409224954-v0hgz4q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-v0hgz4q",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e zrange zset1 0 -1 withscores\n1) \"v2\"\n2) \"75\"\n3) \"v3\"\n4) \"80\"\n5) \"v4\"\n6) \"95\"\n7) \"v5\"\n8) \"100\"\n127.0.0.1:6379\u003e zmpop 1 zset1 min count 1\n1) \"zset1\"\n2) 1) 1) \"v2\"\n      2) \"75\"\n127.0.0.1:6379\u003e zrange zset1 0 -1 withscores\n1) \"v3\"\n2) \"80\"\n3) \"v4\"\n4) \"95\"\n5) \"v5\"\n6) \"100\"\n127.0.0.1:6379\u003e zadd zset2 11 v1 22 v2 33 v3\n(integer) 3\n\n127.0.0.1:6379\u003e zmpop 2 zset1 zset2 max count 1 # zmpop后面的数值由key的个数决定\n1) \"zset1\"\n2) 1) 1) \"v5\"\n      2) \"100\"\n\n127.0.0.1:6379\u003e zrange zset1 0 -1 withscores\n1) \"v3\"\n2) \"80\"\n3) \"v4\"\n4) \"95\"\n127.0.0.1:6379\u003e zrange zset2 0 -1 withscores\n1) \"v1\"\n2) \"11\"\n3) \"v2\"\n4) \"22\"\n5) \"v3\"\n6) \"33\"\n\n127.0.0.1:6379\u003e zmpop 2 zset1 zset2 max count 2 # 从第一个非空的元素中弹出最小的值，而不是弹出所有key里面最小的那个值\n1) \"zset1\"\n2) 1) 1) \"v4\"\n      2) \"95\"\n   2) 1) \"v3\"\n      2) \"80\"\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-mn7gcow",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-mn7gcow",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "zrank key member [withscore]"
				}
			]
		},
		{
			"ID": "20230409224954-n1tdci9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-n1tdci9",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作用是通过子value获得下标值"
				}
			]
		},
		{
			"ID": "20230409224954-leufuli",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-leufuli",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e zadd zset1 11 v1 22 v2 33 v3 44 v4\n(integer) 4\n\n127.0.0.1:6379\u003e zrange zset1  0 -1\n1) \"v1\"\n2) \"v2\"\n3) \"v3\"\n4) \"v4\"\n\n127.0.0.1:6379\u003e zrank zset1 v3\n(integer) 2\n127.0.0.1:6379\u003e zrank zset1 v1\n(integer) 0\n127.0.0.1:6379\u003e zrank zset1 v4\n(integer) 3\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-zkfyr40",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-zkfyr40",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "zrevrank key member [withscore]"
				}
			]
		},
		{
			"ID": "20230409224954-nfbhi1m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-nfbhi1m",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作用是通过子value逆序获得下标值"
				}
			]
		},
		{
			"ID": "20230409224954-0dc105g",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-0dc105g",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e zrevrank zset1 v1\n(integer) 3\n127.0.0.1:6379\u003e zrevrank zset1 v4\n(integer) 0\n127.0.0.1:6379\u003e zrevrank zset1 v2\n(integer) 2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-6desxc4",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-6desxc4",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Zset应用场景"
				}
			]
		},
		{
			"ID": "20230409224954-qh3s7cn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-qh3s7cn",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "根据商品销售对商品进行排序显示"
				},
				{
					"Type": "NodeText",
					"Data": "\n思路：定义商品销售排行榜(sorted set集合)，key为goods:sellsort，分数为商品销售数量。"
				}
			]
		},
		{
			"ID": "20230409224954-pvqxxgk",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				2
			],
			"Properties": {
				"colgroup": "|",
				"id": "20230409224954-pvqxxgk",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "商品编号1001的销量是9，商品编号1002的销量是15"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "zadd goods:sellsort 9 1001 15 1002"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "有一个客户又买了2件商品1001，商品编号1001销量加2"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "zincrby goods:sellsort 2 1001"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "求商品销量前10名"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ZRANGE goods:sellsort 0 9 withscores"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-ig5flio",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-ig5flio",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409124521.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-6ffl2sv",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230409224954-6ffl2sv",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "GEO"
				}
			]
		},
		{
			"ID": "20230409224954-q7vitdp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-q7vitdp",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Redis GEO 主要用于存储地理位置信息，并对存储的信息进行操作，包括"
				}
			]
		},
		{
			"ID": "20230409224954-gl5h1ex",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-gl5h1ex",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "添加地理位置的坐标。"
				}
			]
		},
		{
			"ID": "20230409224954-nb1bua8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-nb1bua8",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取地理位置的坐标。"
				}
			]
		},
		{
			"ID": "20230409224954-blbqarm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-blbqarm",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "计算两个位置之间的距离。"
				}
			]
		},
		{
			"ID": "20230409224954-vica31i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-vica31i",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "根据用户给定的经纬度坐标来获取指定范围内的地理位置集合"
				}
			]
		},
		{
			"ID": "20230409224954-k5y5wa0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-k5y5wa0",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "移动互联网时代LBS应用越来越多，交友软件中附近的小姐姐、外卖软件中附近的美食店铺、高德地图附近的核酸检查点等等，那这种附近各种形形色色的XXX地址位置选择是如何实现的? 地球上的地理位置是使用二维的经纬度表示，经度范围(-180,180]，纬度范围(-90，90]，只要我们确定一个点的经纬度就可以取得他在地球的位置。 例如滴滴打车，最直观的操作就是实时记录更新各个车的位置， 然后当我们要找车时，在数据库中查找距离我们(坐标x0,y0)附近r公里范围内部的车辆 使用如下SQL即可:"
				}
			]
		},
		{
			"ID": "20230409224954-dt7sxal",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-dt7sxal",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "select taxi from position where x0-r\u003c X \u003c x0 + r and y0-r\u003c y \u003c y0+r\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-0pldbzh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-0pldbzh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但是这样会有什么问题呢?"
				}
			]
		},
		{
			"ID": "20230409224954-lbhfx37",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230409224954-lbhfx37",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230409224954-m3oc1dp",
					"Type": "NodeList",
					"ListData": {
						"Typ": 1
					},
					"Properties": {
						"id": "20230409224954-m3oc1dp",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"ID": "20230409224954-9472n2c",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "MS4=",
								"Num": 1
							},
							"Properties": {
								"id": "20230409224954-9472n2c",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"ID": "20230409224954-3cu7lx7",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230409224954-3cu7lx7",
										"updated": "20230409224954"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "查询性能问题，如果并发高，数据量大这种查询是要搞垮数据库的"
										}
									]
								}
							]
						},
						{
							"ID": "20230409224954-x5nkev3",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "Mi4=",
								"Num": 2
							},
							"Properties": {
								"id": "20230409224954-x5nkev3",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"ID": "20230409224954-o4zhim5",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230409224954-o4zhim5",
										"updated": "20230409224954"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "这个查询的是一个矩形访问，而不是以我为中心r公里为半径的圆形访问。"
										}
									]
								}
							]
						},
						{
							"ID": "20230409224954-khd9tg7",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "My4=",
								"Num": 3
							},
							"Properties": {
								"id": "20230409224954-khd9tg7",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"ID": "20230409224954-eyx95ew",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230409224954-eyx95ew",
										"updated": "20230409224954"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "精准度的问题，我们知道地球不是平面坐标系，而是一个圆球，这种矩形计算在长距离计算时会有很大误差"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-0ptas4t",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-0ptas4t",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "原理"
				}
			]
		},
		{
			"ID": "20230409224954-bd3283l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-bd3283l",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409215550.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-ysoxjdx",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-ysoxjdx",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "中文乱码问题"
				}
			]
		},
		{
			"ID": "20230409224954-xgqv1by",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-xgqv1by",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "geo类型实际上是zset，可以使用zset相关的命令对其进行遍历，如果遍历出现中文乱码可以使用如下命令："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "redis-cli --raw"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-5ln1enr",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-5ln1enr",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "GEO常用指令"
				}
			]
		},
		{
			"ID": "20230409224954-qyl53bu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-qyl53bu",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "GEOADD key longitude latitude member [longitude latitude member]"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-0fdsjjg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-0fdsjjg",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "多个经度(longitude)、纬度(latitude)、位置名称(member)添加到指定的key中"
				}
			]
		},
		{
			"ID": "20230409224954-vo9srel",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-vo9srel",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "命令："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "GEOADD city 116.403963 39.915119 \u0026quot;天安门\u0026quot; 116.403414 39.924091 \u0026quot;故宫\u0026quot; 116.024067 40.362639 \u0026quot;长城\u0026quot;"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-dyn70fq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-dyn70fq",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "geo类型实际上是zset，可以使用zset相关的命令对其进行遍历，如果遍历出现中文乱码可以使用如下命令："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "redis-cli --raw"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-oflxzm6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-oflxzm6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "GEOADD city 116.403963 39.915119 \"天安门\" 116.403414 39.924091 \"故宫\" 116.024067 40.362639 \"长城\"\n3\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-b865wh4",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-b865wh4",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "GEOPOS key member [member]"
				}
			]
		},
		{
			"ID": "20230409224954-9v0m326",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-9v0m326",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "从键里面返回所有指定名称(member )元素的位置（经度和纬度），不存在返回nil"
				}
			]
		},
		{
			"ID": "20230409224954-cd0z00r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-cd0z00r",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "GEOPOS city 天安门 故宫 长城"
				}
			]
		},
		{
			"ID": "20230409224954-sdacaye",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-sdacaye",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e geopos city \"天安门\"\n116.40396326780319214\n39.91511970338637383\n\n127.0.0.1:6379\u003e geopos city \"天安门\" \"故宫\" \"长城\"\n116.40396326780319214\n39.91511970338637383\n116.40341609716415405\n39.92409008156928252\n116.02406591176986694\n40.36263993239462167\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-baib5ud",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-baib5ud",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "GEODIST key member1 member2 [M|KM|FT|MI]"
				}
			]
		},
		{
			"ID": "20230409224954-gtw8tqx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-gtw8tqx",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "返回两个给定位置之间的距离"
				}
			]
		},
		{
			"ID": "20230409224954-ch60313",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230409224954-ch60313",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230409224954-rks4rdc",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230409224954-rks4rdc",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "m-米\nkm-千米\nft-英寸\nmi-英里"
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-37706bh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-37706bh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e geodist city \"天安门\" \"故宫\"  # 默认单位为 m\n998.8332\n127.0.0.1:6379\u003e geodist city \"天安门\" \"长城\" km\n59.3390\n127.0.0.1:6379\u003e geodist city \"天安门\" \"故宫\" km\n0.9988\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-jy3bu59",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-jy3bu59",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "GEORADIUS key longitude latitude radius M|KM|FT|MI [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count [ANY]"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-omwh2vf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-omwh2vf",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "以给定的经纬度为中心，返回与中心的距离不超过给定最大距离的所有元素位置"
				}
			]
		},
		{
			"ID": "20230409224954-0k0p82s",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230409224954-0k0p82s",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230409224954-sispeg3",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230409224954-sispeg3",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "​"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": "WITHDIST"
						},
						{
							"Type": "NodeText",
							"Data": "​: 在返回位置元素的同时， 将位置元素与中心之间的距离也一并返回。 距离的单位和用户给定的范围单位保持一致。\n​"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": "WITHCOORD"
						},
						{
							"Type": "NodeText",
							"Data": "​: 将位置元素的经度和维度也一并返回。\n​"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": "WITHHASH"
						},
						{
							"Type": "NodeText",
							"Data": "​:以 52 位有符号整数的形式， 返回位置元素经过原始 geohash 编码的有序集合分值。 这个选项主要用于底层应用或者调试，实际中的作用并不大 .\n​"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": "COUNT"
						},
						{
							"Type": "NodeText",
							"Data": "​ 限定返回的记录数。"
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-dai114s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-dai114s",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当前位置(116.418017 39.914402),阳哥在北京王府井"
				}
			]
		},
		{
			"ID": "20230409224954-9xmgb47",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-9xmgb47",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e georadius city 116.418017 39.914402 10 km withcoord withhash count 10 desc\n故宫\n4069885568908290\n116.40341609716415405\n39.92409008156928252\n天安门\n4069885555089531\n116.40396326780319214\n39.91511970338637383\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e georadius city 116.418017 39.914402 10 km withdist withcoord withhash count 10 desc\n故宫\n1.6470\n4069885568908290\n116.40341609716415405\n39.92409008156928252\n天安门\n1.2016\n4069885555089531\n116.40396326780319214\n39.91511970338637383\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-d87r9za",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-d87r9za",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "GEORADIUSBYMEMBER"
				}
			]
		},
		{
			"ID": "20230409224954-mkiue39",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-mkiue39",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "找出位于指定范围内的元素，中心点是由给定的位置元素决定"
				}
			]
		},
		{
			"ID": "20230409224954-jbngub4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-jbngub4",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "跟GEORADIUS类似"
				}
			]
		},
		{
			"ID": "20230409224954-desd977",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-desd977",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e georadiusbymember city \"天安门\" 10 km withdist withcoord  withhash count 10 desc\n故宫\n0.9988\n4069885568908290\n116.40341609716415405\n39.92409008156928252\n天安门\n0.0000\n4069885555089531\n116.40396326780319214\n39.91511970338637383\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-4r7riq9",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-4r7riq9",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "GEOHASH"
				}
			]
		},
		{
			"ID": "20230409224954-4r9m1e5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-4r9m1e5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "返回一个或多个位置元素的GEOhash表示"
				}
			]
		},
		{
			"ID": "20230409224954-uutxgs8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-uutxgs8",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "geohash 算法生成的base32编码值，3维变2维变1维"
				}
			]
		},
		{
			"ID": "20230409224954-t1k244m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-t1k244m",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e geohash city \"天安门\"\nwx4g0f6f2v0\n127.0.0.1:6379\u003e geohash city \"天安门\"  \"长城\" \"故宫\"\nwx4g0f6f2v0\nwx4t85y1kt0\nwx4g0gfqsj0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-60bilht",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230409224954-60bilht",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HyperLogLog"
				}
			]
		},
		{
			"ID": "20230409224954-bywozj6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-bywozj6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HyperLogLog 是用来做基数统计的算法，HyperLogLog 的优点是，在输入元素的数量或者体积非常非常大时，计算基数所需的空间总是固定且是很小的。"
				}
			]
		},
		{
			"ID": "20230409224954-4ulmg4y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-4ulmg4y",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 Redis 里面，每个 HyperLogLog 键只需要花费 12 KB 内存，就可以计算接近 2^64 个不同元素的基 数。这和计算基数时，元素越多耗费内存就越多的集合形成鲜明对比。"
				}
			]
		},
		{
			"ID": "20230409224954-p0kohxn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-p0kohxn",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但是，因为 HyperLogLog 只会根据输入元素来计算基数，而不会储存输入元素本身，所以 HyperLogLog 不能像集合那样，返回输入的各个元素。"
				}
			]
		},
		{
			"ID": "20230409224954-rsiityo",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-rsiityo",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "需求："
				}
			]
		},
		{
			"ID": "20230409224954-rs5n1x5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-rs5n1x5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用户搜索网站关键词的数量"
				}
			]
		},
		{
			"ID": "20230409224954-p6b4ukj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-p6b4ukj",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "统计用户每天搜索不同词条个数"
				}
			]
		},
		{
			"ID": "20230409224954-hr7ofn9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-hr7ofn9",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "统计某个网站的UV、统计某个文章的UV"
				}
			]
		},
		{
			"ID": "20230409224954-zma7p7p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-zma7p7p",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "什么是UV？"
				}
			]
		},
		{
			"ID": "20230409224954-anl2rbp",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230409224954-anl2rbp",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230409224954-7u7v2ec",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230409224954-7u7v2ec",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "Unique Visitor，独立访客，一般理解为客户端IP，"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "需要去重考虑"
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-zau6tze",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-zau6tze",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "是什么"
				}
			]
		},
		{
			"ID": "20230409224954-hih6h3i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-hih6h3i",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "去重复统计功能的基数估计算法-就是HyperLogLog"
				}
			]
		},
		{
			"ID": "20230409224954-cb1yjjb",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230409224954-cb1yjjb",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230409224954-wg9vccf",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20230409224954-wg9vccf",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"ID": "20230409224954-qyfryjh",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20230409224954-qyfryjh",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"ID": "20230409224954-wmh4ukj",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230409224954-wmh4ukj",
										"updated": "20230409224954"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Redis在2.8.9版本添加了HyperLogLog 结构。"
										}
									]
								}
							]
						},
						{
							"ID": "20230409224954-j5h0d0m",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20230409224954-j5h0d0m",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"ID": "20230409224954-gn3qttp",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230409224954-gn3qttp",
										"updated": "20230409224954"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Redis HyperLogLog是用来做基数统计的算法，HyperLogLog 的优点是，在输入元素的数量或者体积非常非常大时，计算基数所需的空间总是固定的、并且是很小的。"
										}
									]
								}
							]
						},
						{
							"ID": "20230409224954-t9gt7ad",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20230409224954-t9gt7ad",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"ID": "20230409224954-6kbufgq",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230409224954-6kbufgq",
										"updated": "20230409224954"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "在Redis里面，每个 HyperLogLog键只需要花费12KB内存，就可以计算接近2^64个不同元素的基数。这和计算基数时，元素越多耗费"
										}
									]
								}
							]
						},
						{
							"ID": "20230409224954-tigqrrm",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20230409224954-tigqrrm",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"ID": "20230409224954-wm6vu7u",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230409224954-wm6vu7u",
										"updated": "20230409224954"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "内存就越多的集合形成鲜明对比。"
										}
									]
								}
							]
						},
						{
							"ID": "20230409224954-wv94j7x",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20230409224954-wv94j7x",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"ID": "20230409224954-jzn4fq8",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230409224954-jzn4fq8",
										"updated": "20230409224954"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "但是，因为HyperLogLog只会根据输入元素来计算基数，而不会储存输入元素本身，所以HyperLogLog不能像集合那样，返回输入的各个元素。"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-3urce8d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-3urce8d",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "基数"
				},
				{
					"Type": "NodeText",
					"Data": "：是一种数据集，去重复后的真实个数"
				}
			]
		},
		{
			"ID": "20230409224954-7bpyhco",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-7bpyhco",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "(全集)={2,4,6,8,77,39,4,8,10}\n去掉重复的内容\n基数={2,4,6,8,77,39,10} = 7\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-8y0kmpb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-8y0kmpb",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基数统计：用于统计一个集合中不重复的元素个数，就是对集合去重复后剩余元素的计算。"
				}
			]
		},
		{
			"ID": "20230409224954-pdjotlq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-pdjotlq",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一句话："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "去重脱水后的真实数据"
				}
			]
		},
		{
			"ID": "20230409224954-ki4s6j5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-ki4s6j5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HyperLogLog基本指令"
				}
			]
		},
		{
			"ID": "20230409224954-vlad2em",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-vlad2em",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409222613.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-i52bsv6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-i52bsv6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e pfadd h1 1 3 3  4 5 6 7 # 返回 1 表示成功\n1\n127.0.0.1:6379\u003e pfadd h2 1 3 12  4 5 8 9 66\n1\n127.0.0.1:6379\u003e pfcount h1 # 去重后6个元素有效\n6\n127.0.0.1:6379\u003e pfcount h2\n8\n127.0.0.1:6379\u003e pfmerge disResult h1 h2 # 合并\nOK\n127.0.0.1:6379\u003e pfcount disResult\n12\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-w8n6pbs",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230409224954-w8n6pbs",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Bitmap"
				}
			]
		},
		{
			"ID": "20230409224954-ty0rziu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-ty0rziu",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230408205154.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-0h8cihm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-0h8cihm",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由0和1状态表现的二进制位的bit数组"
				}
			]
		},
		{
			"ID": "20230409224954-73paxye",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-73paxye",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "位图本质是数组"
				},
				{
					"Type": "NodeText",
					"Data": "，它是基于String数据类型的按位的操作。该数组由多个二进制位组成，每个二进制位都对应一个偏移量（我们称之为一个索引）。"
				}
			]
		},
		{
			"ID": "20230409224954-wb9z8rv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-wb9z8rv",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Bitmap支持的最大位数是2"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "sup",
					"TextMarkTextContent": "32位，它可以极大的节约存储空间，使用512M内存就可以存储多达42.9亿的字节信息(2"
				},
				{
					"Type": "NodeText",
					"Data": "32=4294967296)"
				}
			]
		},
		{
			"ID": "20230409224954-m6jmmt0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-m6jmmt0",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一般用于什么地方"
				}
			]
		},
		{
			"ID": "20230409224954-4z4r14p",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230409224954-4z4r14p",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230409224954-vl142xq",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230409224954-vl142xq",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "用户是否登陆过Y、N，比如京东每日签到送京豆\n电影、广告是否被点击播放过\n钉钉打卡上下班，签到统计"
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-7zd2o3t",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-7zd2o3t",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Bitmap基本命令"
				}
			]
		},
		{
			"ID": "20230409224954-p9wovbc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-p9wovbc",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409125701.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-ocqgt7t",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-ocqgt7t",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "setbit key offset value"
				}
			]
		},
		{
			"ID": "20230409224954-q57oedt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-q57oedt",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "setbit 键偏移位 只能零或者1"
				}
			]
		},
		{
			"ID": "20230409224954-i5m7zuf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-i5m7zuf",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "Bitmap的偏移量从零开始计算的"
				}
			]
		},
		{
			"ID": "20230409224954-x94nkzj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-x94nkzj",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e setbit k1 1 1\n(integer) 0\n127.0.0.1:6379\u003e setbit k1 7 1\n(integer) 0\n127.0.0.1:6379\u003e get k1\n\"A\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-6j56bra",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-6j56bra",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409130141.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-k8rt5bo",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-k8rt5bo",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "getbit key offset"
				}
			]
		},
		{
			"ID": "20230409224954-zu2zsf0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-zu2zsf0",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取键偏移位的值"
				}
			]
		},
		{
			"ID": "20230409224954-to6ldzd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-to6ldzd",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e getbit k1 0\n(integer) 0\n127.0.0.1:6379\u003e getbit k1 1\n(integer) 1\n127.0.0.1:6379\u003e getbit k1 7\n(integer) 1\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-765wivu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-765wivu",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "strlen key"
				}
			]
		},
		{
			"ID": "20230409224954-l2apmr8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-l2apmr8",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "统计字节数占用多少"
				}
			]
		},
		{
			"ID": "20230409224954-wlx7gd5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-wlx7gd5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e strlen k1\n(integer) 1\n\n127.0.0.1:6379\u003e setbit k1 8 1\n(integer) 0\n127.0.0.1:6379\u003e strlen k1\n(integer) 2\n127.0.0.1:6379\u003e setbit k1 16 1\n(integer) 0\n127.0.0.1:6379\u003e strlen k1\n(integer) 3\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-l738yn6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-l738yn6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "bitcount key [start end [byte|bit]]"
				}
			]
		},
		{
			"ID": "20230409224954-vzv5z65",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-vzv5z65",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "全部键里面包含有1的有多少个"
				}
			]
		},
		{
			"ID": "20230409224954-td2a88x",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-td2a88x",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e bitcount k1\n(integer) 4\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-iwttvyt",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-iwttvyt",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "bitop operation(AND|OR|XOR|NOT) destkey key [key ...]"
				}
			]
		},
		{
			"ID": "20230409224954-hzpbuoz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-hzpbuoz",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "案例：连续2天都签到的用户数量"
				}
			]
		},
		{
			"ID": "20230409224954-zvlzf2b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-zvlzf2b",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假如某个网站或者系统，它的用户有1000W，我们可以使用redis的HASH结构和bitmap结构做个用户id和位置的映射"
				}
			]
		},
		{
			"ID": "20230409224954-gmzzd13",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-gmzzd13",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e hset uid:map 0 uid:login1 \n(integer) 1\n127.0.0.1:6379\u003e hset uid:map 1 uid:login2\n(integer) 1\n\n127.0.0.1:6379\u003e hgetall uid:map #比如使用bitmap中的比特位来映射这两个hset对象\n1) \"0\"\n2) \"uid:login1\"\n3) \"1\"\n4) \"uid:login2\"\n\n127.0.0.1:6379\u003e setbit 20230409 0 1 # 代表uid:login1签到过\n(integer) 0\n127.0.0.1:6379\u003e setbit 20230409 1 1 # 代表uid:login2签到过\n(integer) 0\n127.0.0.1:6379\u003e setbit 20230409 3 1\n(integer) 0\n\n# 四月九号签到的用户\n127.0.0.1:6379\u003e getbit 20230409 0 \n(integer) 1\n127.0.0.1:6379\u003e getbit 20230409 1\n(integer) 1\n127.0.0.1:6379\u003e getbit 20230409 3\n(integer) 1\n\n# 四月十号签到的用户\n127.0.0.1:6379\u003e setbit 20230410 1 1\n(integer) 0\n127.0.0.1:6379\u003e setbit 20230410 3 1\n(integer) 0\n\n# 统计在四月九号和四月十号连续登录的用户 使用操作符 and\n127.0.0.1:6379\u003e bitop and con 20230409 20230410\n(integer) 1\n127.0.0.1:6379\u003e bitcount con # 统计到的数据会放在con中\n(integer) 2   # 在九号和十号两天中，只有两个用户符合要求\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-qgi0lxn",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-qgi0lxn",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "应用场景"
				}
			]
		},
		{
			"ID": "20230409224954-0olyjkd",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-0olyjkd",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "—年365天，全年天天登陆占用多少字节"
				}
			]
		},
		{
			"ID": "20230409224954-d8ecyi5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-d8ecyi5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409203520.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-xq8ycnw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-xq8ycnw",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "按照年"
				}
			]
		},
		{
			"ID": "20230409224954-e5lezey",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-e5lezey",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "按年去存储一个用户的签到情况，365 天只需要 365 / 8 ≈ 46 Byte，1000W 用户量一年也只需要 44 MB 就足够了。"
				}
			]
		},
		{
			"ID": "20230409224954-a9z83x2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-a9z83x2",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "假如是亿级的系统，"
				}
			]
		},
		{
			"ID": "20230409224954-nxi5d9g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-nxi5d9g",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "每天使用1个1亿位的Bitmap约占12MB的内存（10^8/8/1024/1024），10天的Bitmap的内存开销约为440MB，内存压力不算太高。"
				}
			]
		},
		{
			"ID": "20230409224954-3aq99zb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-3aq99zb",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此外，在实际使用时，最好对Bitmap设置过期时间，让Redis自动删除不再需要的签到记录以节省内存开销。"
				}
			]
		},
		{
			"ID": "20230409224954-c695j1j",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230409224954-c695j1j",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Bitfield"
				}
			]
		},
		{
			"ID": "20230409224954-7hdkwe7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-7hdkwe7",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过bitfield命令可以一次性操作多个比特位域(指的是连续的多个比特位)，它会执行一系列操作并返回一个响应数组，这个数组中的元素对应参数列表中的相应操作的执行结果。"
				}
			]
		},
		{
			"ID": "20230409224954-oxb3px9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-oxb3px9",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "说白了就是通过bitfield命令我们可以一次性对多个比特位域进行操作。"
				}
			]
		},
		{
			"ID": "20230409224954-2ddc7ac",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-2ddc7ac",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409223541.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-tg1f3ja",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-tg1f3ja",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "位域修改、溢出控制"
				}
			]
		},
		{
			"ID": "20230409224954-pzjw1nl",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-pzjw1nl",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一句话"
				}
			]
		},
		{
			"ID": "20230409224954-a29r1gm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-a29r1gm",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "将一个redis字符串看作是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "一个由二进制位组成的数组"
				},
				{
					"Type": "NodeText",
					"Data": "并能对变长位宽和任意没有字节对齐的指定整型位域进行寻址和修改"
				}
			]
		},
		{
			"ID": "20230409224954-9i2ri8m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-9i2ri8m",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409223621.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-l00q53d",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-l00q53d",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Bitfield常用指令"
				}
			]
		},
		{
			"ID": "20230409224954-i5h98ee",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-i5h98ee",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Ascii码表："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://ascii.org.cn/",
					"TextMarkTextContent": "https://ascii.org.cn"
				}
			]
		},
		{
			"ID": "20230409224954-43lghsi",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-43lghsi",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "BITFIELD key [GET type offset]"
				}
			]
		},
		{
			"ID": "20230409224954-a664ut3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-a664ut3",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409223725.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-w5awetk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-w5awetk",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "BITFIELD key set type offstet value"
				}
			]
		},
		{
			"ID": "20230409224954-6svnnaa",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-6svnnaa",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e set fieldkey hello\nOK\n127.0.0.1:6379\u003e bitfield fieldkey get i8 0\n104\n127.0.0.1:6379\u003e bitfield fieldkey get i8 8\n101\n127.0.0.1:6379\u003e bitfield fieldkey set i8 8 120 #从第9个位开始，将接下来8个位用有符号数120(字母x)替换\n101\n\n127.0.0.1:6379\u003e get fieldkey\nhxllo\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-zxzjdtw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-zxzjdtw",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "如果偏移量后面的值发生溢出（大于127），redis对此也有对应的溢出控制，默认情况下，INCRBY使用WRAP参数"
				}
			]
		},
		{
			"ID": "20230409224954-vr3ided",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-vr3ided",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "溢出控制 OVERFLOW [WRAP|SAT|FAIL]"
				}
			]
		},
		{
			"ID": "20230409224954-a74d0bu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-a74d0bu",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "WRAP:使用回绕(wrap around)方法处理有符号整数和无符号整数溢出情况"
				}
			]
		},
		{
			"ID": "20230409224954-uk9fags",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-uk9fags",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e set test a\nOK\n\n127.0.0.1:6379\u003e bitfield test get i8 0 # 对应ascll码 97\n97\n\n127.0.0.1:6379\u003e bitfield test set i8 0 138 # i8表示有符号8位二进制，范围(-128 ,127)\n97\n\n127.0.0.1:6379\u003e bitfield test get i8 0 # 默认overflow为wrap，即循环溢出\n-118\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-xurafus",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-xurafus",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "SAT:使用饱和计算(saturation arithmetic)方法处理溢出，下溢计算的结果为最小的整数值，而上溢计算的结果为最大的整数值"
				}
			]
		},
		{
			"ID": "20230409224954-heid5qx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-heid5qx",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e bitfield test get i8 0\n-118\n\n127.0.0.1:6379\u003e bitfield test overflow sat set i8 0 138\n-118\n\n127.0.0.1:6379\u003e bitfield test get i8 0\n127\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-6mu1duu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-6mu1duu",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "fail:命令将拒绝执行那些会导致上溢或者下溢情况出现的计算，并向用户返回空值表示计算未被执行"
				}
			]
		},
		{
			"ID": "20230409224954-7ychdgv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-7ychdgv",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e bitfield test get i8 0\n-118\n\n127.0.0.1:6379\u003e bitfield test overflow sat set i8 0 138\n-118\n\n127.0.0.1:6379\u003e bitfield test get i8 0\n127\n\n127.0.0.1:6379\u003e bitfield test overflow fail set i8 0 888\nnil\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-4qh7kqz",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230409224954-4qh7kqz",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Stream"
				}
			]
		},
		{
			"ID": "20230409224954-7dri9ab",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-7dri9ab",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Redis Stream 是 Redis 5.0 版本新增加的数据结构。"
				}
			]
		},
		{
			"ID": "20230409224954-2wegy4u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-2wegy4u",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Redis Stream 主要用于消息队列（MQ，Message Queue），Redis 本身是有一个 Redis 发布订阅 (pub/sub) 来实现消息队列的功能，但它有个缺点就是消息无法持久化，如果出现网络断开、Redis 宕机等，消息就会被丢弃。"
				}
			]
		},
		{
			"ID": "20230409224954-hu0eb16",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-hu0eb16",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简单来说发布订阅 (pub/sub) 可以分发消息，但无法记录历史消息。"
				}
			]
		},
		{
			"ID": "20230409224954-5q8kdo3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-5q8kdo3",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而 Redis Stream 提供了消息的持久化和主备复制功能，可以让任何客户端访问任何时刻的数据，并且能记住每一个客户端的访问位置，还能保证消息不丢失"
				}
			]
		},
		{
			"ID": "20230409224954-8bgh8wb",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-8bgh8wb",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Stream类型是什么"
				}
			]
		},
		{
			"ID": "20230409224954-pn9f9ly",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-pn9f9ly",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Redis5.0 之前的痛点，Redis消息队列的2种方案："
				}
			]
		},
		{
			"ID": "20230409224954-vpc3ay7",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230409224954-vpc3ay7",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"ID": "20230409224954-kswgril",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230409224954-kswgril",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"ID": "20230409224954-hx0a2ok",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230409224954-hx0a2ok",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "List实现消息队列，List实现方式其实就是点对点的模式\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image.png"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409204012.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20230409224954-jw0zy2s",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230409224954-jw0zy2s",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"ID": "20230409224954-4boe0m0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230409224954-4boe0m0",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Pub/Sub\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "image.png"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409204026.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "\nRedis5.0版本新增了一个更强大的数据结构---Stream"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-0lhbek7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-0lhbek7",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一句话：Stream流就是Redis版的MQ消息中间件+阻塞队列"
				}
			]
		},
		{
			"ID": "20230409224954-4gvetg5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-4gvetg5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "能干嘛"
				}
			]
		},
		{
			"ID": "20230409224954-br02utx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-br02utx",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现消息队列，它支持消息的持久化、支持自动生成全局唯一ID、支持ack确认消息的模式、支持消费组模式等，让消息队列更加的稳定和可靠"
				}
			]
		},
		{
			"ID": "20230409224954-f2kjjmn",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-f2kjjmn",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "底层结构和原理说明"
				}
			]
		},
		{
			"ID": "20230409224954-y5misf4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-y5misf4",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409204217.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n一个消息链表，将所有加入的消息都串起来，每个消息都有一个唯一ID的和对应的内容"
				}
			]
		},
		{
			"ID": "20230409224954-f27efb3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-f27efb3",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409204248.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-iw9bv24",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-iw9bv24",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Stream常用指令"
				}
			]
		},
		{
			"ID": "20230409224954-j1tvsow",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-j1tvsow",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "队列相关指令"
				}
			]
		},
		{
			"ID": "20230409224954-1ddjsqy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-1ddjsqy",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409204348.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-qigqmk2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-qigqmk2",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "消费组相关指令"
				}
			]
		},
		{
			"ID": "20230409224954-ffyp7jh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-ffyp7jh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409204409.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "XINFO GROUPS"
				},
				{
					"Type": "NodeText",
					"Data": "​ 打印消费组的详细信息"
				}
			]
		},
		{
			"ID": "20230409224954-nrmchcu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-nrmchcu",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "XINFO STREAM"
				},
				{
					"Type": "NodeText",
					"Data": "​ 打印stream的详细信息"
				}
			]
		},
		{
			"ID": "20230409224954-7iob51m",
			"Type": "NodeHeading",
			"HeadingLevel": 5,
			"Properties": {
				"id": "20230409224954-7iob51m",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "四个特殊符号"
				}
			]
		},
		{
			"ID": "20230409224954-5rwuger",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				2
			],
			"Properties": {
				"colgroup": "|",
				"id": "20230409224954-5rwuger",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "​"
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "code",
											"TextMarkTextContent": "- +"
										},
										{
											"Type": "NodeText",
											"Data": "​"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "最小和最大可能出现的Id"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "$"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "$"
								},
								{
									"Type": "NodeText",
									"Data": "​表示只消费新的消息，当前流中最大的Id，可用于将要到来的信息"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "\u0026gt;"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于XREADGROUP命令，表示迄今还没有发送给组中使用者的信息，会更新消费者组的最后Id"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "*"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于XADD命令，让系统自动生成Id"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-ftenz4p",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-ftenz4p",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "队列相关指令详解"
				}
			]
		},
		{
			"ID": "20230409224954-vvjhldm",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-vvjhldm",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "XADD"
				}
			]
		},
		{
			"ID": "20230409224954-c4dzkfp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-c4dzkfp",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "添加消息到队列末尾，消息ID必须要比上一个ID大，默认用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "星号"
				},
				{
					"Type": "NodeText",
					"Data": "表示自动生成ID；"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "*"
				},
				{
					"Type": "NodeText",
					"Data": "​ 用于XADD命令中，让系统自动生成ID；"
				}
			]
		},
		{
			"ID": "20230409224954-l7dlthe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-l7dlthe",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "XADD用于向Stream队列中添加消息，如果指定的Stream队列不存在，则该命令执行时会新建一个Stream队列"
				}
			]
		},
		{
			"ID": "20230409224954-i75p6vi",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-i75p6vi",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xadd mystream * id 11 cname zhang3\n\"1681044642176-0\"  # 这就是生成的ID\n127.0.0.1:6379\u003e xadd mystream * id 12 cname li4\n\"1681044653467-0\"\n127.0.0.1:6379\u003e xadd mystream * id 13 cname wang5\n\"1681044663773-0\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-9hqecto",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-9hqecto",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "生成的消息ID，有两部分组成，毫秒时间戳-该毫秒内产生的第一条消息"
				}
			]
		},
		{
			"ID": "20230409224954-dq0vn1y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-dq0vn1y",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "*"
				},
				{
					"Type": "NodeText",
					"Data": "​ 表示服务器自动生成MessageID(类似MySQL里面主键auto_increment)，后面顺序跟着一堆业务key/value"
				}
			]
		},
		{
			"ID": "20230409224954-dzn656q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-dzn656q",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "信息条目指的是序列号，在相同的毫秒下序列号从0开始递增，序列号是64位长度，理论上在同一毫秒内生成的数据量无法到达这个级别，因此不用担心序列号会不够用。milisecondsTime指的是Redis节点服务器的本地时间，如果存在当前的毫秒时间截比以前已经存在的数据的时间戳小的话(本地时间钟后跳)，那么系统将会采用以前相同的毫秒创建新的ID，也即redis 在增加信息条目时会检查当前 id 与上一条目的 id，自动纠正错误的情况，一定要保证后面的 id 比前面大，一个流中信息条目的ID必须是单调增的，这是流的基础。"
				}
			]
		},
		{
			"ID": "20230409224954-as76igf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-as76igf",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "客户端显示传入规则:"
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				},
				{
					"Type": "NodeText",
					"Data": "Redis对于ID有强制要求，格式必须是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "时间戳-自增Id"
				},
				{
					"Type": "NodeText",
					"Data": "这样的方式，且后续ID不能小于前一个ID"
				}
			]
		},
		{
			"ID": "20230409224954-9dia14q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-9dia14q",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Stream的消息内容，也就是图中的Messaget它的结构类似Hash结构，以kev-value的形式存在"
				}
			]
		},
		{
			"ID": "20230409224954-3c2yhax",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-3c2yhax",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "XRANGE key start end [COUNT count]"
				}
			]
		},
		{
			"ID": "20230409224954-8siluvk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-8siluvk",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用于获取消息列表（可以指定范围），忽略删除的消息"
				}
			]
		},
		{
			"ID": "20230409224954-ppa12on",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-ppa12on",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "start 表示开始值，-代表最小值"
				}
			]
		},
		{
			"ID": "20230409224954-9fpvwpa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-9fpvwpa",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "end 表示结束值，+代表最大值"
				}
			]
		},
		{
			"ID": "20230409224954-9ceigay",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-9ceigay",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "count 表示最多获取多少个值"
				}
			]
		},
		{
			"ID": "20230409224954-lw0kk7a",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-lw0kk7a",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xrange mystream - +\n1) 1) \"1681044642176-0\"\n   2) 1) \"id\"\n      2) \"11\"\n      3) \"cname\"\n      4) \"zhang3\"\n2) 1) \"1681044653467-0\"\n   2) 1) \"id\"\n      2) \"12\"\n      3) \"cname\"\n      4) \"li4\"\n3) 1) \"1681044663773-0\"\n   2) 1) \"id\"\n      2) \"13\"\n      3) \"cname\"\n      4) \"wang5\"\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e xrange mystream - + count 1 # 要求只输出一条\n1) 1) \"1681044642176-0\"\n   2) 1) \"id\"\n      2) \"11\"\n      3) \"cname\"\n      4) \"zhang3\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-ksclsy7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-ksclsy7",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "XREVRANGE key end start [COUNT count]"
				}
			]
		},
		{
			"ID": "20230409224954-vtkg37a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-vtkg37a",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "根据ID降序输出"
				}
			]
		},
		{
			"ID": "20230409224954-s8r31xw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-s8r31xw",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xrevrange mystream + - # 注意这里的+ -也是相反的，否则无法输出\n1) 1) \"1681044663773-0\"\n   2) 1) \"id\"\n      2) \"13\"\n      3) \"cname\"\n      4) \"wang5\"\n2) 1) \"1681044653467-0\"\n   2) 1) \"id\"\n      2) \"12\"\n      3) \"cname\"\n      4) \"li4\"\n3) 1) \"1681044642176-0\"\n   2) 1) \"id\"\n      2) \"11\"\n      3) \"cname\"\n      4) \"zhang3\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-g291efh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-g291efh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "XDEL key id [id ...]"
				}
			]
		},
		{
			"ID": "20230409224954-5arj3mc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-5arj3mc",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xrange mystream - +\n1) 1) \"1681044642176-0\"\n   2) 1) \"id\"\n      2) \"11\"\n      3) \"cname\"\n      4) \"zhang3\"\n2) 1) \"1681044653467-0\"\n   2) 1) \"id\"\n      2) \"12\"\n      3) \"cname\"\n      4) \"li4\"\n3) 1) \"1681044663773-0\"\n   2) 1) \"id\"\n      2) \"13\"\n      3) \"cname\"\n      4) \"wang5\"\n\n127.0.0.1:6379\u003e xdel mystream 1681044653467-0 # 使用流专用的ID进行删除\n(integer) 1\n\n127.0.0.1:6379\u003e xrange mystream - +\n1) 1) \"1681044642176-0\"\n   2) 1) \"id\"\n      2) \"11\"\n      3) \"cname\"\n      4) \"zhang3\"\n2) 1) \"1681044663773-0\"\n   2) 1) \"id\"\n      2) \"13\"\n      3) \"cname\"\n      4) \"wang5\"\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-id7lfkt",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-id7lfkt",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "XLEN key"
				}
			]
		},
		{
			"ID": "20230409224954-r1ftewj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-r1ftewj",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xrange mystream - +\n1) 1) \"1681044642176-0\"\n   2) 1) \"id\"\n      2) \"11\"\n      3) \"cname\"\n      4) \"zhang3\"\n2) 1) \"1681044663773-0\"\n   2) 1) \"id\"\n      2) \"13\"\n      3) \"cname\"\n      4) \"wang5\"\n\n127.0.0.1:6379\u003e xlen mystream\n(integer) 2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-tk8v20d",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-tk8v20d",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "XTRIM key MAXLEN|MINID"
				}
			]
		},
		{
			"ID": "20230409224954-4qhbe9s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-4qhbe9s",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用于对Stream的长度进行截取，如超长会进行截取"
				}
			]
		},
		{
			"ID": "20230409224954-nznfac4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-nznfac4",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MAXLEN 允许的最大长度，对流进行修剪限制长度"
				}
			]
		},
		{
			"ID": "20230409224954-ev075hv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-ev075hv",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MINID 允许的最小id，从某个id值开始比该id值小的将会被抛弃"
				}
			]
		},
		{
			"ID": "20230409224954-cn5z6dh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-cn5z6dh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xrange mystream - +\n1) 1) \"1681044642176-0\"\n   2) 1) \"id\"\n      2) \"11\"\n      3) \"cname\"\n      4) \"zhang3\"\n2) 1) \"1681044663773-0\"\n   2) 1) \"id\"\n      2) \"13\"\n      3) \"cname\"\n      4) \"wang5\"\n3) 1) \"1681045362551-0\"\n   2) 1) \"id\"\n      2) \"12\"\n      3) \"cname\"\n      4) \"li4\"\n4) 1) \"1681045391497-0\"\n   2) 1) \"id\"\n      2) \"15\"\n      3) \"cname\"\n      4) \"zhao6\"\n\n127.0.0.1:6379\u003e xtrim mystream maxlen 2 # 截取两条最大的数据，根据id排序\n(integer) 2\n\n127.0.0.1:6379\u003e xrange mystream - +\n1) 1) \"1681045362551-0\"\n   2) 1) \"id\"\n      2) \"12\"\n      3) \"cname\"\n      4) \"li4\"\n2) 1) \"1681045391497-0\"\n   2) 1) \"id\"\n      2) \"15\"\n      3) \"cname\"\n      4) \"zhao6\"\n\n127.0.0.1:6379\u003e xtrim mystream minid 1681045391497-0 # 截取舍弃比指定id小的数据\n(integer) 1\n127.0.0.1:6379\u003e xrange mystream - +\n1) 1) \"1681045391497-0\"\n   2) 1) \"id\"\n      2) \"15\"\n      3) \"cname\"\n      4) \"zhao6\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-7izymaa",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-7izymaa",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "XREAD [COUNT count]  [BLOCK milliseconds] STREAMS key [key ...] id [id ...]"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-x58nbn9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-x58nbn9",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以读取多个key"
				}
			]
		},
		{
			"ID": "20230409224954-uj88l15",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-uj88l15",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "用于获取消息(阻塞/非阻塞)"
				}
			]
		},
		{
			"ID": "20230409224954-u1ekw8w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-u1ekw8w",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": " 只会返回大于指定ID的消息，COUNT最多读取多少条消息；BLOCK是否以阻塞的方式读取消息，默认不阻塞，如果milliseconds设置为0，表示永远阻塞"
				}
			]
		},
		{
			"ID": "20230409224954-pqx22kj",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230409224954-pqx22kj",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "非阻塞"
				}
			]
		},
		{
			"ID": "20230409224954-94o76gc",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230409224954-94o76gc",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"ID": "20230409224954-o8vmnna",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230409224954-o8vmnna",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"ID": "20230409224954-im6hp3g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230409224954-im6hp3g",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "$"
								},
								{
									"Type": "NodeText",
									"Data": "​表特殊ID，表示以当前Stream已经存储的最大的ID作为最后一个ID，当前Stream中不存在大于当前最大ID的消息，因此此时返回nil"
								}
							]
						}
					]
				},
				{
					"ID": "20230409224954-by5crgf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230409224954-by5crgf",
						"updated": "20230409224954"
					},
					"Children": [
						{
							"ID": "20230409224954-kh2yjmy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230409224954-kh2yjmy",
								"updated": "20230409224954"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "0-0"
								},
								{
									"Type": "NodeText",
									"Data": "​代表从最小的ID开始获取Stream中的消息，当不指定count，将会返回Stream中的所有消息，注意也可以使用0 (00/000也都是可以的)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230409224954-mf4pkhq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-mf4pkhq",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xrange mystream - +\n1) 1) \"1681045723532-0\"\n   2) 1) \"id\"\n      2) \"11\"\n      3) \"name\"\n      4) \"zhang3\"\n2) 1) \"1681045730976-0\"\n   2) 1) \"id\"\n      2) \"12\"\n      3) \"name\"\n      4) \"li4\"\n3) 1) \"1681045739571-0\"\n   2) 1) \"id\"\n      2) \"13\"\n      3) \"name\"\n      4) \"wang5\"\n4) 1) \"1681045743910-0\"\n   2) 1) \"id\"\n      2) \"13\"\n      3) \"name\"\n      4) \"zhao6\"\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e\n127.0.0.1:6379\u003e xread count 2 streams mystream $\n(nil)\n127.0.0.1:6379\u003e xread count 2 streams mystream 0-0\n1) 1) \"mystream\"\n   2) 1) 1) \"1681045723532-0\"\n         2) 1) \"id\"\n            2) \"11\"\n            3) \"name\"\n            4) \"zhang3\"\n      2) 1) \"1681045730976-0\"\n         2) 1) \"id\"\n            2) \"12\"\n            3) \"name\"\n            4) \"li4\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-ymtgu22",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230409224954-ymtgu22",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "阻塞"
				}
			]
		},
		{
			"ID": "20230409224954-b6qy9sf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-b6qy9sf",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先使用该指令，使用后该进程会阻塞等待。"
				}
			]
		},
		{
			"ID": "20230409224954-ooy26xq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-ooy26xq",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xread count 1 block 0 streams mystream $ \n# 阻塞队列，一直在当前最大id值的位置阻塞，有消息进入时会马上消费\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-bujn3wi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-bujn3wi",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在新开一个客户端，输入以下指令"
				}
			]
		},
		{
			"ID": "20230409224954-bf26tdc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-bf26tdc",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xadd mystream * id 66 name hhh\n\"1681046163502-0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-oygprw2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-oygprw2",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "# 此时阻塞的这个客户端就会收到我们在另一个客户端输入的消息\n127.0.0.1:6379\u003e xread count 1 block 0 streams mystream $\n1) 1) \"mystream\"\n   2) 1) 1) \"1681046163502-0\"\n         2) 1) \"id\"\n            2) \"66\"\n            3) \"name\"\n            4) \"hhh\"\n(3.63s) # 总阻塞等待耗时3.63s\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-jhkdm4m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-jhkdm4m",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "小总结（类似java里面的阻塞队列）"
				},
				{
					"Type": "NodeText",
					"Data": "\nStream的基础方法，使用XADD存入消息和XREAD循环阻塞读取消息的方式可以实现简易版的消息队列\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409212229.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-dj3evcv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-dj3evcv",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "消费组相关指令详解"
				}
			]
		},
		{
			"ID": "20230409224954-lwaloxo",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-lwaloxo",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "XGROUP CREATE key group id|$"
				}
			]
		},
		{
			"ID": "20230409224954-31e0h6z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-31e0h6z",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用于创建消费组\n​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "xgroup create mystream groupA $xgroup create mystream groupB 0"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-pqzdbfo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-pqzdbfo",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "$"
				},
				{
					"Type": "NodeText",
					"Data": "​表示从Stream尾部开始消费"
				}
			]
		},
		{
			"ID": "20230409224954-iaqodfx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-iaqodfx",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeText",
					"Data": "​表示从Stream头部开始消费"
				}
			]
		},
		{
			"ID": "20230409224954-ttdrly9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-ttdrly9",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建消费组的时候必须指定ID，ID为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeText",
					"Data": "​表示从头开始消费，为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "$"
				},
				{
					"Type": "NodeText",
					"Data": "​表示只消费新消息"
				}
			]
		},
		{
			"ID": "20230409224954-g7xpzqu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-g7xpzqu",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xgroup create mystream groupA $\nOK\n127.0.0.1:6379\u003e xgroup create mystream groupB 0\nOK\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-gvh0b4j",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-gvh0b4j",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "XREADGROUP GROUP group [COUNT count] [BLOCK milliseconds] STREAMS key id"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-m99uqb5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-m99uqb5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\""
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​\"，表示从第一条尚未被消费的消息开始读取"
				}
			]
		},
		{
			"ID": "20230409224954-qfy26nw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-qfy26nw",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "stream中的消息—旦被消费组里的一个消费者读取了，就不能再被该消费组内的其他消费者读取了，即同一个消费组里的消费者不能消费同—条消息。刚才的XREADGROUP命令再执行—次，此时读到的就是空值"
				}
			]
		},
		{
			"ID": "20230409224954-mpt1lcy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-mpt1lcy",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xreadgroup group groupB consumer1 streams mystream \u003e\n1) 1) \"mystream\"\n   2) 1) 1) \"1681045723532-0\"\n         2) 1) \"id\"\n            2) \"11\"\n            3) \"name\"\n            4) \"zhang3\"\n      2) 1) \"1681045730976-0\"\n         2) 1) \"id\"\n            2) \"12\"\n            3) \"name\"\n            4) \"li4\"\n      3) 1) \"1681045739571-0\"\n         2) 1) \"id\"\n            2) \"13\"\n            3) \"name\"\n            4) \"wang5\"\n      4) 1) \"1681045743910-0\"\n         2) 1) \"id\"\n            2) \"13\"\n            3) \"name\"\n            4) \"zhao6\"\n      5) 1) \"1681046163502-0\"\n         2) 1) \"id\"\n            2) \"66\"\n            3) \"name\"\n            4) \"hhh\"\n127.0.0.1:6379\u003e xreadgroup group groupB consumer2 streams mystream \u003e\n(nil)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-phflvkp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-phflvkp",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "消费组groupA内的消费者consumer1从mystream消息队列中读取所有消息"
				}
			]
		},
		{
			"ID": "20230409224954-41ok77o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-41ok77o",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但是，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "不同消费组"
				},
				{
					"Type": "NodeText",
					"Data": "的消费者可以消费同一条消息"
				}
			]
		},
		{
			"ID": "20230409224954-msxl2h6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-msxl2h6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xreadgroup group groupB consumer1 streams mystream \u003e\n(nil)\n\n127.0.0.1:6379\u003e XGROUP create mystream groupC 0\nOK\n127.0.0.1:6379\u003e xreadgroup group groupC consumer1 streams mystream \u003e\n1) 1) \"mystream\"\n   2) 1) 1) \"1681045723532-0\"\n         2) 1) \"id\"\n            2) \"11\"\n            3) \"name\"\n            4) \"zhang3\"\n      2) 1) \"1681045730976-0\"\n         2) 1) \"id\"\n            2) \"12\"\n            3) \"name\"\n            4) \"li4\"\n      3) 1) \"1681045739571-0\"\n         2) 1) \"id\"\n            2) \"13\"\n            3) \"name\"\n            4) \"wang5\"\n      4) 1) \"1681045743910-0\"\n         2) 1) \"id\"\n            2) \"13\"\n            3) \"name\"\n            4) \"zhao6\"\n      5) 1) \"1681046163502-0\"\n         2) 1) \"id\"\n            2) \"66\"\n            3) \"name\"\n            4) \"hhh\"\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-w7q8wji",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-w7q8wji",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "em strong",
					"TextMarkTextContent": "消费组的目的？"
				},
				{
					"Type": "NodeText",
					"Data": "\n让组内的多个消费者共同分担读取消息，所以，我们通常会让每个消费者读取部分消息，从而实现消息读取负载在多个消费者间是均衡分部的"
				}
			]
		},
		{
			"ID": "20230409224954-nrxj2uh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-nrxj2uh",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e XGROUP create mystream groupD 0\nOK\n127.0.0.1:6379\u003e XREADGROUP GROUP groupD consumer1 COUNT 1 STREAMS mystream \u003e\n1) 1) \"mystream\"\n   2) 1) 1) \"1681045723532-0\"\n         2) 1) \"id\"\n            2) \"11\"\n            3) \"name\"\n            4) \"zhang3\"\n127.0.0.1:6379\u003e XREADGROUP GROUP groupD consumer2 COUNT 1 STREAMS mystream \u003e\n1) 1) \"mystream\"\n   2) 1) 1) \"1681045730976-0\"\n         2) 1) \"id\"\n            2) \"12\"\n            3) \"name\"\n            4) \"li4\"\n127.0.0.1:6379\u003e XREADGROUP GROUP groupD consumer3 COUNT 1 STREAMS mystream \u003e\n1) 1) \"mystream\"\n   2) 1) 1) \"1681045739571-0\"\n         2) 1) \"id\"\n            2) \"13\"\n            3) \"name\"\n            4) \"wang5\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-6h32jx5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-6h32jx5",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重点问题"
				}
			]
		},
		{
			"ID": "20230409224954-s8jtf98",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-s8jtf98",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基于 Stream 实现的消息队列，如何保证消费者在发生故障或宕机再次重启后，仍然可以读取未处理完的消息?"
				}
			]
		},
		{
			"ID": "20230409224954-v8choa9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-v8choa9",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Streams 会自动使用内部队列(也称为 PENDING List)留存消费组里每个消费者读取的消息保底措施，直到消费者使用 XACK命令通知 Streams\"消息已经处理完成”。 消费确认增加了消息的可靠性，一般在业务处理完成之后，需要执行 XACK 命令确认消息已经被消费完成\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409213809.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-r3s84mw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-r3s84mw",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "XPENDING"
				}
			]
		},
		{
			"ID": "20230409224954-l7nwrl6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-l7nwrl6",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查询每个消费组内所有消费组"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "已读取、但尚未确认"
				},
				{
					"Type": "NodeText",
					"Data": "的消息"
				}
			]
		},
		{
			"ID": "20230409224954-zhoh65w",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-zhoh65w",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xpending mystream groupA\n1) (integer) 0\n2) (nil)\n3) (nil)\n4) (nil)\n127.0.0.1:6379\u003e xpending mystream groupB\n1) (integer) 5    # 总共有五条\n2) \"1681045723532-0\"\n3) \"1681046163502-0\"\n4) 1) 1) \"consumer1\"\n      2) \"5\"  # 表示一次读了5条\n127.0.0.1:6379\u003e xpending mystream groupC\n1) (integer) 5\n2) \"1681045723532-0\"\n3) \"1681046163502-0\"\n4) 1) 1) \"consumer1\"\n      2) \"5\"\n127.0.0.1:6379\u003e xpending mystream groupD\n1) (integer) 3   #总共有五条\n2) \"1681045723532-0\"\n3) \"1681045739571-0\"\n4) 1) 1) \"consumer1\"\n      2) \"1\"     # 表示一次读了1条\n   2) 1) \"consumer2\"\n      2) \"1\"\n   3) 1) \"consumer3\"\n      2) \"1\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-j7763od",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-j7763od",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查看某个消费组具体读取了那些数据\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230409214346.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-5t2sg8r",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-5t2sg8r",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "XACK key group id [id...]"
				}
			]
		},
		{
			"ID": "20230409224954-4dmad3n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-4dmad3n",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "向消息队列确认消息处理已完成"
				}
			]
		},
		{
			"ID": "20230409224954-ap70pmk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-ap70pmk",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xpending mystream groupD - + 1 consumer2 # 参看已读为确认的消息\n1) 1) \"1681045730976-0\"\n   2) \"consumer2\"\n   3) (integer) 607717\n   4) (integer) 1\n\n127.0.0.1:6379\u003e xack mystream groupD 1681045730976-0 #对消息进行确认\n(integer) 1\n\n127.0.0.1:6379\u003e xpending mystream groupD - + 1 consumer2 # 已读为确认就会减少一条\n(empty array)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-wbf99wj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230409224954-wbf99wj",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "XINFO 用于打印Stream\\Consumer\\Group的详细信息"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230409224954-f6pxde0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230409224954-f6pxde0",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "127.0.0.1:6379\u003e xrange mystream - +\n1) 1) \"1681045723532-0\"\n   2) 1) \"id\"\n      2) \"11\"\n      3) \"name\"\n      4) \"zhang3\"\n2) 1) \"1681045730976-0\"\n   2) 1) \"id\"\n      2) \"12\"\n      3) \"name\"\n      4) \"li4\"\n3) 1) \"1681045739571-0\"\n   2) 1) \"id\"\n      2) \"13\"\n      3) \"name\"\n      4) \"wang5\"\n4) 1) \"1681045743910-0\"\n   2) 1) \"id\"\n      2) \"13\"\n      3) \"name\"\n      4) \"zhao6\"\n5) 1) \"1681046163502-0\"\n   2) 1) \"id\"\n      2) \"66\"\n      3) \"name\"\n      4) \"hhh\"\n\n127.0.0.1:6379\u003e XINFO STREAM mystream\n 1) \"length\"\n 2) (integer) 5        # 此stream的长度是5\n 3) \"radix-tree-keys\"\n 4) (integer) 1\n 5) \"radix-tree-nodes\"\n 6) (integer) 2\n 7) \"last-generated-id\"\n 8) \"1681046163502-0\"\n 9) \"max-deleted-entry-id\"\n10) \"0-0\"\n11) \"entries-added\"\n12) (integer) 5\n13) \"recorded-first-entry-id\"\n14) \"1681045723532-0\"\n15) \"groups\"\n16) (integer) 4\n17) \"first-entry\"\n18) 1) \"1681045723532-0\"    # 第一个进入的消息\n    2) 1) \"id\"\n       2) \"11\"\n       3) \"name\"\n       4) \"zhang3\"\n19) \"last-entry\"\n20) 1) \"1681046163502-0\"  # 最后一个进入的消息\n    2) 1) \"id\"\n       2) \"66\"\n       3) \"name\"\n       4) \"hhh\"\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230409224954-3ofkd7n",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230409224954-3ofkd7n",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用建议"
				}
			]
		},
		{
			"ID": "20230409224954-p4as2yn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230409224954-p4as2yn",
				"updated": "20230409224954"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Stream还是不能100%等价于Kafka、RabbitMQ来使用的，生产案例少，慎用"
				}
			]
		}
	]
}