{
	"ID": "20230423223608-zn4yppx",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230423223608-zn4yppx",
		"title": "数据类型与常量",
		"updated": "20230423223642"
	},
	"Children": [
		{
			"ID": "20230423223633-n3rm4hm",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230423223633-n3rm4hm",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字面常量"
				}
			]
		},
		{
			"ID": "20230423223633-53pmgwb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-53pmgwb",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在上节课HelloWorld程序中， "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "System.Out.println(\u0026quot;Hello World\u0026quot;);"
				},
				{
					"Type": "NodeText",
					"Data": "​  语句，不论程序何时运行，输出的都是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Hello World"
				},
				{
					"Type": "NodeText",
					"Data": "​，其实\""
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Hello World"
				},
				{
					"Type": "NodeText",
					"Data": "​\"就是字面常量。"
				}
			]
		},
		{
			"ID": "20230423223633-k7g2har",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-k7g2har",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "常量即程序运行期间，固定不变的量称为常量"
				},
				{
					"Type": "NodeText",
					"Data": "，比如：一个礼拜七天，一年12个月等。"
				}
			]
		},
		{
			"ID": "20230423223633-8k6p375",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-8k6p375",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class Demo{\n   public static void main(String[] args){\n        System.Out.println(\"hello world!\");\n        System.Out.println(100);\n        System.Out.println(3.14);\n        System.Out.println('A');\n        System.Out.println(true);\n        System.Out.println(false); \n  }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-6jav7x3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-6jav7x3",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "100"
				},
				{
					"Type": "NodeText",
					"Data": "​、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "3.14"
				},
				{
					"Type": "NodeText",
					"Data": "​、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "'A'"
				},
				{
					"Type": "NodeText",
					"Data": "​、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "true/false"
				},
				{
					"Type": "NodeText",
					"Data": "​都是常量，将其称为"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "字面常量"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230423223633-08sk1km",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-08sk1km",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字面常量的分类："
				}
			]
		},
		{
			"ID": "20230423223633-4qbapsg",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-4qbapsg",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-z1y67ej",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230423223633-z1y67ej",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-hrsf90q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-hrsf90q",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符串常量：由\"\"括起来的，比如“12345”、“hello”、“你好”。"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-tx98e1g",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230423223633-tx98e1g",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-xov3vhf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-xov3vhf",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "整形常量：程序中直接写的数字(注意没有小数点)，比如：100、1000"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-nayy5go",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230423223633-nayy5go",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-0zb42aa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-0zb42aa",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "浮点数常量：程序中直接写的小数，比如：3.14、0.49"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-ytjorod",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230423223633-ytjorod",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-2ckxohz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-2ckxohz",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符常量：由  单引号  括起来的当个字符，比如：‘A’、‘1’"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-hatvthm",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20230423223633-hatvthm",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-rzu4pix",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-rzu4pix",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "布尔常量：只有两种true和false"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-txhn4fy",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Ni4=",
						"Num": 6
					},
					"Properties": {
						"id": "20230423223633-txhn4fy",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-9qdorcn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-9qdorcn",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "空常量：null(后面了讲)\n注意：字符串、整形、浮点型、字符型以及布尔型，在Java中都称为数据类型。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-0ia70n2",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230423223633-0ia70n2",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数据类型"
				}
			]
		},
		{
			"ID": "20230423223633-b832wsj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-b832wsj",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在Java中数据类型主要分为两类：基本数据类型和引用数据类型。\n基本数据类型有四类八种："
				}
			]
		},
		{
			"ID": "20230423223633-pqz0qnj",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-pqz0qnj",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-n9rmerm",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230423223633-n9rmerm",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-vsttyhp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-vsttyhp",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "四类：整型、浮点型、字符型以及布尔型"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-zp1xpfe",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230423223633-zp1xpfe",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-9mwxvfb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-9mwxvfb",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "八种：\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "Pasted image 20221126122309.png"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/Pasted%20image%2020221126122309.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-hck97lh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-hck97lh",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意："
				}
			]
		},
		{
			"ID": "20230423223633-n83cxwc",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230423223633-n83cxwc",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-apiewdu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230423223633-apiewdu",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-h7t1gz3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-h7t1gz3",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不论是在16位系统还是32位系统，int都占用4个字节，long都占8个字节"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-mibyarf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230423223633-mibyarf",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-vzxkwhm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-vzxkwhm",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "整形和浮点型都是带有符号的"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-r2ac3x3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230423223633-r2ac3x3",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-cfnondg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-cfnondg",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "整型默认为int型，浮点型默认为double"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-6den91f",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230423223633-6den91f",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-s019esp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-s019esp",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字符串属于引用类型，该中类型后序介绍。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-v39wmm5",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230423223633-v39wmm5",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230423223633-jg6r29p",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230423223633-jg6r29p",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark",
							"TextMarkTextContent": "什么是字节?"
						}
					]
				},
				{
					"ID": "20230423223633-vcbrppm",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20230423223633-vcbrppm",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-mzdkljp",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20230423223633-mzdkljp",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"ID": "20230423223633-z97os70",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230423223633-z97os70",
										"updated": "20230423223633"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "字节是计算机中表示空间大小的基本单位."
										}
									]
								}
							]
						},
						{
							"ID": "20230423223633-ohesizy",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20230423223633-ohesizy",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"ID": "20230423223633-j6vxu6c",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230423223633-j6vxu6c",
										"updated": "20230423223633"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "计算机使用二进制表示数据. 我们认为 8 个二进制位(bit) 为一个字节(Byte)."
										}
									]
								}
							]
						},
						{
							"ID": "20230423223633-jzg4kp7",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20230423223633-jzg4kp7",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"ID": "20230423223633-o0f9ti9",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230423223633-o0f9ti9",
										"updated": "20230423223633"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "我们平时的计算机为 8GB 内存, 意思是 8G 个字节."
										}
									]
								}
							]
						},
						{
							"ID": "20230423223633-x9upxgo",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20230423223633-x9upxgo",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"ID": "20230423223633-9ehdzi8",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230423223633-9ehdzi8",
										"updated": "20230423223633"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "其中 "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "1KB = 1024 Byte"
										},
										{
											"Type": "NodeText",
											"Data": ", "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "1MB = 1024 KB"
										},
										{
											"Type": "NodeText",
											"Data": ", "
										},
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "1GB = 1024 MB"
										},
										{
											"Type": "NodeText",
											"Data": "."
										}
									]
								}
							]
						},
						{
							"ID": "20230423223633-ai6po5w",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20230423223633-ai6po5w",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"ID": "20230423223633-klnwa2z",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20230423223633-klnwa2z",
										"updated": "20230423223633"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "所以 8GB 相当于 80 多亿个字节."
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-vre1a41",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230423223633-vre1a41",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量"
				}
			]
		},
		{
			"ID": "20230423223633-bsbu9tf",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230423223633-bsbu9tf",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量概念"
				}
			]
		},
		{
			"ID": "20230423223633-xsos7xx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-xsos7xx",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在程序中，除了有始终不变的常量外，有些内容可能会经常改变，比如：人的年龄、身高、成绩分数、数学函数的计算结果等，对于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "这些经常改变的内容，在Java程序中，称为变量。而数据类型就是用来定义不同种类变量的"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230423223633-e4sfg2t",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230423223633-e4sfg2t",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "语法格式"
				}
			]
		},
		{
			"ID": "20230423223633-hdjavf2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-hdjavf2",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "定义变量的语法格式为："
				}
			]
		},
		{
			"ID": "20230423223633-b9xzzm8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-b9xzzm8",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int a = 10;   // 定义整形变量a，a是变量名也称为标识符，该变量中放置的值为10 \ndouble d = 3.14;\nchar c = 'A';\nboolean b = true;\n\nSystem.Out.println(a);\nSystem.Out.println(d);\nSystem.Out.println(c);\nSystem.Out.println(b);\n\na = 100;  // a是变量，a中的值是可以修改的，注意：= 在java中表示赋值，即将100交给a，a中保存的值就是100 \nSystem.Out.println(a);\n\n// 注意：在一行可以定义多个相同类型的变量 \nint a1 = 10, a2 = 20, a3 = 30;\nSystem.Out.println(a1);\nSystem.Out.println(a2);\nSystem.Out.println(a3);\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-0dkexi5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230423223633-0dkexi5",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "整型变量"
				}
			]
		},
		{
			"ID": "20230423223633-vwmrtam",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230423223633-vwmrtam",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "int 整型变量"
				}
			]
		},
		{
			"ID": "20230423223633-mg9jtm6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-mg9jtm6",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 方式一：在定义时给出初始值 \nint a = 10;\nSystem.Out.println(a);\n\n// 方式二：在定义时没有给初始值，但使用前必须设置初值 \nint b;\nb = 10;\nSystem.Out.println(b);\n\n// 使用方式二定义后，在使用前如果没有赋值，则编译期间会报错 \nint c;\nSystem.Out.println(c);\nc = 100;\n\n// int型变量所能表示的范围：\nSystem.Out.println(Integer.MIN_VALUE);\nSystem.Out.println(Integer.MAX_VALUE);\n\n// 注意：在定义int性变量时，所赋值不能超过int的范围\nint d = 12345678901234;  // 编译时报错，初值超过了int的范围\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-bavn2r6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-bavn2r6",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意事项："
				}
			]
		},
		{
			"ID": "20230423223633-xpttn0t",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-xpttn0t",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-fop34ku",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230423223633-fop34ku",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-noqsseb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-noqsseb",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "int不论在何种系统下都是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "4个字节"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-ko7he41",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230423223633-ko7he41",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-hq17ag5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-hq17ag5",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "推荐使用方式一定义，如果没有合适的初始值，可以设置为0"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-nux0cv7",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230423223633-nux0cv7",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-pjrhb56",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-pjrhb56",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在给变量设置初始值时，值不能超过int的表示范围，否则会导致溢出"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-8zistrg",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230423223633-8zistrg",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-lh35pfy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-lh35pfy",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "变量在使用之前必须要赋初值，否则编译报错"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-ylq0hus",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20230423223633-ylq0hus",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-i6ktjq4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-i6ktjq4",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "int的包装类型为 Integer(可以理解为int的加强版)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-ma1jgyp",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230423223633-ma1jgyp",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "long 长整型变量"
				}
			]
		},
		{
			"ID": "20230423223633-3r84iho",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-3r84iho",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int a = 10;\nlong b = 10;   // long定义的长整型变量\n\nlong c = 10L; // 为了区分int和long类型，一般建议：long类型变量的初始值之后加L或者l\nlong d = 10l; // 一般更加以加大写L，因为小写l与1不好区分\n\n// long型变量所能表示的范围：这个数据范围远超过    int 的表示范围. 足够绝大部分的工程场景使用. \nSystem.Out.println(Long.MIN_VALUE);\nSystem.Out.println(Long.MAX_VALUE);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-4u8gc4b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-4u8gc4b",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意事项："
				}
			]
		},
		{
			"ID": "20230423223633-5jnfrmi",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-5jnfrmi",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-ztthykf",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230423223633-ztthykf",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-dpu170m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-dpu170m",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "长整型变量的初始值后加L或者l，推荐加L"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-fnha1gh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230423223633-fnha1gh",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-fy54t7p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-fy54t7p",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "长整型不论在那个系统下都占"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "8个字节"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-c8ki9fy",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230423223633-c8ki9fy",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-d8yxcru",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-d8yxcru",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "长整型的表示范围为："
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "inline-math",
									"TextMarkInlineMathContent": "-2^{31}"
								},
								{
									"Type": "NodeText",
									"Data": " ~ "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "inline-math",
									"TextMarkInlineMathContent": "2^{31}-1"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-gx81398",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230423223633-gx81398",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-bi0tg6p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-bi0tg6p",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "long的包装类型为Long(可以理解为long的加强版)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-sa070l5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230423223633-sa070l5",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "short 短整型变量"
				}
			]
		},
		{
			"ID": "20230423223633-otsvf3f",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-otsvf3f",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "short a = 10;\nSystem.Out.println(a);\n\n// short型变量所能表示的范围：\nSystem.Out.println(Short.MIN_VALUE); \nSystem.Out.println(Short.MAX_VALUE);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-yxjy1if",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-yxjy1if",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意事项："
				}
			]
		},
		{
			"ID": "20230423223633-we31v5a",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-we31v5a",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-fhr01zh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230423223633-fhr01zh",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-d54ajc2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-d54ajc2",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "short在任何系统下都占"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "2个字节"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-oqlwpqs",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230423223633-oqlwpqs",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-4hi4lm5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-4hi4lm5",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "short的表示范围为：-32768 ~ 32767"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-ii91y0e",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230423223633-ii91y0e",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-r76fyjk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-r76fyjk",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用时注意不要超过范围(一般使用比较少)"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-lofs057",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230423223633-lofs057",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-g208jwk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-g208jwk",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "short的包装类型为Short"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-7em56h4",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230423223633-7em56h4",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字节型变量"
				}
			]
		},
		{
			"ID": "20230423223633-hlc1c3l",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-hlc1c3l",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "byte b = 10;\nSystem.Out.println(b);\n\n// byte型变量所能表示的范围：\nSystem.Out.println(Byte.MIN_VALUE); \nSystem.Out.println(Byte.MAX_VALUE);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-s2mosce",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-s2mosce",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意事项："
				}
			]
		},
		{
			"ID": "20230423223633-1wtmiug",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-1wtmiug",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-jpxra8x",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230423223633-jpxra8x",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-obpr9se",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-obpr9se",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "byte在任何系统下都占"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "1个字节"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-29f3ukw",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230423223633-29f3ukw",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-xra75b3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-xra75b3",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "byte的范围是：-128 ~ 127"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-n9n2ou9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230423223633-n9n2ou9",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-f9r96qc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-f9r96qc",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "字节的包装类型为Byte"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-5ruid3z",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230423223633-5ruid3z",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "思考：byte、short、int、long都可以定义整形变量，为什么要给出4中不同类型呢？"
				}
			]
		},
		{
			"ID": "20230423223633-9zu3j7o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-9zu3j7o",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这就好比买衣服时的尺码,不同的人适合不同的尺码。"
				}
			]
		},
		{
			"ID": "20230423223633-svat85h",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230423223633-svat85h",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "浮点型变量"
				}
			]
		},
		{
			"ID": "20230423223633-o07xz3g",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230423223633-o07xz3g",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "double双精度浮点型"
				}
			]
		},
		{
			"ID": "20230423223633-6q2sa6n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-6q2sa6n",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "double d = 3.14; \nSystem.Out.println(d);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-nrxzpwa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-nrxzpwa",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "神奇的代码一："
				}
			]
		},
		{
			"ID": "20230423223633-qiv7ki1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-qiv7ki1",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int a = 1; \nint b = 2;\nSystem.out.println(a / b);   // 输出 0.5 吗? 不会 结果为0\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-olizesv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-olizesv",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "在 Java 中, int 除以 int 的值仍然是 int(会直接舍弃小数部分)"
				},
				{
					"Type": "NodeText",
					"Data": "。如果想得到 0.5, 需要使用 double 类型计算."
				}
			]
		},
		{
			"ID": "20230423223633-beal5d0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-beal5d0",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "double a = 1.0; \ndouble b = 2.0;\nSystem.out.println(a / b);   // 输出0.5\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-gnsotuy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-gnsotuy",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "神奇的代码二："
				}
			]
		},
		{
			"ID": "20230423223633-7tin1zg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-7tin1zg",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "double num = 1.1;\nSystem.out.println(num * num);  // 输出1.21吗？ \n\n// 执行结果\n1.2100000000000002\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-41ugt37",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-41ugt37",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意事项："
				}
			]
		},
		{
			"ID": "20230423223633-v413tk5",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-v413tk5",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-eor07zx",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230423223633-eor07zx",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-3eyy4cs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-3eyy4cs",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "double在任何系统下都占"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "8个字节"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-ixukkb9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230423223633-ixukkb9",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-rspan3g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-rspan3g",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "浮点数与整数在内存中的存储方式不同，不能单纯使用 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "inline-math",
									"TextMarkInlineMathContent": "2^n"
								},
								{
									"Type": "NodeText",
									"Data": " 的形式来计算"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-kzxnnn0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230423223633-kzxnnn0",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-9ivirkd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-9ivirkd",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "double的包装类型为Double"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-355he6q",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230423223633-355he6q",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-4mwr8ti",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-4mwr8ti",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "double 类型的内存布局遵守 IEEE 754 标准(和C语言一样), 尝试使用有限的内存空间表示可能无限的小数, 势必\n会存在一定的精度误差，因此浮点数是个近似值，并不是精确值。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-yjuqjrl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230423223633-yjuqjrl",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "float 单精度浮点型"
				}
			]
		},
		{
			"ID": "20230423223633-a3whtim",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-a3whtim",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "float num = 1.0f;    // 写作    1.0F 也可以 \nSystem.out.println(num);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-izgsnjr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-izgsnjr",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "ﬂoat 类型在 Java 中占四个字节, 同样遵守 IEEE 754 标准. 由于表示的数据精度范围较小, 一般在工程上用到浮点数都优先考虑 double, 不太推荐使用 ﬂoat. ﬂoat的包装类型为Float。"
				}
			]
		},
		{
			"ID": "20230423223633-ur8ph70",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230423223633-ur8ph70",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字符型变量"
				}
			]
		},
		{
			"ID": "20230423223633-x9deli6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-x9deli6",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "char c1 = 'A';    // 大写字母 \nchar c2 = '1';    // 数字字符\n\nSystem.out.println(c1);\nSystem.out.println(c2);\n\n// 注意：java中的字符可以存放整形 \nchar c3 = '帅';\nSystem.out.println(c3);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-fpugjzs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-fpugjzs",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意事项:"
				}
			]
		},
		{
			"ID": "20230423223633-93gkxu3",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-93gkxu3",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-xmju9ax",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230423223633-xmju9ax",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-u3mv5bu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-u3mv5bu",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java 中使用  "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": " 单引号    + 单个字母"
								},
								{
									"Type": "NodeText",
									"Data": "​ 的形式表示字符字面值."
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-trr1si4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230423223633-trr1si4",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-5n0vvwh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-5n0vvwh",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "计算机中的字符本质上是一个整数. 在 C 语言中使用 ASCII 表示字符, 而 Java 中使用 Unicode 表示字符. 因此一个字符占用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "两个字节"
								},
								{
									"Type": "NodeText",
									"Data": ", 表示的字符种类更多, 包括中文."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-8kd6q04",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-8kd6q04",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "char ch = '呵';\nSystem.out.println(ch);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-g9zpzk7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-g9zpzk7",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "执行 javac 的时候可能出现以下错误:"
				}
			]
		},
		{
			"ID": "20230423223633-w0mdd2q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-w0mdd2q",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Test.java:3: 错误: 未结束的字符文字 \n       char ch = '鍛?';\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-4f9ye34",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-4f9ye34",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时我们在执行 javac 时加上 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "-encoding UTF-8"
				},
				{
					"Type": "NodeText",
					"Data": "​ 选项即可"
				}
			]
		},
		{
			"ID": "20230423223633-10teoy0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-10teoy0",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "javac -encoding UTF-8 Test.java\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-5sxl8x2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-5sxl8x2",
				"updated": "20230423223642"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于字符编码方式的讨论, 参见\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://zhuanlan.zhihu.com/p/35172335",
					"TextMarkTextContent": "https://zhuanlan.zhihu.com/p/35172335"
				}
			]
		},
		{
			"ID": "20230423223633-rxbd1xx",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-rxbd1xx",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-niodgbv",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230423223633-niodgbv",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-39xnua4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-39xnua4",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "char的包装类型为Character"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-22z0zps",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230423223633-22z0zps",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "布尔型变量"
				}
			]
		},
		{
			"ID": "20230423223633-vfx80id",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-vfx80id",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "布尔类型常用来表示真假，在现实生活中也是经常出现的，比如：听说xxx同学买彩票中了一个亿...，听到后估计大\n部分人第一反应就是：我x，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "真的假的"
				},
				{
					"Type": "NodeText",
					"Data": "？"
				}
			]
		},
		{
			"ID": "20230423223633-82cg2uj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-82cg2uj",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "boolean b = true; \nSystem.out.println(b);\n\nb = false;\nSystem.out.println(b);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-0iwvheo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-0iwvheo",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意事项："
				}
			]
		},
		{
			"ID": "20230423223633-8n4dtoi",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-8n4dtoi",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-itk6prt",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230423223633-itk6prt",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-dqeht5s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-dqeht5s",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "boolean 类型的变量只有两种取值, true 表示真, false 表示假."
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-uwy6crp",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230423223633-uwy6crp",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-8m6gehb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-8m6gehb",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java 的 boolean 类型和 int 不能相互转换, "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "不存在 1 表示 true, 0 表示 false 这样的用法"
								},
								{
									"Type": "NodeText",
									"Data": "."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-ocj9370",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-ocj9370",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "boolean value = true;\nSystem.out.println(value + 1); \n// 代码编译会出现如下错误\nTest.java:4: 错误: 二元运算符    '+' 的操作数类型错误 \n       System.out.println(value + 1);\n                                ^ \n 第一个类型:  boolean\n 第二个类型: int \n 1 个错误\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-6y3cs8f",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-6y3cs8f",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-ku6buuj",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230423223633-ku6buuj",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-jkkqgfj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-jkkqgfj",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java虚拟机规范中，并没有明确规定boolean占几个字节，也没有专门用来处理boolean的字节码指令，在 Oracle公司的虚拟机实现中，"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "boolean占1个字节"
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-3vze4mh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230423223633-3vze4mh",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-puhcsa1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-puhcsa1",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "boolean的包装类型为Boolean。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-byvfky5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230423223633-byvfky5",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类型转换"
				}
			]
		},
		{
			"ID": "20230423223633-v487cim",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-v487cim",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java 作为一个强类型编程语言, 当不同类型之间的变量相互赋值的时候, 会有教严格的校验."
				}
			]
		},
		{
			"ID": "20230423223633-ogqevfx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-ogqevfx",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int a = 10;\nlong b = 100L;\n\nb = a;   // 可以通过编译 \na = b;   // 编译失败\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-lv9z0vw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-lv9z0vw",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在Java中，当参与运算数据类型不一致时，就会进行类型转换。Java中类型转换主要分为两类：自动类型转换(隐式)\n和  强制类型转换(显式)。"
				}
			]
		},
		{
			"ID": "20230423223633-8dh772y",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230423223633-8dh772y",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "自动类型转换(隐式)"
				}
			]
		},
		{
			"ID": "20230423223633-zjsjhn1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-zjsjhn1",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "自动类型转换即："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "代码不需要经过任何处理，在代码编译时，编译器会自动进行处理。特点：数据范围小的转为数据范围大的时会自动进行"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230423223633-e9nvsso",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-e9nvsso",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "System.Out.println(1024);   // 整型默认情况下是int \nSystem.Out.println(3.14);   // 浮点型默认情况下是double\n\nint a = 100; \nlong b = 10L;\nb = a;   // a和b都是整形，a的范围小，b的范围大，当将a赋值给b时，编译器会自动将a提升为long类型，然后赋值 \na = b;   // 编译报错，long的范围比int范围大，会有数据丢失，不安全\n\nfloat f = 3.14F; \ndouble d = 5.12;\nd = f; // 编译器会将f转换为double，然后进行赋值\nf = d; // double表示数据范围大，直接将float交给double会有数据丢失，不安全 \n\nbyte b1 = 100;  // 编译通过，100没有超过byte的范围，编译器隐式将100转换为byte\nbyte b2 = 257;  // 编译失败，257超过了byte的数据范围，有数据丢失\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-dfj4dt7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230423223633-dfj4dt7",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "强制类型转换(显式)"
				}
			]
		},
		{
			"ID": "20230423223633-uyv32tk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-uyv32tk",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "强制类型转换：当进行操作时，代码需要经过一定的格式处理，不能自动完成。特点：数据范围大的到数据范围小的。"
				}
			]
		},
		{
			"ID": "20230423223633-02irnmg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-02irnmg",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int a = 10; \nlong b = 100L;\nb = a;        // int--\u003elong，数据范围由小到大，隐式转换\na = (int)b;   // long--\u003eint, 数据范围由大到小，需要强转，否则编译失败 \n\nfloat f = 3.14F;\ndouble d = 5.12;\nd = f;        // float--\u003edouble，数据范围由小到大，隐式转换\nf = (float)d; // double--\u003efloat, 数据范围由大到小，需要强转，否则编译失败 \n\na = d;   // 报错，类型不兼容\na = (int)d;   // double没有int表示的数据范围大，需要强转，小数点之后全部丢弃 \n\nbyte b1 = 100;        // 100默认为int，没有超过byte范围，隐式转换\nbyte b2 = (byte)257;  // 257默认为int，超过byte范围，需要显示转换，否则报错 \n\nboolean flag = true;\na = flag;   // 编译失败：类型不兼容 \nflag = a;   // 编译失败：类型不兼容\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-w4grll5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-w4grll5",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意事项："
				}
			]
		},
		{
			"ID": "20230423223633-y8djg9m",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-y8djg9m",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-a5mjqhe",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230423223633-a5mjqhe",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-choz6li",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-choz6li",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不同数字类型的变量之间赋值, 表示范围更小的类型能隐式转换成范围较大的类型"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-r3iraw6",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230423223633-r3iraw6",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-1zaznw5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-1zaznw5",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果需要把范围大的类型赋值给范围小的, 需要强制类型转换, 但是可能精度丢失"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-13zm7u1",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230423223633-13zm7u1",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-rprtifx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-rprtifx",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "将一个字面值常量进行赋值的时候, Java 会自动针对数字范围进行检查"
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-c1jxjo8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230423223633-c1jxjo8",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-pntlhdg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-pntlhdg",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "强制类型转换不一定能成功，不相干的类型不能互相转换"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-ccvrwb0",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230423223633-ccvrwb0",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "类型提升"
				}
			]
		},
		{
			"ID": "20230423223633-3yb51i0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-3yb51i0",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不同类型的数据之间相互运算时，数据类型小的会被提升到数据类型大的。"
				}
			]
		},
		{
			"ID": "20230423223633-43vbg4u",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230423223633-43vbg4u",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. int与long之间：int会被提升为long"
				}
			]
		},
		{
			"ID": "20230423223633-xxmja5e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-xxmja5e",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int a = 10; \nlong b = 20;\nint c = a + b;    // 编译出错: a + b==》int + long--\u003e long + long 赋值给int时会丢失数据 \nlong d = a + b;   // 编译成功：a + b==\u003eint + long---\u003elong + long 赋值给long  \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-nvme4ap",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230423223633-nvme4ap",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. byte与byte的运算"
				}
			]
		},
		{
			"ID": "20230423223633-vg1zgvx",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-vg1zgvx",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "byte a = 10;\nbyte b = 20;\nbyte c = a + b; \nSystem.out.println(c);\n// 编译报错\nTest.java:5: 错误: 不兼容的类型: 从int转换到byte可能会有损失 \n               byte c = a + b;\n\t\t\t\t          ^\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-pm4qllm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-pm4qllm",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结论: byte 和 byte 都是相同类型, 但是出现编译报错. 原因是, 虽然 a 和 b 都是 byte, 但是计算 a + b 会先将 a 和 b 都提升成 int, 再进行计算, 得到的结果也是 int, 这是赋给 c, 就会出现上述错误.\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "由于计算机的 CPU 通常是按照 4 个字节为单位从内存中读写数据. 为了硬件上实现方便, 诸如 byte 和 short 这种低于 4 个字节的类型, 会先提升成 int, 再参与计算."
				}
			]
		},
		{
			"ID": "20230423223633-p7n569t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-p7n569t",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "正确的写法:"
				}
			]
		},
		{
			"ID": "20230423223633-cass32e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-cass32e",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "byte a = 10;\nbyte b = 20;\nbyte c = (byte)(a + b); \nSystem.out.println(c);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-aw03tfr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-aw03tfr",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "【类型提升小结:】"
				}
			]
		},
		{
			"ID": "20230423223633-xwyahgx",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-xwyahgx",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-sgrnxxu",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230423223633-sgrnxxu",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-unozp4n",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-unozp4n",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不同类型的数据混合运算, 范围小的会提升成范围大的."
								}
							]
						}
					]
				},
				{
					"ID": "20230423223633-ypn79ps",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230423223633-ypn79ps",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-ln59luf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-ln59luf",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于 short, byte 这种比 4 个字节小的类型, 会先提升成 4 个字节的 int , 再运算."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-k44g54h",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20230423223633-k44g54h",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字符串类型"
				}
			]
		},
		{
			"ID": "20230423223633-h9drjdf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-h9drjdf",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在Java中使用String类定义字符串类型，比如"
				}
			]
		},
		{
			"ID": "20230423223633-vimxpow",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-vimxpow",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public static void main(String[] args) { \n   String s1 = \"hello\";\n   String s2 = \" world\";\n   System.out.println(s1);\n   System.out.println(s2);\n   System.out.println(s1+s2);   // s1+s2表示：将s1和s2进行拼接 \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-hig5p6w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-hig5p6w",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在有些情况下，需要将字符串和整形数字之间进行转换："
				}
			]
		},
		{
			"ID": "20230423223633-9c3r3b1",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-9c3r3b1",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-d9841a3",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230423223633-d9841a3",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-zkwj5vf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-zkwj5vf",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "int 转成 String"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-hofxeec",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-hofxeec",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "int num = 10; \n\n// 方法1\nString str1 = num + \"\";  \n\n// 方法2\nString str2 = String.valueOf(num);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-86ml3qo",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230423223633-86ml3qo",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"ID": "20230423223633-1fglffs",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230423223633-1fglffs",
						"updated": "20230423223633"
					},
					"Children": [
						{
							"ID": "20230423223633-byj8176",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230423223633-byj8176",
								"updated": "20230423223633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "String 转成 int"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230423223633-865weo2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230423223633-865weo2",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "String str = \"100\";\nint num = Integer.parseInt(str);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230423223633-qfueo13",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223633-qfueo13",
				"updated": "20230423223633"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本节对只是对字符串进行简单的介绍，大家能够正常使用即可，后序会详细给大家介绍。"
				}
			]
		},
		{
			"ID": "20230423223608-2tyw7id",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230423223608-2tyw7id",
				"updated": "20230423223608"
			}
		}
	]
}