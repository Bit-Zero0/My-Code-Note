{
	"ID": "20221128084612-msp01xb",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20221128084612-msp01xb",
		"title": "Servlet",
		"updated": "20221129224758"
	},
	"Children": [
		{
			"ID": "20221128084640-0c1x9n9",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221128084640-0c1x9n9",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Servlet 是什么"
				}
			]
		},
		{
			"ID": "20221128084640-nwokr4x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-nwokr4x",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Servlet 是一种实现动态页面的技术. 是一组 Tomcat 提供给程序猿的 API, 帮助程序猿简单高效的开发一\n个 web app."
				}
			]
		},
		{
			"ID": "20221128084640-dt95rqd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-dt95rqd",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "回顾  动态页面 vs 静态页面"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-x2l711j",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221128084640-x2l711j",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-ztw1vwp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-ztw1vwp",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-xcu7pmz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-xcu7pmz",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "静态页面也就是内容始终固定的页面. 即使  "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "用户不同/时间不同/输入的参数不同, 页面内容也不会发生变化"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " . (除非网站的开发人员修改源代码, 否则页面内容始终不变)."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-dp75uuj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-dp75uuj",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-4uk7a2k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-4uk7a2k",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对应的, "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "动态页面指的就是  用户不同/时间不同/输入的参数不同, 页面内容会发生变化"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-p56bvgi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-p56bvgi",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "构建动态页面的技术有很多, 每种语言都有一些相关的库/框架来做这件事.\n"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Servlet"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 就是 Tomcat 这个 HTTP 服务器提供给 Java 的一组 API, 来完成构建动态页面这个任务."
				}
			]
		},
		{
			"ID": "20221128084645-caeg9x5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084645-caeg9x5"
			}
		},
		{
			"ID": "20221128084640-6wctu0w",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-6wctu0w",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Servlet 主要做的工作"
				}
			]
		},
		{
			"ID": "20221128084640-nsa844q",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221128084640-nsa844q",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-sacl5i9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-sacl5i9",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-j11qj2p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-j11qj2p",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "允许程序猿注册一个类, 在 Tomcat 收到某个特定的 HTTP 请求的时候, 执行这个类中的一些代码."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-m2lbazg",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-m2lbazg",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-kmquogo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-kmquogo",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "帮助程序猿解析 HTTP 请求, 把 HTTP 请求从一个字符串解析成一个 HttpRequest 对象."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-usbbt8c",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-usbbt8c",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-r0jytnd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-r0jytnd",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "帮助程序猿构造 HTTP 响应. 程序猿只要给指定的 HttpResponse 对象填写一些属性字段, Servlet就会自动的安装 HTTP 协议的方式构造出一个 HTTP 响应字符串, 并通过 Socket 写回给客户端."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-mnvpjq3",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-mnvpjq3",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-847k1g9",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-847k1g9",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "当然, Servlet 还支持一些其他的辅助功能, 此处暂时先不介绍."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-i7gbelm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-i7gbelm",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "简而言之, Servlet 是一组 Tomcat 提供的 API, 让程序猿自己写的代码能很好的和 Tomcat 配合起来, 从而更简单的实现一个 web app.\n而不必关注 Socket, HTTP协议格式, 多线程并发等技术细节, 降低了 web app 的开发门槛, 提高了开发效率."
				}
			]
		},
		{
			"ID": "20221128084702-8odpr1i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084702-8odpr1i"
			}
		},
		{
			"ID": "20221128084640-jw0cnwe",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221128084640-jw0cnwe",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第一个 Servlet 程序"
				}
			]
		},
		{
			"ID": "20221128084640-tfrandh",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-tfrandh",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. 创建项目"
				}
			]
		},
		{
			"ID": "20221128084640-pwlb5cr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-pwlb5cr",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 IDEA 创建一个 Maven 项目."
				}
			]
		},
		{
			"ID": "20221128084640-q8p3imq",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221128084640-q8p3imq",
				"updated": "20221128084723"
			},
			"Children": [
				{
					"ID": "20221128084640-8crute4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20221128084640-8crute4",
						"updated": "20221128084716"
					},
					"Children": [
						{
							"ID": "20221128084640-rpfsl9e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-rpfsl9e",
								"updated": "20221128084716"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "菜单 -\u003e 文件 -\u003e 新建项目 -\u003e Maven\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "Pasted image 20221126161924"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/Pasted image 20221126161924-20221128084716-thmwir0.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-zykybl6",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20221128084640-zykybl6",
						"updated": "20221128084723"
					},
					"Children": [
						{
							"ID": "20221128084640-z14kh6e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-z14kh6e",
								"updated": "20221128084723"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "选择项目要存放的目录\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "Pasted image 20221126162107"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/Pasted image 20221126162107-20221128084723-ugq40qf.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084726-zt6hozm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084726-zt6hozm"
			}
		},
		{
			"ID": "20221128084640-4uoqtkk",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-4uoqtkk",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. 引入依赖"
				}
			]
		},
		{
			"ID": "20221128084640-cwnzdsz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-cwnzdsz",
				"updated": "20221128084732"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Maven 项目创建完毕后, 会自动生成一个 pom.xml 文件.\n我们需要在 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "pom.xml"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 中引入 Servlet API 依赖的 jar 包."
				}
			]
		},
		{
			"ID": "20221128084640-1k4u3lp",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221128084640-1k4u3lp",
				"updated": "20221128084755"
			},
			"Children": [
				{
					"ID": "20221128084640-epd33j6",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20221128084640-epd33j6",
						"updated": "20221128084747"
					},
					"Children": [
						{
							"ID": "20221128084640-3xjz7a9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-3xjz7a9",
								"updated": "20221128084747"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在中央仓库 "
								},
								{
									"Type": "NodeLink",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "https://mvnrepository.com/"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "https://mvnrepository.com/"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 中搜索 \"servlet\", 一般第一个结果就是.\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "Pasted image 20221126162230"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/Pasted image 20221126162230-20221128084747-9fq6va2.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-g2qs2qs",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20221128084640-g2qs2qs",
						"updated": "20221128084755"
					},
					"Children": [
						{
							"ID": "20221128084640-0hfn2be",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-0hfn2be",
								"updated": "20221128084755"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "选择版本. 一般我们使用 3.1.0 版本\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "Pasted image 20221126162321"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/Pasted image 20221126162321-20221128084755-rullytf.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-vt972zz",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-vt972zz",
				"updated": "20221128084837"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-of5egm8",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-of5egm8",
						"updated": "20221128084837"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "Servlet 的版本要和 Tomcat 匹配.\n如果我们使用 Tomcat 8.5, 那么就需要使用 Servlet 3.1.0\n可以在 "
						},
						{
							"Type": "NodeLink",
							"Data": "span",
							"Children": [
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "http://tomcat.apache.org/whichversion.html"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "http://tomcat.apache.org/whichversion.html"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " 查询版本对应关系.\n​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "Pasted image 20221126162442"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/Pasted image 20221126162442-20221128084837-708x8zn.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeBr",
							"Data": "br"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-2zr538d",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221128084640-2zr538d",
				"updated": "20221128084848"
			},
			"Children": [
				{
					"ID": "20221128084640-z7icib0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20221128084640-z7icib0",
						"updated": "20221128084848"
					},
					"Children": [
						{
							"ID": "20221128084640-ykydzsu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-ykydzsu",
								"updated": "20221128084848"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "把中央仓库中提供的 xml 复制到项目的 "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "pom.xml"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 中\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "Pasted image 20221126162512"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/Pasted image 20221126162512-20221128084844-95lobdl.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084853-czn5u4h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084853-czn5u4h"
			}
		},
		{
			"ID": "20221128084640-l4grxlz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-l4grxlz",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "修改后的 pom.xml 形如:(每人的不一定都一样)"
				}
			]
		},
		{
			"ID": "20221128084640-61kciqm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-61kciqm",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e  \n\u003cproject xmlns=\"http://maven.apache.org/POM/4.0.0\"  \n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  \n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\u003e  \n    \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e  \n  \n    \u003cgroupId\u003eorg.example\u003c/groupId\u003e  \n    \u003cartifactId\u003eServletHelloWorld\u003c/artifactId\u003e  \n    \u003cversion\u003e1.0-SNAPSHOT\u003c/version\u003e  \n  \n    \u003cproperties\u003e      \n\t    \u003cmaven.compiler.source\u003e8\u003c/maven.compiler.source\u003e  \n        \u003cmaven.compiler.target\u003e8\u003c/maven.compiler.target\u003e  \n    \u003c/properties\u003e  \n  \n    \u003cdependencies\u003e      \n\t    \u003cdependency\u003e          \n\t\t    \u003cgroupId\u003ejavax.servlet\u003c/groupId\u003e  \n            \u003cartifactId\u003ejavax.servlet-api\u003c/artifactId\u003e  \n            \u003cversion\u003e3.1.0\u003c/version\u003e  \n            \u003cscope\u003eprovided\u003c/scope\u003e  \n        \u003c/dependency\u003e  \n    \u003c/dependencies\u003e\n\u003c/project\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-s4492t0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-s4492t0",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\u003cdependencies\u003e"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "标签内部放置项目依赖的 jar 包. maven 会自动下载依赖到本地."
				}
			]
		},
		{
			"ID": "20221128084640-nuqczq0",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-nuqczq0",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-wh7s5v6",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-wh7s5v6",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "关于 groupId, artifactId, version"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\n这几个东西暂时我们不关注. 啥时候需要关注呢? 如果我们要把这个写的代码发布到中央仓库上, 那么就需要设定好这几个 ID 了."
						}
					]
				},
				{
					"ID": "20221128084640-hbuj0rw",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20221128084640-hbuj0rw",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-q6sicme",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221128084640-q6sicme",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-2h3ya4s",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221128084640-2h3ya4s",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "groupId"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": ": 表示组织名称"
										}
									]
								}
							]
						},
						{
							"ID": "20221128084640-pfmn3fj",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221128084640-pfmn3fj",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-fwsbgbh",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221128084640-fwsbgbh",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "artifactId"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": ": 表示项目名称"
										}
									]
								}
							]
						},
						{
							"ID": "20221128084640-gqjrxct",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221128084640-gqjrxct",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-g5ndyxn",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221128084640-g5ndyxn",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "version"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": ": 表示版本号\n中央仓库就是按照这三个字段来确定唯一一个包的."
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-zhnf83v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-zhnf83v",
				"updated": "20221128084907"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126163010"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126163010-20221128084907-d2shse4.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n红色方框圈出来的部分, 就是这个 jar 包的 groupId, artifactId, version"
				}
			]
		},
		{
			"ID": "20221128084939-fpidv4b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084939-fpidv4b"
			}
		},
		{
			"ID": "20221128084640-fqj0h3k",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-fqj0h3k",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3. 创建目录"
				}
			]
		},
		{
			"ID": "20221128084640-u2mk91o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-u2mk91o",
				"updated": "20221128084913"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当项目创建好了之后, IDEA 会帮我们自动创建出一些目录. 形如\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126163122"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126163122-20221128084913-rstgbt3.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n这些目录中:"
				}
			]
		},
		{
			"ID": "20221128084640-4s1zz7s",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221128084640-4s1zz7s",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-vc1tsz2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-vc1tsz2",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-sg2u8ae",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-sg2u8ae",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "src 表示源代码所在的目录"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-7wczsh9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-7wczsh9",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-cle2fr7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-cle2fr7",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "main/java 表示源代码的根目录. 后续创建 .java 文件就放到这个目录中."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-pggh7cs",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-pggh7cs",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-uqr0988",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-uqr0988",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "main/resources 表示项目的一些资源文件所在的目录. 此处暂时不关注."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-08db1p7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-08db1p7",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-pqhe2q4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-pqhe2q4",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "test/java 表示测试代码的根目录. 此处暂时不关注."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-n1rdhtu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-n1rdhtu",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这些目录还不够, 我们还需要创建一些新的目录/文件."
				}
			]
		},
		{
			"ID": "20221128084935-w0r9t63",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084935-w0r9t63"
			}
		},
		{
			"ID": "20221128084640-s8wwq02",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-s8wwq02",
				"updated": "20221128084920"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "1) 创建 webapp 目录"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n在 main 目录下, 和 java 目录并列, 创建一个 webapp 目录 (注意, 不是 webapps).\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126163238"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126163238-20221128084920-h7v6a08.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084932-zqvjosk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084932-zqvjosk"
			}
		},
		{
			"ID": "20221128084640-w2tmshz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-w2tmshz",
				"updated": "20221128084928"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "2) 创建 web.xml"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n然后在 webapp 目录内部创建一个 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "WEB-INF"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 目录, 并创建一个 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "web.xml"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 文件\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126163350"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126163350-20221128084928-5kaoy0s.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-f9i3ttn",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-f9i3ttn",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-ctbrvaw",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-ctbrvaw",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "注意单词拼写."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084944-z8te5xs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084944-z8te5xs"
			}
		},
		{
			"ID": "20221128084640-b2uulux",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-b2uulux",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "3) 编写 web.xml"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n往 web.xml 中拷贝以下代码. 具体细节内容我们暂时不关注."
				}
			]
		},
		{
			"ID": "20221128084640-hm9qylb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-hm9qylb",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003c!DOCTYPE web-app PUBLIC\n\"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\" \n\"http://java.sun.com/dtd/web-app_2_3.dtd\" \u003e\n\n\u003cweb-app\u003e\n\t\u003cdisplay-name\u003eArchetype Created Web Application\u003c/display-name\u003e \n\u003c/web-app\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-092sx5n",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-092sx5n",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-z7j9s0f",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-z7j9s0f",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "webapp 目录就是未来部署到 Tomcat 中的一个重要的目录. 当前我们可以往 webapp 中放一些静态资源, 比如 html , css 等.\n在这个目录中还有一个重要的文件 web.xml. Tomcat 找到这个文件才能正确处理 webapp 中的动态资源."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084949-wr7zrsw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084949-wr7zrsw"
			}
		},
		{
			"ID": "20221128084640-p1w5l4j",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-p1w5l4j",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4. 编写代码"
				}
			]
		},
		{
			"ID": "20221128084640-1dgvru4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-1dgvru4",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 java 目录中创建一个类 HelloServlet, 代码如下:"
				}
			]
		},
		{
			"ID": "20221128084640-qvgmi25",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-qvgmi25",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import javax.servlet.ServletException;  \nimport javax.servlet.annotation.WebServlet;  \nimport javax.servlet.http.HttpServlet;  \nimport javax.servlet.http.HttpServletRequest;  \nimport javax.servlet.http.HttpServletResponse;  \nimport java.io.IOException;  \n  \n@WebServlet(\"/hello\")\npublic class HelloServlet extends HttpServlet {  \n    @Override  \n    protected void doGet(HttpServletRequest req , HttpServletResponse resp)throws ServletException, IOException {  \n        System.out.println(\"hello\");  \n        resp.getWriter().write(\"hello\");  \n    }  \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-9bemh7w",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221128084640-9bemh7w",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-r1om3c4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-r1om3c4",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-ebvatcd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-ebvatcd",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "创建一个类   "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HelloServlet"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " , 继承自   "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HttpServlet"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-3rbgcag",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-3rbgcag",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-3iw9ezh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-3iw9ezh",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在这个类上方加上   "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "@WebServlet(\"/hello\")"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 注解, 表示 Tomcat 收到的请求中, 路径为的请求才会调用 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HelloServlet"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 这个类的代码.  (这个路径未包含 Context Path)"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-astt8sw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-astt8sw",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-uc02cbo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-uc02cbo",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "重写"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "doGet"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "方法. "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "doGet"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的参数有两个, 分别表示"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "收到的 HTTP 请求"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "  和"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "要构造的 HTTP 响应"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ". 这个方法会在 Tomcat 收到 GET 请求时触发"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-aguyzms",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-aguyzms",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-ym48on4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-ym48on4",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HttpServletRequest"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 表示 HTTP 请求. Tomcat 按照 HTTP 请求的格式把 字符串 格式的请求转成了一个 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HttpServletRequest"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 对象. 后续想获取请求中的信息(方法, url, header, body 等) 都是通过这个对象来获取."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-kui4mkv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-kui4mkv",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-dc15xyj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-dc15xyj",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HttpServletResponse"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 表示 HTTP 响应. 代码中把响应对象构造好(构造响应的状态码, header,body 等)"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-g83u03r",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-g83u03r",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-080ujnh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-080ujnh",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "resp.getWriter()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 会获取到一个"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "流对象"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", 通过这个流对象就可以写入一些数据, 写入的数据会被构造成一个 HTTP 响应的 body 部分, Tomcat 会把整个响应转成字符串, 通过 socket 写回给浏览器."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-jtc5fjm",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-jtc5fjm",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-hzoeazj",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-hzoeazj",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "这个代码虽然只有寥寥几行, 但是包含的信息量是巨大的."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-4wk3fic",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221128084640-4wk3fic",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-oc9x9pt",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20221128084640-oc9x9pt",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-o8uojar",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-o8uojar",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们的代码不是通过 main 方法作为入口了. main 方法已经被包含在 Tomcat 里, 我们写的代码会被Tomcat 在合适的时机调用起来."
								}
							]
						},
						{
							"ID": "20221128084640-5k5oech",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20221128084640-5k5oech",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-dqzb5on",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221128084640-dqzb5on",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"ID": "20221128084640-ubvp9y7",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221128084640-ubvp9y7",
												"updated": "20221128084640"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "此时我们写的代码并不是一个完整的程序, 而是 Tomcat 这个程序的一小部分逻辑."
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-e68cfiy",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20221128084640-e68cfiy",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-jtdzblo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-jtdzblo",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们随便写个类都能被 Tomcat 调用嘛? 满足啥样条件才能被调用呢?\n主要满足三个条件:\na) 创建的类需要继承自 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HttpServlet"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "\nb) 这个类需要使用 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "@WebServlet"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 注解关联上一个 HTTP 的路径\nc) 这个类需要实现 doXXX 方法.\n当这三个条件都满足之后, Tomcat 就可以找到这个类, 并且在合适的时机进行调用."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-tddze7r",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-tddze7r",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5. 打包程序"
				}
			]
		},
		{
			"ID": "20221128084640-b8d8fdq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-b8d8fdq",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 maven 进行打包. 打开 maven 窗口 (一般在 IDEA 右侧就可以看到 Maven 窗口, 如果看不到的话,\n可以通过  "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "菜单 -\u003e View -\u003e Tool Window -\u003e Maven 打开"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ")"
				}
			]
		},
		{
			"ID": "20221128084640-n85k6ok",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-n85k6ok",
				"updated": "20221128085007"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后展开 Lifecycle , 双击 package 即可进行打包.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126165144"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126165144-20221128085007-7ir1ia5.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-oda5nx8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-oda5nx8",
				"updated": "20221128085012"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果比较顺利的话, 能够看到 SUCCESS 这样的字样.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126165156"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126165156-20221128085012-pzm0edj.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-pzandv7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-pzandv7",
				"updated": "20221128085019"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果代码/配置/环境存在问题, 可能会提示 BUILD FAILED, 可以根据具体提示的错误信息具体解决.\n打包成功后, 可以看到在 target 目录下, 生成了一个 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "jar"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 包.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126165249"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126165249-20221128085019-nwqsh7q.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n这样的 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "jar"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 包并不是我们需要的, Tomcat 需要识别的是另外一种 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "war"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 包格式.\n另外这个 jar 包的名字太复杂了, 我们也希望这个名字能更简单一点."
				}
			]
		},
		{
			"ID": "20221128084640-9dpvxss",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-9dpvxss",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-z35pj8i",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-z35pj8i",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "war 包和 jar 包的区别"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-qb8roa8",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20221128084640-qb8roa8",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-2jooj0k",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221128084640-2jooj0k",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-7bqsqd9",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221128084640-7bqsqd9",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "jar 包是普通的 java 程序打包的结果. 里面会包含一些 .class 文件."
										}
									]
								}
							]
						},
						{
							"ID": "20221128084640-n2y0d68",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221128084640-n2y0d68",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-iz38ssk",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221128084640-iz38ssk",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "war 包是 java web 的程序, 里面除了会包含 .class 文件之外, 还会包含 HTML, CSS, JavaScript, 图片, 以及其他的 jar 包. 打成 war 包格式才能被 Tomcat 识别."
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-lemfxqf",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-lemfxqf",
				"updated": "20221128085030"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-u7xx4xp",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-u7xx4xp",
						"updated": "20221128085030"
					},
					"Children": [
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "ServletHelloWorld-1.0-SNAPSHOT.jar"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "    的由来\n这个名字来源于\n​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "Pasted image 20221126165449"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/Pasted image 20221126165449-20221128085030-8hjw2jl.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\n相当于把 artifactId 和 version 拼接起来了."
						}
					]
				}
			]
		},
		{
			"ID": "20221128085037-k5nun1v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085037-k5nun1v"
			}
		},
		{
			"ID": "20221128084640-cqb4nkx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-cqb4nkx",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "pom.xml"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 中新增一个 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "packing"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 标签, 表示打包的方式是打一个 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "war"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 包."
				}
			]
		},
		{
			"ID": "20221128084640-3qpcc0x",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-3qpcc0x",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cpackaging\u003ewar\u003c/packaging\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128085041-0r5jz7x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085041-0r5jz7x"
			}
		},
		{
			"ID": "20221128084640-zwcppup",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-zwcppup",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "pom.xml"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 中再新增一个 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "build"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 标签, 内置一个 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "finalName"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 标签, 表示打出的 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "war"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 包的名字是 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HelloServlet"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-btawvkz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-btawvkz",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cbuild\u003e\n    \u003cfinalName\u003eServletHelloWorld\u003c/finalName\u003e \n\u003c/build\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128085044-i8iikbq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085044-i8iikbq"
			}
		},
		{
			"ID": "20221128084640-flfkxgg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-flfkxgg",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "完整的 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "pom.xml"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 形如"
				}
			]
		},
		{
			"ID": "20221128084640-n62zkez",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-n62zkez",
				"updated": "20221128085054"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e  \n\u003cproject xmlns=\"http://maven.apache.org/POM/4.0.0\"  \n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  \n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\u003e  \n    \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e  \n  \n    \u003cgroupId\u003eorg.example\u003c/groupId\u003e  \n    \u003cartifactId\u003eServletHelloWorld\u003c/artifactId\u003e  \n    \u003cversion\u003e1.0-SNAPSHOT\u003c/version\u003e  \n  \n    \u003cproperties\u003e    \n\t    \u003cmaven.compiler.source\u003e8\u003c/maven.compiler.source\u003e  \n        \u003cmaven.compiler.target\u003e8\u003c/maven.compiler.target\u003e  \n    \u003c/properties\u003e  \n    \u003cdependencies\u003e    \n\t    \u003cdependency\u003e        \n\t\t    \u003cgroupId\u003ejavax.servlet\u003c/groupId\u003e  \n            \u003cartifactId\u003ejavax.servlet-api\u003c/artifactId\u003e  \n            \u003cversion\u003e3.1.0\u003c/version\u003e  \n            \u003cscope\u003eprovided\u003c/scope\u003e  \n        \u003c/dependency\u003e  \n    \u003c/dependencies\u003e    \n  \n    \u003cpackaging\u003ewar\u003c/packaging\u003e   \n    \u003cbuild\u003e    \n\t    \u003cfinalName\u003eServletHelloWorld\u003c/finalName\u003e  \n    \u003c/build\u003e\n\u003c/project\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-w0amaoi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-w0amaoi",
				"updated": "20221128085108"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重新使用 maven 打包, 可以看到生成的新的 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "war"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 包的结果.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126170035"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126170035-20221128085108-p8y8hf3.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128085110-jol1997",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085110-jol1997"
			}
		},
		{
			"ID": "20221128084640-szqjpgm",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-szqjpgm",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6. 部署程序"
				}
			]
		},
		{
			"ID": "20221128084640-cqoemip",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-cqoemip",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "把 war 包拷贝到 Tomcat 的 webapps 目录下."
				}
			]
		},
		{
			"ID": "20221128084640-1q3getd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-1q3getd",
				"updated": "20221128085121"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "启动 Tomcat , Tomcat 就会自动把 war 包解压缩.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126170345"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126170345-20221128085121-0b2mffi.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-qf70heq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-qf70heq",
				"updated": "20221128085129"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126170413"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126170413-20221128085129-rpc36a2.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n看到这个日志说明 Tomcat 已经正确识别了 ServletHelloWorld 这个 webapp."
				}
			]
		},
		{
			"ID": "20221128084640-9t54n4g",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-9t54n4g",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7. 验证程序"
				}
			]
		},
		{
			"ID": "20221128084640-6wu8dkw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-6wu8dkw",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时通过浏览器访问   http://127.0.0.1:8080/ServletHelloWorld/hello"
				}
			]
		},
		{
			"ID": "20221128084640-ize01jq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-ize01jq",
				"updated": "20221128085143"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "就可以看到结果了.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126170433"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126170433-20221128085143-chkgc1y.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-0rk73r8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-0rk73r8",
				"updated": "20221128085150"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "注意"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ": URL 中的 PATH 分成两个部分, 其中  "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": " HelloServlet"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 为 Context Path,"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "hello"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 为Servlet Path\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126170549"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126170549-20221128085150-ackkd8n.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128085152-q3gqwec",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085152-q3gqwec"
			}
		},
		{
			"ID": "20221128084640-h83ft7v",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221128084640-h83ft7v",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "更方便的部署方式"
				}
			]
		},
		{
			"ID": "20221128084640-1d5e40r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-1d5e40r",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "手动拷贝 war 包到 Tomcat 的过程比较麻烦. 我们还有更方便的办法."
				}
			]
		},
		{
			"ID": "20221128084640-opyb8na",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-opyb8na",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此处我们使用 IDEA 中的 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Smart Tomcat 插件"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "完成这个工作."
				}
			]
		},
		{
			"ID": "20221128084640-utuo5d5",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-utuo5d5",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "安装 Smart Tomcat 插件"
				}
			]
		},
		{
			"ID": "20221128084640-c9bxgkv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-c9bxgkv",
				"updated": "20221128085203"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "1) 菜单 -\u003e 文件 -\u003e Settings"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126183224"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126183224-20221128085203-9mpx8tt.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-z2lhv1h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-z2lhv1h",
				"updated": "20221128085208"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "2) 选择 Plugins, 选择 Marketplace, 搜索 \"tomcat\", 点击 \"Install\"."
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126183325"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126183325-20221128085208-78zpb2z.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-3xfueoa",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-3xfueoa",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-f7sz0dw",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-f7sz0dw",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "注意: 安装过程必须要联网."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-3odeudt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-3odeudt",
				"updated": "20221128085216"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "3) 安装完毕之后, 会提示 \"重启 IDEA\""
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126183358"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126183358-20221128085216-2d8hzm7.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128085222-u6oa3tc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085222-u6oa3tc"
			}
		},
		{
			"ID": "20221128084640-y9omj38",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-y9omj38",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "配置 Smart Tomcat 插件"
				}
			]
		},
		{
			"ID": "20221128084640-ob41ora",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-ob41ora",
				"updated": "20221128085229"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "1) 点击右上角的 \"Add Configuration\""
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126183848"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126183848-20221128085229-fejeqwe.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128085231-35wkvut",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085231-35wkvut"
			}
		},
		{
			"ID": "20221128084640-sya0qcw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-sya0qcw",
				"updated": "20221128085241"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "2) 选择左侧的 \"Smart Tomcat\""
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126184114"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126184114-20221128085241-ete0qco.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128085244-qhzs3f2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085244-qhzs3f2"
			}
		},
		{
			"ID": "20221128084640-e6mhj9r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-e6mhj9r",
				"updated": "20221128085251"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "3) 在   Name 这一栏填写一个名字(可以随便写)"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n在 Tomcat Server 这一栏选择 Tomcat 所在的目录. 其他的选项不必做出修改.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126184227"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126184227-20221128085251-vf9brxs.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-rm6x4rw",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-rm6x4rw",
				"updated": "20221128085302"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-jccc4wp",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-jccc4wp",
						"updated": "20221128085302"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "其中   Context Path 默认填写的值是项目名称.\n​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "Pasted image 20221126184521"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/Pasted image 20221126184521-20221128085302-hwsu9r6.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\n这会影响到后面咱们的访问页面."
						}
					]
				}
			]
		},
		{
			"ID": "20221128085313-cc3kqgw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085313-cc3kqgw"
			}
		},
		{
			"ID": "20221128084640-loj36mj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-loj36mj",
				"updated": "20221128085309"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "4) 点击 OK 之后, 右上角变成了"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126184600"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126184600-20221128085309-rgffybh.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-ejgly61",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-ejgly61",
				"updated": "20221128085321"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "点击绿色的三角号, IDEA 就会自动进行编译, 部署, 启动 Tomcat 的过程.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126184623"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126184623-20221128085321-psf6bdo.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n此时 Tomcat 日志就会输出在 IDEA 的控制台中, 可以看到现在就"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "不再乱码"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "了."
				}
			]
		},
		{
			"ID": "20221128085315-lj4xak0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085315-lj4xak0"
			}
		},
		{
			"ID": "20221128084640-fudm35j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-fudm35j",
				"updated": "20221128085333"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "5) 访问页面."
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n在浏览器中使用 http://127.0.0.1:8080/ServletHelloWorld/hello 访问页面.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126184824"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126184824-20221128085333-9mogbyg.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-qmtmbrd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-qmtmbrd",
				"updated": "20221128085339"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意路径的对应关系.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126184841"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126184841-20221128085339-j905gea.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-kr0qen8",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-kr0qen8",
				"updated": "20221128085348"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-3ufpwgw",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-3ufpwgw",
						"updated": "20221128085348"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "使用 Smart Tomcat 部署的时候, 我们发现 Tomcat 的 webapps 内部并没有被拷贝一个 war 包, 也没有看到解压缩的内容.\nSmart Tomcat 相当于是在 Tomcat 启动的时候直接引用了项目中的 webapp 和 target 目录.\n​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "Pasted image 20221126184934"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/Pasted image 20221126184934-20221128085348-uftdgw0.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeBr",
							"Data": "br"
						}
					]
				}
			]
		},
		{
			"ID": "20221128085352-ks9s69o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085352-ks9s69o"
			}
		},
		{
			"ID": "20221128084640-wiz9401",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221128084640-wiz9401",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "访问出错怎么办?"
				}
			]
		},
		{
			"ID": "20221128084640-63txjym",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-63txjym",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "出现 404"
				}
			]
		},
		{
			"ID": "20221128084640-3wy733s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-3wy733s",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "404 表示用户访问的资源不存在. 大概率是 URL 的路径写的不正确."
				}
			]
		},
		{
			"ID": "20221128084640-usi6bqs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-usi6bqs",
				"updated": "20221128085358"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "错误实例1"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ": 少写了 Context Path\n通过 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "/hello"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 访问服务器\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126185052"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126185052-20221128085358-eag8uw2.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128085402-trkpkhn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085402-trkpkhn"
			}
		},
		{
			"ID": "20221128084640-gteg65k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-gteg65k",
				"updated": "20221128085409"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "错误实例2"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ": 少写了 Servlet Path\n通过   /ServletHelloWorld 访问服务器\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126185148"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126185148-20221128085409-wsg1ebd.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128085411-vq4ypmt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085411-vq4ypmt"
			}
		},
		{
			"ID": "20221128084640-diqzqzl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-diqzqzl",
				"updated": "20221128085420"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "错误实例3"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ": Servlet Path 写的和 URL 不匹配\n修改 @WebServlet 注解的路径\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126185218"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126185218-20221128085420-cg3t4gs.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-0zyp5k7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-0zyp5k7",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重启 Tomcat 服务器."
				}
			]
		},
		{
			"ID": "20221128084640-rvfsbre",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-rvfsbre",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-evswjw6",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-evswjw6",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "URL 中的路径写作 \""
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "/hello"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\" , 而代码中写作的 Servlet Path 为 \""
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "/helloServlet"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\", 两者不匹配."
						}
					]
				}
			]
		},
		{
			"ID": "20221128085424-2fmqju1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085424-2fmqju1"
			}
		},
		{
			"ID": "20221128084640-ok8me6a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-ok8me6a",
				"updated": "20221128085433"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "错误实例4"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ": web.xml 写错了\n清除 web.xml 中的内容\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126185331"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126185331-20221128085433-9yl81xs.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-d7bg20j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-d7bg20j",
				"updated": "20221128085439"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重启 Tomcat 服务器.\n通过浏览器访问 URL, 可以看到:\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126185402"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126185402-20221128085438-nstazoi.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-ug4c0xl",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-ug4c0xl",
				"updated": "20221128085448"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-8abw964",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-8abw964",
						"updated": "20221128085448"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "在 Tomcat 启动的时候也有相关的错误提示\n​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "Pasted image 20221126185418"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/Pasted image 20221126185418-20221128085448-y2qkbhn.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeBr",
							"Data": "br"
						}
					]
				}
			]
		},
		{
			"ID": "20221128085453-o5a42sn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085453-o5a42sn"
			}
		},
		{
			"ID": "20221128084640-7yu02cp",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-7yu02cp",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "出现 405"
				}
			]
		},
		{
			"ID": "20221128084640-vwluv6p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-vwluv6p",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "405 表示对应的 HTTP 请求方法没有实现."
				}
			]
		},
		{
			"ID": "20221128084640-58cgiqc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-58cgiqc",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "错误实例: 没有实现 doGet 方法."
				}
			]
		},
		{
			"ID": "20221128084640-78yjflq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-78yjflq",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@WebServlet(\"/hello\")\npublic class HelloServlet extends HttpServlet { \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-2o5npt0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-2o5npt0",
				"updated": "20221128085459"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重启 Tomcat 服务器.\n在浏览器中访问, 可以看到:\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126185616"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126185616-20221128085459-8celmjx.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-18ezgfn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-18ezgfn",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在浏览器地址栏直接输入 URL , 会发送一个 HTTP "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "GET"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 请求.\n此时就会根据   "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "/ServletHelloWorld/hello"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 这个路径找到   "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HelloServlet"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 这个类. 并且尝试调用"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HelloServlet"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 的 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "doGet"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 方法.\n但是如果没有实现 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "doGet"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 方法, 就会出现上述现象."
				}
			]
		},
		{
			"ID": "20221128085503-msvoy43",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085503-msvoy43"
			}
		},
		{
			"ID": "20221128084640-hua5mrq",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-hua5mrq",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "出现 500"
				}
			]
		},
		{
			"ID": "20221128084640-xnmn1c7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-xnmn1c7",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "往往是 Servlet 代码中抛出异常导致的."
				}
			]
		},
		{
			"ID": "20221128084640-jtcvq9d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-jtcvq9d",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "错误实例:"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n修改代码"
				}
			]
		},
		{
			"ID": "20221128084640-fl38psz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-fl38psz",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@WebServlet(\"/hello\")\npublic class HelloServlet extends HttpServlet { \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        String s = null;\n        resp.getWriter().write(s.length()); \n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-lnj15x3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-lnj15x3",
				"updated": "20221128085513"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重启 Tomcat 服务器.\n重新访问页面, 可以看到:\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126185815"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126185815-20221128085513-922rbie.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-9p4naor",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-9p4naor",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在页面上已经有具体的异常调用栈."
				}
			]
		},
		{
			"ID": "20221128084640-zjfc3yy",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-zjfc3yy",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-45cxym1",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-45cxym1",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "异常信息里已经提示了出现异常的代码是 "
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "HelloServlet.java"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " 的第 13 行."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-08sc7oa",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-08sc7oa",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "resp.getWriter().write(s.length());\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-f47i2fn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-f47i2fn",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "仔细检查这里的代码就可以看到空指针异常."
				}
			]
		},
		{
			"ID": "20221128085528-z0ziaya",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085528-z0ziaya"
			}
		},
		{
			"ID": "20221128084640-2d5ekwz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-2d5ekwz",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "出现 \"空白页面\""
				}
			]
		},
		{
			"ID": "20221128084640-61p680p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-61p680p",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "错误实例:\n修改代码, 去掉 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "resp.getWritter().write()"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 操作."
				}
			]
		},
		{
			"ID": "20221128084640-i6grbhv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-i6grbhv",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@WebServlet(\"/hello\")\npublic class HelloServlet extends HttpServlet { \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        System.out.println(\"hello\"); \n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-m7hmwke",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-m7hmwke",
				"updated": "20221128085535"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重启服务器,\n访问服务器, 可以看到一个空白页面:\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126190028"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126190028-20221128085535-cupbqwd.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-z9k9fx5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-z9k9fx5",
				"updated": "20221128085541"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "抓包可以看到, 响应 body 中的内容就是 \"空数据\"\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126190041"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126190041-20221128085541-wm3fee8.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128085543-5erizou",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085543-5erizou"
			}
		},
		{
			"ID": "20221128084640-oc1a01g",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-oc1a01g",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "出现 \"无法访问此网站\""
				}
			]
		},
		{
			"ID": "20221128084640-fpm300u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-fpm300u",
				"updated": "20221128085550"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一般是 Tomcat 启动就失败了.\n错误实例: Servlet Path 写错了.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126190101"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126190101-20221128085550-zc9862l.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-lgepjbu",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-lgepjbu",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-m6zfrw7",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-m6zfrw7",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "应该写作 \""
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "/hello"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\", Tomcat 在启动的时候已经提示了相关的错误.\nTomcat 启动的日志里面报错信息可能比较多, 需要耐心观察, 找到关键的提示."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-nkw1bff",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-nkw1bff",
				"updated": "20221128085558"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126190150"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126190150-20221128085558-2qd9m7a.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-gok7lhz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-gok7lhz",
				"updated": "20221128085604"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "看到的现象:\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221126190209"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221126190209-20221128085604-pir58jt.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128085608-0ysggll",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085608-0ysggll"
			}
		},
		{
			"ID": "20221128084640-a2y00cl",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-a2y00cl",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "小结"
				}
			]
		},
		{
			"ID": "20221128084640-zma1dyv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-zma1dyv",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "初学 Servlet, 遇到的这类问题会非常多. 我们不光要学习 Servlet 代码的基本写法, 也要学习"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "排查错误的\n思路"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "."
				}
			]
		},
		{
			"ID": "20221128084640-bnvaaly",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-bnvaaly",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-xmi1j4n",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-xmi1j4n",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "程序猿调试 BUG 如同医生诊病.\n一个有经验的程序猿和一个新手程序猿相比, 最大的优势往往不是代码写的多好, 而是调试效率有多高. 同一个问题可能新手花了几天都无法解决的, 但是有经验的程序猿可能几分钟就搞定了."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-sjty9ov",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-sjty9ov",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "熟悉 HTTP 协议能够让我们调试问题事半功倍."
				}
			]
		},
		{
			"ID": "20221128084640-cf8oe08",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221128084640-cf8oe08",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-am29j8b",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-am29j8b",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-6s9sp4w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-6s9sp4w",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "4xx 的状态码表示路径不存在, 往往需要检查 URL 是否正确, 和代码中设定的 Context Path 以及 Servlet Path 是否一致."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-gq3uj57",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-gq3uj57",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-au9gylb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-au9gylb",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "5xx 的状态码表示服务器出现错误, 往往需要观察页面提示的内容和 Tomcat 自身的日志, 观察是否存在报错."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-8rnizvc",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-8rnizvc",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-iz6l5ie",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-iz6l5ie",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "出现连接失败往往意味着 Tomcat 没有正确启动, 也需要观察 Tomcat 的自身日志是否有错误提示."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-s26h24v",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-s26h24v",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-qtzc71g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-qtzc71g",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "空白页面这种情况则需要我们使用抓包工具来分析 HTTP 请求响应的具体交互过程."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-yke0gz2",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-yke0gz2",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-a55ndf0",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-a55ndf0",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "观察日志是调试程序的重要途径. Tomcat 的日志往往很多, 需要同学们耐心阅读, 经常阅读, 熟练了就能更快速的找到问题了."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-n1xq62r",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221128084640-n1xq62r",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Servlet 运行原理"
				}
			]
		},
		{
			"ID": "20221128084640-xchubn8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-xchubn8",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 Servlet 的代码中我们并没有写 main 方法, 那么对应的 doGet 代码是如何被调用的呢? 响应又是如何\n返回给浏览器的?"
				}
			]
		},
		{
			"ID": "20221128084640-mvy6nv3",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-mvy6nv3",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Tomcat 的定位"
				}
			]
		},
		{
			"ID": "20221128084640-tjl61f3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-tjl61f3",
				"updated": "20221128085619"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们自己的实现是在 Tomcat 基础上运行的。\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127151649"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127151649-20221128085619-xi2u3d0.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-bewrvf7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-bewrvf7",
				"updated": "20221128085624"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当浏览器给服务器发送请求的时候, Tomcat 作为 HTTP 服务器, 就可以"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "接收到这个请求"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ".\nHTTP 协议作为一个应用层协议, 需要底层协议栈来支持工作. 如下图所示:\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127184912"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127184912-20221128085624-80pll9y.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-1luu4dd",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-1luu4dd",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-yjpbza7",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-yjpbza7",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "Tomcat其实是一个应用程序.运行在用户态的普通进程(Tomcat其实也是一个Java进程)\n用户写的代码(根据请求计算相应)，通过Servlet和Tomcat进行交互\nTomcat进一步的和浏览器之间的网络传输,仍然是走的咱们之前学过的网络原理中的那一套(封装和分用)"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-rsyvhj4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-rsyvhj4",
				"updated": "20221128085636"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "更详细的交互过程可以参考下图:\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127185055"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127185055-20221128085636-s6adjqo.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				}
			]
		},
		{
			"ID": "20221128085639-l4eay7r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085639-l4eay7r"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "1) 接收请求"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ":"
				}
			]
		},
		{
			"ID": "20221128084640-tzhetqi",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221128084640-tzhetqi",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-62ay8wd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-62ay8wd",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-sbbsmri",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-sbbsmri",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用户在浏览器输入一个 URL, 此时浏览器就会构造一个 HTTP 请求."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-mhs023i",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-mhs023i",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-hhwcs95",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-hhwcs95",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这个 HTTP 请求会经过网络协议栈逐层进行  "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "封装"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "  成二进制的 bit 流, 最终通过物理层的硬件设备转换成光信号/电信号传输出去."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-fo5uikq",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-fo5uikq",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-t4nxddx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-t4nxddx",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这些承载信息的光信号/电信号通过互联网上的一系列网络设备, 最终到达目标主机(这个过程也需要网络层和数据链路层参与)."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-s7d2633",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-s7d2633",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-3q6mk5v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-3q6mk5v",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "服务器主机收到这些光信号/电信号, 又会通过网络协议栈逐层进行  "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "分用"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", 层层解析, 最终还原成HTTP 请求. 并交给 Tomcat 进程进行处理(根据端口号确定进程)"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-g7wbl7r",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-g7wbl7r",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-f26ec9g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-f26ec9g",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Tomcat 通过 Socket 读取到这个请求(一个字符串), 并按照 HTTP 请求的格式来解析这个请求, "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "根据请求中的 Context Path 确定一个 webapp, 再通过 Servlet Path 确定一个具体的  类"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ". 再根据当前请求的方法 ("
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "GET"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "/"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "POST"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "/...), 决定调用这个类的 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "doGet"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 或者 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "doPost"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 等方法. 此时我们的代码中的"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "doGet / doPost"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 方法的第一个参数 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HttpServletRequest"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 就包含了这个 HTTP 请求的详细信息."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128085643-bqvn8h2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085643-bqvn8h2"
			}
		},
		{
			"ID": "20221128084640-ttcpsgu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-ttcpsgu",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "2) 根据请求计算响应:"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-q82ozai",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221128084640-q82ozai",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-mck851c",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-mck851c",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-ru37lhj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-ru37lhj",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在我们的 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "doGet / doPost"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 方法中, 就执行到了我们自己的代码. 我们自己的代码会根据请求中的一些信息, 来给 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HttpServletResponse"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 对象设置一些属性. 例如"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "状态码"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "header"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "body"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 等."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128085645-03v33ib",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085645-03v33ib"
			}
		},
		{
			"ID": "20221128084640-rgkq43p",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-rgkq43p",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "3) 返回响应:"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-za3ix6n",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221128084640-za3ix6n",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-momj10d",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-momj10d",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-dvju3dh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-dvju3dh",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "我们的 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "doGet / doPost"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 执行完毕后, Tomcat 就会自动把 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HttpServletResponse"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 这个我们刚设置好的对象转换成一个符合 HTTP 协议的字符串, 通过 Socket 把这个响应发送出去."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-8l7szso",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-8l7szso",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-5t4ow2j",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-5t4ow2j",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "此时响应数据在服务器的主机上通过网络协议栈层层  "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "封装"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", 最终又得到一个二进制的 bit 流, 通过物理层硬件设备转换成光信号/电信号传输出去."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-w7ay33s",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-w7ay33s",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-mist3uv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-mist3uv",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这些承载信息的光信号/电信号通过互联网上的一系列网络设备, 最终到达浏览器所在的主机(这个过程也需要网络层和数据链路层参与)."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-nj8jdaw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-nj8jdaw",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-ztnmk49",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-ztnmk49",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "浏览器主机收到这些光信号/电信号, 又会通过网络协议栈逐层进行  "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "分用"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", 层层解析, 最终还原成HTTP 响应, 并交给浏览器处理."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-na5rm66",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-na5rm66",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-093iy5w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-093iy5w",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "浏览器也通过 Socket 读到这个响应(一个字符串), 按照 HTTP 响应的格式来解析这个响应. 并且把body 中的数据按照一定的格式显示在浏览器的界面上."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-hducsuv",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-hducsuv",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-oackykc",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-oackykc",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "浏览器和服务器之间交互数据,这个过程中是否会涉及到TCP三次握手，确认应答...，是否会涉及到IP的分包组包.…是否会涉及到以太网的MTU 呢..."
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\n都是会的！"
						}
					]
				}
			]
		},
		{
			"ID": "20221128085652-iwp9eti",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085652-iwp9eti"
			}
		},
		{
			"ID": "20221128084640-svt73zs",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-svt73zs",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Tomcat 的伪代码"
				}
			]
		},
		{
			"ID": "20221128084640-66ty32o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-66ty32o",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "下面的代码通过 \"伪代码\" 的形式描述了 Tomcat 初始化/处理请求  两部分核心逻辑."
				}
			]
		},
		{
			"ID": "20221128084640-ip4os9a",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-ip4os9a",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-0xrmj67",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-0xrmj67",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "所谓 \"伪代码\", 并不是一些语法严谨, 功能完备的代码, 只是通过这种形式来大概表达某种逻辑."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-jdmyrq8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-jdmyrq8",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. Tomcat 初始化流程"
				}
			]
		},
		{
			"ID": "20221128084640-bc2tz5n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-bc2tz5n",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Tomcat {\n\t// 用来存储所有的 Servlet 对象\n\tprivate List\u003cServlet\u003e instanceList = new ArrayList\u003c\u003e(); \n\tpublic void start() {\n        // 根据约定，读取 WEB-INF/web.xml 配置文件; \n        // 并解析被 @WebServlet 注解修饰的类\n        \n        // 假定这个数组里就包含了我们解析到的所有被 @WebServlet 注解修饰的类. \n        Class\u003cServlet\u003e[] allServletClasses = ...;\n        \n        // 这里要做的的是实例化出所有的 Servlet 对象出来; \n        for (Class\u003cServlet\u003e cls : allServletClasses) { \n            // 这里是利用 java 中的反射特性做的\n            // 实际上还得涉及一个类的加载问题，因为我们的类字节码文件，是按照约定的 \n            // 方式（全部在 WEB-INF/classes 文件夹下）存放的，所以 tomcat 内部是 \n            // 实现了一个自定义的类加载器(ClassLoader)用来负责这部分工作。\n        \n\t\t\tServlet ins = cls.newInstance(); \n            instanceList.add(ins);\n        }\n        \n        // 调用每个 Servlet 对象的 init() 方法，这个方法在对象的生命中只会被调用这一次; \n        for (Servlet ins : instanceList) {\n            ins.init(); \n        }\n        \n        // 利用我们之前学过的知识，启动一个 HTTP 服务器 \n        // 并用线程池的方式分别处理每一个 Request\n        ServerSocket serverSocket = new ServerSocket(8080);\n        // 实际上 tomcat 不是用的固定线程池，这里只是为了说明情况\n        ExecuteService pool = Executors.newFixedThreadPool(100); \n        \n        while (true) {\n            Socket socket = ServerSocket.accept();\n            // 每个请求都是用一个线程独立支持，这里体现了我们 Servlet 是运行在多线程环境下的 \n            pool.execute(new Runnable() {\n               doHttpRequest(socket); \n            });\n        }\n        \n        // 调用每个 Servlet 对象的 destroy() 方法，这个方法在对象的生命中只会被调用这一次; \n        for (Servlet ins : instanceList) {\n            ins.destroy(); \n        }\n    }\n    \n    public static void main(String[] args) { \n        new Tomcat().start();\n    } \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-ws9lxr6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-ws9lxr6",
				"updated": "20221128085702"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "1) 让Tomcat先从指定的目录中找到所有要加载的 Servlet类"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127190222"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127190222-20221128085702-yh3i1sh.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128085704-cmtwmt7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085704-cmtwmt7"
			}
		},
		{
			"ID": "20221128084640-w9e5oxh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-w9e5oxh",
				"updated": "20221128085711"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "2) 根据刚才类加载的结果,给这些类创建Servlet 实例"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127190315"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127190315-20221128085711-mzq19fb.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128085713-li8owpt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085713-li8owpt"
			}
		},
		{
			"ID": "20221128084640-wab2070",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-wab2070",
				"updated": "20221128085719"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "3) 实例创建好之后,就可以调用当前Servlet 实例的init方法了"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127190437"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127190437-20221128085719-1aoz7sh.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128085721-5iqemzu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085721-5iqemzu"
			}
		},
		{
			"ID": "20221128084640-oyhbwun",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-oyhbwun",
				"updated": "20221128085728"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "4) 创建TCPsocket,监听8080端口,等待有客户端来连接"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127190544"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127190544-20221128085728-18nski8.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128085732-tk1ds67",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085732-tk1ds67"
			}
		},
		{
			"ID": "20221128084640-9g91kv2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-9g91kv2",
				"updated": "20221128085739"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "5) 如果循环退出了，Tomcat 也要结束了.就会依次循环调用每个Servlet的destroy方法"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127190737"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127190737-20221128085739-lgpsjn6.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128085741-hk3pthk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085741-hk3pthk"
			}
		},
		{
			"ID": "20221128084640-mh7ay0l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-mh7ay0l",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "小结"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-ii63v2k",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221128084640-ii63v2k",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-5bxtu56",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-5bxtu56",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-8n9mg6z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-8n9mg6z",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Tomcat 的代码中 内置了 main 方法. 当我们启动 Tomcat 的时候, 就是从 Tomcat 的 main 方法开始执行的."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-23kbtk6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-23kbtk6",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-dhek3ey",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-dhek3ey",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "被 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "@WebServlet"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "注解修饰的类会在 Tomcat 启动的时候就被获取到, 并集中管理."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-uo56z4f",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-uo56z4f",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-araxltp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-araxltp",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Tomcat 通过  "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "反射"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "  这样的语法机制来创建被   "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "@WebServlet"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 注解修饰的类的实例."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-e6uf4lp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-e6uf4lp",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-y13nm0p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-y13nm0p",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这些实例被创建完了之后, 会点调用其中的 init 方法进行初始化. (这个方法是 HttpServlet 自带的, 我们自己写的类可以重写 init)"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-schhi3k",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-schhi3k",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-ugme7ax",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-ugme7ax",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这些实例被销毁之前, 会调用其中的 destory 方法进行收尾工作. (这个方法是 HttpServlet 自带的, 我们自己写的类可以重写 destory)"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-xzqcar7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-xzqcar7",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-gef74hr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-gef74hr",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Tomcat 内部也是通过 Socket API 进行网络通信."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-zgps544",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-zgps544",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-g6ii8vt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-g6ii8vt",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Tomcat 为了能同时相应多个 HTTP 请求, 采取了多线程的方式实现. 因此 Servlet 是运行在  "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "多线程环境"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "  下的."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128085745-yaxbif5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085745-yaxbif5"
			}
		},
		{
			"ID": "20221128084640-la4jti5",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-la4jti5",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. Tomcat 处理请求流程"
				}
			]
		},
		{
			"ID": "20221128084640-v2wb43n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-v2wb43n",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Tomcat {\n    void doHttpRequest(Socket socket) {\n        // 参照我们之前学习的 HTTP 服务器类似的原理，进行 HTTP 协议的请求解析，和响应构建 \n        HttpServletRequest req = HttpServletRequest.parse(socket);\n        HttpServletRequest resp = HttpServletRequest.build(socket);\n        \n        // 判断 URL 对应的文件是否可以直接在我们的根路径上找到对应的文件，如果找到，就是静态内容\n        // 直接使用我们学习过的 IO 进行内容输出 \n        if (file.exists()) {\n            // 返回静态内容 \n            return;\n        }\n        // 走到这里的逻辑都是动态内容了\n        \n        // 根据我们在配置中说的，按照 URL -\u003e servlet-name -\u003e Servlet 对象的链条 \n        // 最终找到要处理本次请求的 Servlet 对象\n        Servlet ins = findInstance(req.getURL()); \n        \n        // 调用 Servlet 对象的 service 方法\n        // 这里就会最终调用到我们自己写的 HttpServlet 的子类里的方法了 \n        try {\n\t\t\tins.service(req, resp);\n        } catch (Exception e) {\n            // 返回 500 页面，表示服务器内部错误 \n        }\n    } \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-d1kv1cl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-d1kv1cl",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "小结\n - Tomcat 从 Socket 中读到的 HTTP 请求是一个字符串, 然后会按照 HTTP 协议的格式解析成一个 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HttpServletRequest"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 对象."
				}
			]
		},
		{
			"ID": "20221128084640-9iio754",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221128084640-9iio754",
				"updated": "20221128085753"
			},
			"Children": [
				{
					"ID": "20221128084640-f7hyodj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-f7hyodj",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-cawuvqw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-cawuvqw",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Tomcat 会根据 URL 中的 path 判定这个请求是请求一个静态资源还是动态资源. 如果是静态资源, 直接找到对应的文件把文件的内容通过 Socket 返回. 如果是动态资源, 才会执行到 Servlet 的相关逻辑."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-7kjtf8b",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-7kjtf8b",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-8zsegda",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-8zsegda",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Tomcat 会根据 URL 中的 "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Context Path"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 和 "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "Servlet Path"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 确定要调用哪个 Servlet 实例的 service方法."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-bevaar3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-bevaar3",
						"updated": "20221128085753"
					},
					"Children": [
						{
							"ID": "20221128084640-rg1ej0e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-rg1ej0e",
								"updated": "20221128085753"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过 service 方法, 就会进一步调用到我们之前写的 "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "doGet"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 或者 "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "doPost"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "Pasted image 20221127191153"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/Pasted image 20221127191153-20221128085753-nv5ssck.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-dzya6ou",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-dzya6ou",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3. Servlet 的 service 方法的实现"
				}
			]
		},
		{
			"ID": "20221128084640-qjumgdc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-qjumgdc",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "class Servlet {\n    public void service(HttpServletRequest req, HttpServletResponse resp) { \n        String method = req.getMethod();\n        if (method.equals(\"GET\")) { \n            doGet(req, resp);\n        } else if (method.equals(\"POST\")) { \n            doPost(req, resp);\n        } else if (method.equals(\"PUT\")) { \n            doPut(req, resp);\n        } else if (method.equals(\"DELETE\")) { \n            doDelete(req, resp);\n        }\n        ...... \n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-j8vqyri",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-j8vqyri",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "小结"
				}
			]
		},
		{
			"ID": "20221128084640-92gq7og",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221128084640-92gq7og",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-6x7wn46",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-6x7wn46",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-9oz02yh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-9oz02yh",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Servlet 的 service 方法内部会根据当前请求的方法, 决定调用其中的某个 doXXX 方法."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-j1ldxqm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-j1ldxqm",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-m2vhcdw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-m2vhcdw",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在调用 doXXX 方法的时候, 就会触发  多态  机制, 从而执行到我们自己写的子类中的 doXXX 方法."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-g7lies9",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-g7lies9",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-sk1iroq",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-sk1iroq",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "理解此处的  多态"
						}
					]
				},
				{
					"ID": "20221128084640-2grfsu8",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20221128084640-2grfsu8",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-x39qgcm",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221128084640-x39qgcm",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-yr0dfbq",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221128084640-yr0dfbq",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "我们前面自己写的 HelloServlet 类, 继承自 HttpServlet 类. 而 HttpServlet 又继承自 Servlet. 相当于 HelloServlet 就是 Servlet 的子类."
										}
									]
								}
							]
						},
						{
							"ID": "20221128084640-zpgs4ia",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221128084640-zpgs4ia",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-f22ylnf",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221128084640-f22ylnf",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "接下来, 在 Tomcat 启动阶段, Tomcat 已经根据注解的描述, 创建了 HelloServlet 的实例, 然后把这个实例放到了 Servlet 数组中."
										}
									]
								}
							]
						},
						{
							"ID": "20221128084640-bla52ym",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221128084640-bla52ym",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-jun6nwj",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221128084640-jun6nwj",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "后面我们根据请求的 URL 从数组中获取到了该 HelloServlet 实例, 但是我们是通过   "
										},
										{
											"Type": "NodeCodeSpan",
											"Data": "code",
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "Servlet ins"
												},
												{
													"Type": "NodeCodeSpanCloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": " 这样的父类引用来获取到 HelloServlet 实例的."
										}
									]
								}
							]
						},
						{
							"ID": "20221128084640-yiow25d",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221128084640-yiow25d",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-os7xyn4",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221128084640-os7xyn4",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "最后, 我们通过   "
										},
										{
											"Type": "NodeCodeSpan",
											"Data": "code",
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "ins.doGet()"
												},
												{
													"Type": "NodeCodeSpanCloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": " 这样的代码调用 doGet 的时候, 正是 \"父类引用指向子类对象\", 此时就会触发多态机制, 从而调用到我们之前在 HelloServlet 中所实现的 doGet 方法\n等价代码:"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-t3a5pu1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-t3a5pu1",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "Servlet ins = new HelloServlet(); \nins.doGet(req, resp);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-5i7ydz9",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-5i7ydz9",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "总结"
				}
			]
		},
		{
			"ID": "20221128084640-rwdpv0a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-rwdpv0a",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在讨论到上面这整套流程过程中，涉及到了关于Servlet的关键方法,主要有三个."
				}
			]
		},
		{
			"ID": "20221128084640-adc5xv3",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221128084640-adc5xv3",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-p38b9qm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-p38b9qm",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-46t0zwt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-46t0zwt",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "init"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ":初始化阶段，对象创建好了之后,就会执行到.用户可以重写这个方法,来执行一些初始化逻辑."
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-xhofisu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-xhofisu",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-gnz2i4i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-gnz2i4i",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "service"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ":在处理请求阶段来调用.每次来个请求都要调用一次service"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-3608tk8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-3608tk8",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-2vb81br",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-2vb81br",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "destroy"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ":退出主循环, tomcat结束之前会调用,用来释放资源"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128085812-k5u401e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085812-k5u401e"
			}
		},
		{
			"ID": "20221128084640-ihc76de",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221128084640-ihc76de",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Servlet API 详解"
				}
			]
		},
		{
			"ID": "20221128084640-yc9y2uw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-yc9y2uw",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这里主要掌握 Servlet 提供的三个类："
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "HttpServlet"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " ，"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "HttpServeltRequest"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " ， "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "HttpServletResponse"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221128085816-ow6in29",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085816-ow6in29"
			}
		},
		{
			"ID": "20221128084640-engjblf",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-engjblf",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HttpServlet"
				}
			]
		},
		{
			"ID": "20221128084640-39qyz1e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-39qyz1e",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们写 Servlet 代码的时候, 首先第一步就是先创建类, 继承自 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "HttpServlet"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 并重写其中的某些方法."
				}
			]
		},
		{
			"ID": "20221128084640-ki7v0pd",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-ki7v0pd",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "核心方法"
				}
			]
		},
		{
			"ID": "20221128084640-wfjxao9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-wfjxao9",
				"updated": "20221128085809"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127192246"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127192246-20221128085809-a2gqfuz.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n我们实际开发的时候主要重写"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": " doXXX"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 方法, 很少会重写 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "init / destory / service"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " ."
				}
			]
		},
		{
			"ID": "20221128084640-d5te4wj",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-d5te4wj",
				"updated": "20221128085831"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-8leo0qo",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-8leo0qo",
						"updated": "20221128085831"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "这些方法的调用时机, 就称为 \"Servlet 生命周期\". (也就是描述了一个 Servlet 实例从生到死的过程).\n​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "Pasted image 20221127192325"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/Pasted image 20221127192325-20221128085831-psvxxr6.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\n"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "注意"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": ": HttpServlet 的实例只是在程序启动时创建一次. 而不是每次收到 HTTP 请求都重新创建实例."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-ezzh8hq",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-ezzh8hq",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码示例: 处理 GET 请求"
				}
			]
		},
		{
			"ID": "20221128084640-93a58zn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-93a58zn",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建 MethodServlet.java, 创建 doGet 方法"
				}
			]
		},
		{
			"ID": "20221128084640-dpqgpda",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-dpqgpda",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@WebServlet(\"/method\")\npublic class MethodServlet extends HttpServlet { \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) \nthrows ServletException, IOException {\n        resp.getWriter().write(\"GET response\"); \n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-59f9vj3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-59f9vj3",
				"updated": "20221128085843"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建 testMethod.html, 放到 webapp 目录中, 形如\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127194450"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127194450-20221128085843-j8zwgw2.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n一个 Servlet 程序中可以同时部署静态文件. 静态文件就放到 webapp 目录中即可."
				}
			]
		},
		{
			"ID": "20221128084640-qhap2y1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-qhap2y1",
				"updated": "20221128085850"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "aHRtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cbutton onclick=\"sendGet()\"\u003e发送 GET 请求\u003c/button\u003e\n\n    \u003cscript src=\"https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js\"\u003e\u003c/script\u003e\n    \u003cscript\u003e\n        $.ajax({\n            type: 'get',\n            url: 'method',\n            success: function (body) {\n                console.log(body);\n            }\n        })\n\n        function ajax(args) {\n            var xhr = new XMLHttpRequest();\n            xhr.onreadystatechange = function () {\n                // 0: 请求未初始化\n                // 1: 服务器连接已建立\n                // 2: 请求已接收\n                // 3: 请求处理中\n                // 4: 请求已完成，且响应已就绪\n                if (xhr.readyState == 4) {\n                    args.callback(xhr.responseText, xhr.status)\n                }\n            }\n            xhr.open(args.method, args.url);\n            if (args.contentType) {\n                xhr.setRequestHeader('Content-type', args.contentType);\n            }\n            if (args.body) {\n                xhr.send(args.body);\n            } else {\n                xhr.send();\n            }\n        }\n    \u003c/script\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-qfzhvxu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-qfzhvxu",
				"updated": "20221128085902"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重新部署程序, 使用 URL "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "http://127.0.0.1:8080/ServletHelloWorld/testMethod.html"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "访问页面.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127194647"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127194647-20221128085902-bretqu5.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-hywojfn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-hywojfn",
				"updated": "20221128085907"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "点击 \"发送 GET 请求\" 按钮, 即可在控制台看到响应内容.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127194702"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127194702-20221128085907-ji8216g.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-w3z25y5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-w3z25y5",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过 Fiddler 抓包, 可以看到"
				}
			]
		},
		{
			"ID": "20221128084640-0nagp9l",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221128084640-0nagp9l",
				"updated": "20221128085922"
			},
			"Children": [
				{
					"ID": "20221128084640-vdns5uk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-vdns5uk",
						"updated": "20221128085917"
					},
					"Children": [
						{
							"ID": "20221128084640-jvz09fu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-jvz09fu",
								"updated": "20221128085917"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当浏览器中输入 URL 之后, 浏览器先给服务器发送了一个 HTTP GET 请求\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "Pasted image 20221127194750"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/Pasted image 20221127194750-20221128085916-wktglsz.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-iqy9um3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221128084640-iqy9um3",
						"updated": "20221128085922"
					},
					"Children": [
						{
							"ID": "20221128084640-ee3zg86",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-ee3zg86",
								"updated": "20221128085922"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当点击 \"发送 GET 请求\" 按钮, 浏览器又通过 ajax 给服务器发送了一个 HTTP GET 请求\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "Pasted image 20221127194757"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/Pasted image 20221127194757-20221128085922-p1zfn0o.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-e0te9sk",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-e0te9sk",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-mlkmdva",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-mlkmdva",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "注意这个 ajax 请求的 URL 路径. 代码中写的 URL"
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": " url: 'method'"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": ", 为一个相对路径, 最终真实发送的请求的 URL 路径为   "
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "/ServletHelloWorld/method"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-nui09ao",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-nui09ao",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于乱码问题"
				}
			]
		},
		{
			"ID": "20221128084640-hn06v7i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-hn06v7i",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果我们在响应代码中写入中文, 例如"
				}
			]
		},
		{
			"ID": "20221128084640-ambhb5o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-ambhb5o",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "resp.getWriter().write(\"GET 响应\");\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-okdhowr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-okdhowr",
				"updated": "20221128085933"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时在浏览器访问的时候, 会看到 \"乱码\" 的情况.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127194954"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127194954-20221128085933-ns6qz6f.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-tao1h2p",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-tao1h2p",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-5xreduz",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-5xreduz",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "关于 \"乱码\":"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\n中文的编码方式有很多种. 其中最常见的就是 utf-8 .\n如果没有显式的指定编码方式, 则浏览器不能正确识别编码, 就会出现乱码的情况."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-e1ueye8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-e1ueye8",
				"updated": "20221128085940"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以在代码中, 通过 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "resp.setContentType(\"text/html; charset=utf-8\");"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 显式的指定编码方式.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127195103"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127195103-20221128085940-usvk9fj.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-h6j0z74",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-h6j0z74",
				"updated": "20221128085945"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时通过抓包可以看到, 当加上了 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "resp.setContentType(\"text/html; charset=utf-8\");"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 代码之后, 响应中多了 Content-Type 字段, 内部指定了编码方式. 浏览器看到这个字段就能够正确解析中文了.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127195134"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127195134-20221128085945-si236tq.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-nhset40",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-nhset40",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码示例: 处理 POST 请求"
				}
			]
		},
		{
			"ID": "20221128084640-t8etct6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-t8etct6",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "处理Post请求，一般使用以下三个"
				}
			]
		},
		{
			"ID": "20221128084640-yo16usl",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221128084640-yo16usl",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-m5h4zyc",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20221128084640-m5h4zyc",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-mcyiix3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-mcyiix3",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "form"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-zemhxla",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20221128084640-zemhxla",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-eigikb9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-eigikb9",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ajax"
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-2b1g0xe",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20221128084640-2b1g0xe",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-lqzi4dj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-lqzi4dj",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "postman"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128085949-ok8rjyk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128085949-ok8rjyk"
			}
		},
		{
			"ID": "20221128084640-9xmqy1n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-9xmqy1n",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "下面主要使用ajax"
				}
			]
		},
		{
			"ID": "20221128084640-iyjvz28",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-iyjvz28",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "MethodServlet.java"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 中, 新增 doPost 方法."
				}
			]
		},
		{
			"ID": "20221128084640-9coy4b2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-9coy4b2",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Override\nprotected void doPost(HttpServletRequest req, HttpServletResponse resp) throws \nServletException, IOException {\n    resp.setContentType(\"text/html; charset=utf-8\"); \n    resp.getWriter().write(\"POST 响应\");\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-3dtsn58",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-3dtsn58",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "testMethod.html"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 中, 新增一个按钮, 和对应的点击事件处理函数"
				}
			]
		},
		{
			"ID": "20221128084640-1s0y8c0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-1s0y8c0",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cbutton onclick=\"sendPost()\"\u003e发送 POST 请求\u003c/button\u003e \n\u003cscript\u003e\n    function sendPost() { \n        ajax({\n            method: 'POST', \n            url: 'method',\n            callback: function (body, status) { \n                console.log(body);\n            } \n        }) \n    }\n\u003c/script\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-xpink7s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-xpink7s",
				"updated": "20221128090007"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重新部署程序，使用URL "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "http://127.0.0.1:8080/ServletHelloWor1d/testMethod.html"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "访问页面.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127202308"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127202308-20221128090007-45byq0a.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				}
			]
		},
		{
			"ID": "20221128090009-y89daqh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090009-y89daqh",
				"updated": "20221128090016"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "点击 \"发送 POST 请求\" 按钮, 可以在控制台中看到结果\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127202319"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127202319-20221128090016-3x1m6ca.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128090019-vvwzs8y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090019-vvwzs8y"
			}
		},
		{
			"ID": "20221128084640-xs9c59b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-xs9c59b",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过类似的方式还可以验证 doPut, doDelete 等方法. 此处不再一一演示."
				}
			]
		},
		{
			"ID": "20221128090021-eluhtsl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090021-eluhtsl"
			}
		},
		{
			"ID": "20221128084640-d49y0s1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-d49y0s1",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HttpServletRequest"
				}
			]
		},
		{
			"ID": "20221128084640-hvwryyg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-hvwryyg",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当 Tomcat 通过 Socket API 读取 HTTP 请求(字符串), 并且按照 HTTP 协议的格式把字符串解析成 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "HttpServletRequest"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 对象."
				}
			]
		},
		{
			"ID": "20221128084640-8jgdp6c",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-8jgdp6c",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "核心方法"
				}
			]
		},
		{
			"ID": "20221128084640-6piphyh",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				1
			],
			"Properties": {
				"colgroup": "width: 380px;|",
				"id": "20221128084640-6piphyh",
				"updated": "20221128090416"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "方法"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 1,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String getProtocol()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回请求协议的名称和版本。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String getMethod()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回请求的 HTTP 方法的名称，例如，GET、POST 或 PUT。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String getRequestURI()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "从协议名称直到 HTTP 请求的第一行的查询字符串中，返回该请求的 URL 的一部分。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String getContextPath()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回指示请求上下文的请求 URI 部分。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String getQueryString()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回包含在路径后的请求 URL 中的查询字符串。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Enumeration getParameterNames()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回一个 String 对象的枚举，包含在该请求中包含的参数的名称。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String getParameter(String name)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "以字符串形式返回请求参数的值，或者如果参数不存在则返回 null。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String[] getParameterValues(String name)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回一个字符串对象的数组，包含所有给定的请求参数的值，如果参数不存在则返回 null。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Enumeration getHeaderNames()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回一个枚举，包含在该请求中包含的所有的头名。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String getHeader(String name)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "以字符串形式返回指定的请求头的值。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String getCharacterEncoding()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回请求主体中使用的字符编码的名称。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String getContentType()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回请求主体的 MIME 类型，如果不知道类型则返回 null。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "int getContentLength()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "以字节为单位返回请求主体的长度，并提供输入流，或者如果长度未知则返回 -1。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "InputStream getInputStream()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于读取请求的 body 内容. 返回一个 InputStream 对象."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-owimwso",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-owimwso",
				"updated": "20221128090501"
			},
			"Children": [
				{
					"ID": "20221128090501-ibbm6g9",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128090501-ibbm6g9"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "通过这些方法可以获取到一个请求中的各个方面的信息."
						}
					]
				},
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-yvtlf4q",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-yvtlf4q",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "注意: 请求对象是服务器收到的内容, 不应该修改. 因此上面的方法也都只是 \"读\" 方法, 而不是 \"写\" 方法."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-bvh3yts",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-bvh3yts",
				"updated": "20221128090102"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127212102"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127212102-20221128090102-igxxpra.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-06th2tx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-06th2tx",
				"updated": "20221128090105"
			}
		},
		{
			"ID": "20221128090105-ono6ej2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090105-ono6ej2",
				"updated": "20221128090110"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127212110"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127212110-20221128090110-uqk7hee.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-lg6bocb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-lg6bocb",
				"updated": "20221128090112"
			}
		},
		{
			"ID": "20221128090112-asg7th4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090112-asg7th4",
				"updated": "20221128090116"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127212119"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127212119-20221128090116-pkrqpuu.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128090128-uqmvhm4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090128-uqmvhm4"
			}
		},
		{
			"ID": "20221128084640-4hzfdn9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-4hzfdn9",
				"updated": "20221128090120"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127212127"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127212127-20221128090120-tk0s7x9.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128090133-75130hs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090133-75130hs"
			}
		},
		{
			"ID": "20221128084640-3pl9mv7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-3pl9mv7",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码示例: 打印请求信息"
				}
			]
		},
		{
			"ID": "20221128084640-hqj0pzu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-hqj0pzu",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建 ShowRequest 类"
				}
			]
		},
		{
			"ID": "20221128084640-0t8m9ym",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-0t8m9ym",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@WebServlet(\"/showRequest\")\npublic class ShowRequest extends HttpServlet { \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) \nthrows ServletException, IOException {\n        resp.setContentType(\"text/html; charset=utf-8\");\n        StringBuilder respBody = new StringBuilder();\n        respBody.append(req.getProtocol());\n        respBody.append(\"\u003cbr\u003e\");\n        respBody.append(req.getMethod());\n        respBody.append(\"\u003cbr\u003e\");\n        respBody.append(req.getRequestURI());\n        respBody.append(\"\u003cbr\u003e\");\n        respBody.append(req.getContextPath());\n        respBody.append(\"\u003cbr\u003e\");\n        respBody.append(req.getQueryString());\n        respBody.append(\"\u003cbr\u003e\");\n        \n        respBody.append(\"\u003ch3\u003eheaders:\u003c/h3\u003e\");\n        Enumeration\u003cString\u003e headerNames = req.getHeaderNames(); \n        while (headerNames.hasMoreElements()) {\n            String headerName = headerNames.nextElement();\n            respBody.append(headerName + \" \");\n            respBody.append(req.getHeader(headerName));\n            respBody.append(\"\u003cbr\u003e\"); \n        }\n        resp.getWriter().write(respBody.toString()); \n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-ga1glet",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-ga1glet",
				"updated": "20221128090147"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "部署程序.\n在浏览器通过 URL"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "http://127.0.0.1:8080/ServletHelloWorld/showRequest"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 访问, 可以看到\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127205448"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127205448-20221128090147-xg5v2oj.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-s9br5z1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-s9br5z1",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码示例: 获取 GET 请求中的参数"
				}
			]
		},
		{
			"ID": "20221128084640-6y004eb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-6y004eb",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "GET 请求中的参数一般都是通过 query string 传递给服务器的. 形如\n"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "https://v.bitedu.vip/personInf/student?userId=1111\u0026classId=100"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n此时浏览器通过 query string 给服务器传递了两个参数, userId 和 classId, 值分别是 1111 和 100\n在服务器端就可以通过   "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "getParameter"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 来获取到参数的值."
				}
			]
		},
		{
			"ID": "20221128084640-kyo17yg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-kyo17yg",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建   GetParameter 类"
				}
			]
		},
		{
			"ID": "20221128084640-utznx7a",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-utznx7a",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@WebServlet(\"/getParameter\")\npublic class GetParameter extends HttpServlet { \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) \nthrows ServletException, IOException {\n        resp.setContentType(\"text/html; charset=utf-8\");\n         \n        String userId = req.getParameter(\"userId\");\n        String classId = req.getParameter(\"classId\");\n        resp.getWriter().write(\"userId: \" + userId + \", \" + \"classId: \" + classId);\n    } \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-i32o4bh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-i32o4bh",
				"updated": "20221128090157"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重新部署程序, 在浏览器中通过 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "http://127.0.0.1:8080/ServletHelloWorld/getParameter"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 访问,可以看到\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127210414"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127210414-20221128090157-1fjgrhp.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-jobforq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-jobforq",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当没有 query string的时候, getParameter 获取的值为 null."
				}
			]
		},
		{
			"ID": "20221128084640-08j02kd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-08j02kd",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果通过 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "http://127.0.0.1:8080/ServletHelloWorld/getParameter?userId=123\u0026classId=45"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 访问, 可以看到。"
				}
			]
		},
		{
			"ID": "20221128084640-xzasif8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-xzasif8",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时说明服务器已经获取到客户端传递过来的参数."
				}
			]
		},
		{
			"ID": "20221128084640-vvqi40e",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-vvqi40e",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-nhyiubm",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-nhyiubm",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "getParameter"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " 的返回值类型为 String. 必要的时候需要手动把 String 转成 int."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-m54l3yy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-m54l3yy",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码示例:获取 POST 请求中的参数"
				}
			]
		},
		{
			"ID": "20221128084640-66fuz4e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-66fuz4e",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "POST 请求的参数一般通过 body 传递给服务器. body 中的数据格式有很多种. 如果是采用 form 表单的形式, 仍然可以通过   "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "getParameter"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 获取参数的值."
				}
			]
		},
		{
			"ID": "20221128084640-8tyhvuy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-8tyhvuy",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Postq请求body格式目前主流的三种方法"
				}
			]
		},
		{
			"ID": "20221128084640-eojqltf",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221128084640-eojqltf",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"ID": "20221128084640-pyjeo13",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20221128084640-pyjeo13",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-l4el1rz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-l4el1rz",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "创建类   PostParameter"
								}
							]
						},
						{
							"ID": "20221128084640-bir6qaw",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20221128084640-bir6qaw",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-dztec0m",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221128084640-dztec0m",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"ID": "20221128084640-fqzl7h6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221128084640-fqzl7h6",
												"updated": "20221128084640"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "如果请求是这种格式,服务器如何获取参数呢? 获取参数的方式和GET 一样,也是getParameter!!!"
												}
											]
										}
									]
								},
								{
									"ID": "20221128084640-qitxtuc",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221128084640-qitxtuc",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"ID": "20221128084640-xzkg3vu",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221128084640-xzkg3vu",
												"updated": "20221128084640"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用form表单"
												}
											]
										}
									]
								},
								{
									"ID": "20221128084640-hdtw9eg",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221128084640-hdtw9eg",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"ID": "20221128084640-1m3lvt9",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221128084640-1m3lvt9",
												"updated": "20221128084640"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用postman"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-hf3popu",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20221128084640-hf3popu",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-z41wdrq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-z41wdrq",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "form-data"
								}
							]
						},
						{
							"ID": "20221128084640-0f9f0xu",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20221128084640-0f9f0xu",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-zw9qan9",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221128084640-zw9qan9",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"ID": "20221128084640-v1lmsv9",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221128084640-v1lmsv9",
												"updated": "20221128084640"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "后面会讲"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221128084640-elh1m55",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20221128084640-elh1m55",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-e5uky6y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221128084640-e5uky6y",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JSON"
								}
							]
						},
						{
							"ID": "20221128084640-vd7gv72",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20221128084640-vd7gv72",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-lsrvyfx",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221128084640-lsrvyfx",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"ID": "20221128084640-y44wx40",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221128084640-y44wx40",
												"updated": "20221128084640"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "手动处理比较麻烦，这里使用第三方库来直接处理json格式数据"
												}
											]
										}
									]
								},
								{
									"ID": "20221128084640-tl02qkx",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221128084640-tl02qkx",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"ID": "20221128084640-a9s3g94",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221128084640-a9s3g94",
												"updated": "20221128084640"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用的是Jackson库(Spring官方推荐的库)"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128090205-z7uun4a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090205-z7uun4a"
			}
		},
		{
			"ID": "20221128084640-lbiiff0",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221128084640-lbiiff0",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "方法一：创建类   PostParameter"
				}
			]
		},
		{
			"ID": "20221128084640-re3fj1o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-re3fj1o",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建类   PostParameter"
				}
			]
		},
		{
			"ID": "20221128084640-pf8sh4v",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-pf8sh4v",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@WebServlet(\"/postParameter\")\npublic class PostParameter extends HttpServlet { \n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) \nthrows ServletException, IOException {\n        resp.setContentType(\"text/html; charset=utf-8\"); \n        \n        String userId = req.getParameter(\"userId\");\n        String classId = req.getParameter(\"classId\");\n        resp.getWriter().write(\"userId: \" + userId + \", \" + \"classId: \" + classId);\n    } \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-e5qw5lp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-e5qw5lp",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建 testPost.html, 放到 webapp 目录中"
				}
			]
		},
		{
			"ID": "20221128084640-09k3dcy",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-09k3dcy",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "aHRtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cform action=\"postParameter\" method=\"POST\"\u003e \n    \u003cinput type=\"text\" name=\"userId\"\u003e\n    \u003cinput type=\"text\" name=\"classId\"\u003e \n    \u003cinput type=\"submit\" value=\"提交\"\u003e \n\u003c/form\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128090209-z9oauno",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090209-z9oauno"
			}
		},
		{
			"ID": "20221128084640-dtdn3xu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-dtdn3xu",
				"updated": "20221128090242"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重新部署程序, 通过 URL "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "http://127.0.0.1:8080/ServletHelloWorld/testPost.html"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 访问, 可以看到 HTML\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127214005"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127214005-20221128090229-52tds02.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				}
			]
		},
		{
			"ID": "20221128090246-0kzbf7f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090246-0kzbf7f"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在输入框中输入内容, 点击提交\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127214019"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127214019-20221128090235-sjf48kw.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				}
			]
		},
		{
			"ID": "20221128090248-aeefld2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090248-aeefld2"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到跳转到了新的页面, 并显示出了刚刚传入的数据.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127214031"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127214031-20221128090242-9gzb7gp.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-zvl2pxb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-zvl2pxb",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时通过抓包可以看到, form 表单构造的 body 数据的格式为:"
				}
			]
		},
		{
			"ID": "20221128084640-rq8m95r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-rq8m95r",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "POST http://127.0.0.1:8080/ServletHelloWorld/postParameter HTTP/1.1 \nHost: 127.0.0.1:8080\nConnection: keep-alive \nContent-Length: 22 \nCache-Control: max-age=0\nsec-ch-ua: \" Not;A Brand\";v=\"99\", \"Google Chrome\";v=\"91\", \"Chromium\";v=\"91\"\nsec-ch-ua-mobile: ?0 \nUpgrade-Insecure-Requests: 1 \nOrigin: http://127.0.0.1:8080\nContent-Type: application/x-www-form-urlencoded\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36\nAccept:\ntext/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nSec-Fetch-Site: same-origin\nSec-Fetch-Mode: navigate\nSec-Fetch-User: ?1\nSec-Fetch-Dest: document\nReferer: http://127.0.0.1:8080/ServletHelloWorld/testPost.html \nAccept-Encoding: gzip, deflate, br\nAccept-Language: zh-CN,zh;q=0.9,en;q=0.8 \n\nuserId=123\u0026classId=456\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-llp7xxi",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-llp7xxi",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-gqc5pys",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-gqc5pys",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "Content-Type: application/x-www-form-urlencoded, 对应的 body 数据格式就形如\nuserId=123\u0026classId=456"
						}
					]
				}
			]
		},
		{
			"ID": "20221128090258-aw1hfk9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090258-aw1hfk9"
			}
		},
		{
			"ID": "20221128084640-6djuo26",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221128084640-6djuo26",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "方法二：JSON"
				}
			]
		},
		{
			"ID": "20221128084640-0e29zde",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-0e29zde",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "先把jackson库引入到项目中,这里使用的是"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "2.13.4.2"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "版本\n将下面代码复制到"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "pox.xml"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 文件中的"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\u003cdependencies\u003e"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "标签中"
				}
			]
		},
		{
			"ID": "20221128084640-15rc0ji",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-15rc0ji",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cdependency\u003e  \n    \u003cgroupId\u003ecom.fasterxml.jackson.core\u003c/groupId\u003e  \n    \u003cartifactId\u003ejackson-databind\u003c/artifactId\u003e  \n    \u003cversion\u003e2.13.4.2\u003c/version\u003e  \n\u003c/dependency\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128090304-3x9zd09",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090304-3x9zd09"
			}
		},
		{
			"ID": "20221128084640-hhazlzu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-hhazlzu",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建 PostParameterJson 类"
				}
			]
		},
		{
			"ID": "20221128084640-mue5xx7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-mue5xx7",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import com.fasterxml.jackson.databind.ObjectMapper;  \n  \nimport javax.servlet.ServletException;  \nimport javax.servlet.annotation.WebServlet;  \nimport javax.servlet.http.HttpServlet;  \nimport javax.servlet.http.HttpServletRequest;  \nimport javax.servlet.http.HttpServletResponse;  \nimport java.io.IOException;  \n  \nclass User{  \n    public int userId;  \n    public int classId;  \n}  \n  \n@WebServlet(\"/postJson\")  \npublic class PostJsonServlet extends HttpServlet {  \n    private ObjectMapper objectMapper = new ObjectMapper();  \n  \n    @Override  \n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {  \n        User user = objectMapper.readValue(req.getInputStream(), User.class);  \n        resp.getWriter().write(\"userId: \" + user.userId + \", classId: \" + user.classId);  \n    }  \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128090307-yq1ree1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090307-yq1ree1"
			}
		},
		{
			"ID": "20221128084640-hk3l7af",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-hk3l7af",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建 testPostJson.html"
				}
			]
		},
		{
			"ID": "20221128084640-g90dr3h",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-g90dr3h",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "aHRtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cinput type=\"text\" id=\"userId\"\u003e  \n\u003cinput type=\"text\" id=\"classId\"\u003e  \n\u003cinput type=\"button\" value=\"提交\" id=\"submit\"\u003e  \n  \n\u003cscript src=\"https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js\"\u003e\u003c/script\u003e  \n\u003cscript\u003e  \n    let userIdInput = document.querySelector(\"#userId\");  \n    let classIdInput = document.querySelector(\"#classId\");  \n    let button = document.querySelector(\"#submit\");  \n    button.onclick=function (){  \n        $.ajax({  \n            type:'post',  \n            url:'postJson',  \n            contentType:'applicaion/json',  \n            data:JSON.stringify({  \n                userId:userIdInput.value,  \n                classId:classIdInput.value  \n            }),  \n            success:function (body){  \n                console.log(body);  \n            }  \n        })  \n    }  \n\u003c/script\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-jiucc83",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-jiucc83",
				"updated": "20221128090318"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127221001"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127221001-20221128090318-ggq2ffr.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-9cx39ze",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-9cx39ze",
				"updated": "20221128090325"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127221059"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127221059-20221128090325-qrajx9t.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128090328-mil96yk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090328-mil96yk"
			}
		},
		{
			"ID": "20221128084640-m2smg76",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-m2smg76",
				"updated": "20221128090335"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "结果："
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n在浏览器中通过"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "http://127.0.0.1:8080/ServletHelloWorld/testPostJson.html"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "访问, 可以看到\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127220647"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127220647-20221128090335-3xuytar.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-m8mgu5l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-m8mgu5l",
				"updated": "20221128090342"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在控制台中可以看到\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127220723"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127220723-20221128090342-oxpcj0n.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-bh6yfq0",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-bh6yfq0",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-t8e3evq",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-t8e3evq",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "注意：\nJsonData 这个类用来表示解析之后生成的 JSON 对象. 这个类的属性的名字和类型要和 JSON 字符串的 key 相对应."
						}
					]
				},
				{
					"ID": "20221128084640-fua0z3o",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20221128084640-fua0z3o",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"ID": "20221128084640-w93mgm7",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221128084640-w93mgm7",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-5quc9h5",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221128084640-5quc9h5",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "Jackson 库的核心类为 "
										},
										{
											"Type": "NodeCodeSpan",
											"Data": "code",
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "ObjectMapper"
												},
												{
													"Type": "NodeCodeSpanCloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": ". 其中的 "
										},
										{
											"Type": "NodeCodeSpan",
											"Data": "code",
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "readValue"
												},
												{
													"Type": "NodeCodeSpanCloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": " 方法把一个 JSON 字符串转成 Java 对象. 其中的 writeValueAsString 方法把一个 Java 对象转成 JSON 格式字符串."
										}
									]
								}
							]
						},
						{
							"ID": "20221128084640-qhtqqdb",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221128084640-qhtqqdb",
								"updated": "20221128084640"
							},
							"Children": [
								{
									"ID": "20221128084640-zmi2v7i",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221128084640-zmi2v7i",
										"updated": "20221128084640"
									},
									"Children": [
										{
											"Type": "NodeCodeSpan",
											"Data": "code",
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "readValue"
												},
												{
													"Type": "NodeCodeSpanCloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": " 的第二个参数为 JsonData 的  类对象. 通过这个类对象, 在 readValue 的内部就可以借助"
										},
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "反射机制"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "来构造出 JsonData 对象, 并且根据 JSON 中key 的名字, 把对应的 value 赋值给JsonData 的对应字段."
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128090347-ii8lnsv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090347-ii8lnsv"
			}
		},
		{
			"ID": "20221128084640-nejr0gs",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221128084640-nejr0gs",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HttpServletResponse"
				}
			]
		},
		{
			"ID": "20221128084640-cggzp8c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-cggzp8c",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Servlet 中的 doXXX 方法的目的就是根据请求计算得到相应, 然后把响应的数据设置到HttpServletResponse 对象中."
				}
			]
		},
		{
			"ID": "20221128084640-tq9ikpm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-tq9ikpm",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然后 Tomcat 就会把这个  HttpServletResponse 对象按照 HTTP 协议的格式, 转成一个字符串, 并通过\nSocket 写回给浏览器."
				}
			]
		},
		{
			"ID": "20221128084640-jdeo4h7",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				1
			],
			"Properties": {
				"colgroup": "width: 393px;|",
				"id": "20221128084640-jdeo4h7",
				"updated": "20221128090623"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "方法"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 1,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "void setStatus(int sc)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "为该响应设置状态码。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "void setHeader(String name, String value)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "设置一个带有给定的名称和值的 header. 如果 name 已经存在, 则覆盖旧的值."
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "void addHeader(String name, String value)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "添加一个带有给定的名称和值的 header. 如果 name 已经存在, 不覆盖旧的值, 并列添加新的键值对"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "void setContentType(String type)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "设置被发送到客户端的响应的内容类型。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "void setCharacterEncoding(String charset)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "设置被发送到客户端的响应的字符编码（MIME 字符集）例如，UTF-8。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "void sendRedirect(String location)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用指定的重定向位置 URL 发送临时重定向响应到客户端。"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "PrintWriter getWriter()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于往 body 中写入文本格式数据."
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "OutputStream getOutputStream()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "用于往 body 中写入二进制格式数据"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221128090613-ik4cymj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090613-ik4cymj"
			}
		},
		{
			"ID": "20221128090619-t5pp9he",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090619-t5pp9he",
				"updated": "20221128090631"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127222323"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127222323-20221128090631-1ursdln.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-sqr8j6x",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221128084640-sqr8j6x",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221128084640-i6mlle1",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221128084640-i6mlle1",
						"updated": "20221128084640"
					},
					"Children": [
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "注意"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": ": 响应对象是服务器要返回给浏览器的内容, 这里的重要信息都是程序猿设置的. 因此上面的方法都是 \"写\" 方法.\n"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "注意:"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " 对于状态码/响应头的设置要放到 getWriter / getOutputStream 之前. 否则可能设置失效."
						}
					]
				}
			]
		},
		{
			"ID": "20221128084640-ko5gcem",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-ko5gcem",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码示例: 设置状态码"
				}
			]
		},
		{
			"ID": "20221128084640-p5edvqi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-p5edvqi",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现一个程序, 用户在浏览器通过参数指定要返回响应的状态码."
				}
			]
		},
		{
			"ID": "20221128084640-ul4xje7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-ul4xje7",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建 StatusServlet 类"
				}
			]
		},
		{
			"ID": "20221128084640-joxkuvd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-joxkuvd",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@WebServlet(\"/statusServlet\")\npublic class StatusServlet extends HttpServlet { \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        String statusString = req.getParameter(\"status\"); \n        \n        if (statusString != null) {\n            resp.setStatus(Integer.parseInt(statusString)); \n        }\n        \n        resp.getWriter().write(\"status: \" + statusString); \n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128090653-s9z3rd0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090653-s9z3rd0"
			}
		},
		{
			"ID": "20221128084640-2qrz6jk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-2qrz6jk",
				"updated": "20221128090659"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "部署程序, 在浏览器中通过 URL "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "http://127.0.0.1:8080/ServletHelloWorld/statusServlet?status=200"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "访问, 可以看到\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127222817"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127222817-20221128090659-r3i6dkz.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128090701-60y40zb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090701-60y40zb"
			}
		},
		{
			"ID": "20221128084640-2ctkq99",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-2ctkq99",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "抓包结果:"
				}
			]
		},
		{
			"ID": "20221128084640-hh3lg1l",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-hh3lg1l",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "HTTP/1.1 200 \nContent-Length: 11\nDate: Mon, 21 Jun 2021 08:05:37 GMT \nKeep-Alive: timeout=20\nConnection: keep-alive \n\nstatus: 200\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-b0dl4e4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-b0dl4e4",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变换不同的 status 的值, 就可以看到不同的响应结果."
				}
			]
		},
		{
			"ID": "20221128090706-w84fhox",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090706-w84fhox"
			}
		},
		{
			"ID": "20221128084640-3a86dpd",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-3a86dpd",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码示例: 自动刷新"
				}
			]
		},
		{
			"ID": "20221128084640-yhdkg4x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-yhdkg4x",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现一个程序, 让浏览器每秒钟自动刷新一次. 并显示当前的时间戳."
				}
			]
		},
		{
			"ID": "20221128084640-9u1yyet",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-9u1yyet",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建 AutoRefreshServlet 类"
				}
			]
		},
		{
			"ID": "20221128084640-08yzs4w",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-08yzs4w",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@WebServlet(\"/autoRefreshServlet\")\npublic class AutoRefreshServlet extends HttpServlet { \n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) \nthrows ServletException, IOException {\n        resp.setHeader(\"Refresh\", \"1\");\n        resp.getWriter().write(\"timeStamp: \" + System.currentTimeMillis());\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-4hr591a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-4hr591a",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过 HTTP 响应报头中的 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Refresh"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "字段, 可以控制浏览器自动刷新的时机."
				}
			]
		},
		{
			"ID": "20221128084640-npcfn19",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-npcfn19",
				"updated": "20221128090715"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "部署程序, 通过 URL "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "http://127.0.0.1:8080/ServletHelloWorld/autoRefreshServlet"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 访问, 可以看到浏览器每秒钟自动刷新一次.\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127223315"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127223315-20221128090715-765v580.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-6s31bpl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-6s31bpl",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "抓包结果"
				}
			]
		},
		{
			"ID": "20221128084640-0pv6plk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-0pv6plk",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "HTTP/1.1 200 \nRefresh: 1\nContent-Length: 24\nDate: Mon, 21 Jun 2021 08:14:29 GMT \nKeep-Alive: timeout=20\nConnection: keep-alive \n\ntimeStamp: 1624263269995\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128090726-zseic4b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128090726-zseic4b"
			}
		},
		{
			"ID": "20221128084640-27g9cc2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221128084640-27g9cc2",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码示例: 重定向"
				}
			]
		},
		{
			"ID": "20221128084640-sxfrqyl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-sxfrqyl",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现一个程序, 返回一个重定向 HTTP 响应, 自动跳转到另外一个页面."
				}
			]
		},
		{
			"ID": "20221128084640-8uax7sh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-8uax7sh",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建 RedirectServlet 类"
				}
			]
		},
		{
			"ID": "20221128084640-9hevv7k",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-9hevv7k",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@WebServlet(\"/redirectServlet\") \npublic class RedirectServlet extends HttpServlet {  \n    @Override  \n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {  \n        // 在这里返回一个 302 重定向响应, 让浏览器, 自动跳转到 搜狗 主页  \n        //resp.setStatus(302);  \n        //resp.setHeader(\"Location\", \"https://www.sogou.com\");  \n      \n        // Servlet 提供了一个更简便的实现重定向的写法. sendedirect方法  \n        resp.sendRedirect(\"https://www.sogou.com\");  \n    }  \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221128084640-htw910g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-htw910g",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "部署程序, 通过 URL "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "http://127.0.0.1:8080/ServletHelloWorld/redirectServlet"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 访问, 可以看\n到, 页面自动跳转到  搜狗主页  了."
				}
			]
		},
		{
			"ID": "20221128084640-t43og44",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221128084640-t43og44",
				"updated": "20221128090722"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "抓包结果\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221127223527"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221127223527-20221128090722-5rfvk5h.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221128084640-1rckvl2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221128084640-1rckvl2",
				"updated": "20221128084640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "HTTP/1.1 302\nLocation: http://www.sogou.com \nContent-Length: 0\nDate: Mon, 21 Jun 2021 08:17:26 GMT \nKeep-Alive: timeout=20\nConnection: keep-alive\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221129224100-tfpmleq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224100-tfpmleq"
			}
		},
		{
			"ID": "20221129224101-2zwxw2z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224101-2zwxw2z"
			}
		},
		{
			"ID": "20221129224102-5kh1r4f",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221129224102-5kh1r4f",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码示例: 服务器版表白墙"
				}
			]
		},
		{
			"ID": "20221129224102-z4jbqa3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-z4jbqa3",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结合上述 API, 我们可以把之前实现的表白墙程序修改成服务器版本. 这样即使页面关闭, 表白墙的内容也不会丢失."
				}
			]
		},
		{
			"ID": "20221129224102-coqkhxx",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221129224102-coqkhxx",
				"updated": "20221129224139"
			},
			"Children": [
				{
					"ID": "20221129224101-qamb3tx",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20221129224101-qamb3tx",
						"updated": "20221129224131"
					},
					"Children": [
						{
							"ID": "20221129224102-diwv2tp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-diwv2tp",
								"updated": "20221129224131"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "告诉服务器,当前留言了一条啥样的数据\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "Pasted image 20221129130743"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/Pasted image 20221129130743-20221129224131-s94nj2b.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				},
				{
					"ID": "20221129224101-w2lrpd0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20221129224101-w2lrpd0",
						"updated": "20221129224139"
					},
					"Children": [
						{
							"ID": "20221129224102-ixlpn8r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-ixlpn8r",
								"updated": "20221129224139"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "从服务器获取到,当前都有哪些留言数据\n​"
								},
								{
									"Type": "NodeImage",
									"Data": "span",
									"Children": [
										{
											"Type": "NodeBang"
										},
										{
											"Type": "NodeOpenBracket"
										},
										{
											"Type": "NodeLinkText",
											"Data": "Pasted image 20221129130941"
										},
										{
											"Type": "NodeCloseBracket"
										},
										{
											"Type": "NodeOpenParen"
										},
										{
											"Type": "NodeLinkDest",
											"Data": "assets/Pasted image 20221129130941-20221129224139-4aze0pk.png"
										},
										{
											"Type": "NodeCloseParen"
										}
									]
								},
								{
									"Type": "NodeBr",
									"Data": "br"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224142-2mcb8hn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224142-2mcb8hn"
			}
		},
		{
			"ID": "20221129224102-i6i389z",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221129224102-i6i389z",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "必知点"
				}
			]
		},
		{
			"ID": "20221129224102-uyymurb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-uyymurb",
				"updated": "20221129224149"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129131404"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129131404-20221129224149-yiqtmdj.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-kr00vjz",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221129224102-kr00vjz",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"ID": "20221129224101-e9ps2su",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224101-e9ps2su",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-c6s30oy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-c6s30oy",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ObjectMapper 的 readValue 方法也能直接从一个 InputStream 对象读取数据."
								}
							]
						}
					]
				},
				{
					"ID": "20221129224101-lfd37ef",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224101-lfd37ef",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-bzh7sr1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-bzh7sr1",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ObjectMapper 的 writeValueAsString 方法也能把一个对象数组直接转成 JSON 格式的字符串."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224151-xr7x0y6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224151-xr7x0y6"
			}
		},
		{
			"ID": "20221129224102-itjcv12",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221129224102-itjcv12",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对象和JSON字符串之间的转换"
				}
			]
		},
		{
			"ID": "20221129224102-wl0r3gf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-wl0r3gf",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Java"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "objectMapper.readValue"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "把 json字符串转成对象\n"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "objectMapper.writeValueAsString"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 把对象转成json字符串"
				}
			]
		},
		{
			"ID": "20221129224102-mzcxp62",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-mzcxp62",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "JS"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "JSON.parse"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "把 json字符串转成对象\n"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "JSON.stringify"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "把对象转成json字符串"
				}
			]
		},
		{
			"ID": "20221129224154-t1bo9z8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224154-t1bo9z8"
			}
		},
		{
			"ID": "20221129224102-9v042a7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221129224102-9v042a7",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "项目代码"
				}
			]
		},
		{
			"ID": "20221129224102-ppaort2",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221129224102-ppaort2",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"ID": "20221129224101-hf2o05k",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224101-hf2o05k",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-n1phiwi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-n1phiwi",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "新建一个项目：message_wall"
								}
							]
						}
					]
				},
				{
					"ID": "20221129224101-uj7hln1",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224101-uj7hln1",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-n2eb3nt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-n2eb3nt",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "pox.xml 文件配置"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-ufhqvd2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221129224102-ufhqvd2",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "eG1s"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e  \n\u003cproject xmlns=\"http://maven.apache.org/POM/4.0.0\"  \n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  \n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\u003e  \n    \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e  \n  \n    \u003cgroupId\u003eorg.example\u003c/groupId\u003e  \n    \u003cartifactId\u003emessage_wall\u003c/artifactId\u003e  \n    \u003cversion\u003e1.0-SNAPSHOT\u003c/version\u003e  \n  \n    \u003cproperties\u003e      \n\t    \u003cmaven.compiler.source\u003e8\u003c/maven.compiler.source\u003e  \n        \u003cmaven.compiler.target\u003e8\u003c/maven.compiler.target\u003e  \n    \u003c/properties\u003e  \n    \u003cdependencies\u003e      \n\t    \u003cdependency\u003e          \n\t\t    \u003cgroupId\u003ejavax.servlet\u003c/groupId\u003e  \n            \u003cartifactId\u003ejavax.servlet-api\u003c/artifactId\u003e  \n            \u003cversion\u003e3.1.0\u003c/version\u003e  \n            \u003cscope\u003eprovided\u003c/scope\u003e  \n        \u003c/dependency\u003e      \n      \n        \u003cdependency\u003e          \n\t        \u003cgroupId\u003ecom.fasterxml.jackson.core\u003c/groupId\u003e  \n            \u003cartifactId\u003ejackson-databind\u003c/artifactId\u003e  \n            \u003cversion\u003e2.13.0\u003c/version\u003e  \n        \u003c/dependency\u003e  \n      \n        \u003cdependency\u003e          \n\t        \u003cgroupId\u003emysql\u003c/groupId\u003e  \n            \u003cartifactId\u003emysql-connector-java\u003c/artifactId\u003e  \n            \u003cversion\u003e8.0.28\u003c/version\u003e  \n        \u003c/dependency\u003e  \n    \u003c/dependencies\u003e  \n\u003c/project\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221129224159-ai0g5j0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224159-ai0g5j0"
			}
		},
		{
			"ID": "20221129224102-hmy0yyc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-hmy0yyc",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "表白墙：love_wall.html"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n在文件中加入ajax代码来与服务器进行交互。"
				}
			]
		},
		{
			"ID": "20221129224102-3nle4f5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221129224102-3nle4f5",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "aHRtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003c!DOCTYPE html\u003e  \n\u003chtml lang=\"en\"\u003e  \n  \n\u003chead\u003e  \n    \u003cmeta charset=\"UTF-8\"\u003e  \n    \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e  \n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e  \n    \u003ctitle\u003e表白墙\u003c/title\u003e  \n\u003c/head\u003e  \n  \n\u003cbody\u003e  \n\u003cstyle\u003e  \n    * {  \n        margin: 0;  \n        padding: 0;  \n        box-sizing: border-box;  \n    }  \n  \n    .container {  \n        width: 100%;  \n    }  \n  \n    h3 {  \n        text-align: center;  \n        padding: 30px 0;  \n        font-size: 24px;  \n    }  \n  \n    p {  \n        text-align: center;  \n        color: #999;  \n        padding: 10px 0;  \n    }  \n  \n    .row {  \n        width: 400px;  \n        height: 50px;  \n        margin: 0 auto;  \n  \n        display: flex;  \n        justify-content: center;  \n        align-items: center;  \n    }  \n  \n    .row span {  \n        width: 60px;  \n        font-size: 20px;  \n    }  \n  \n    .row input {  \n        width: 300px;  \n        height: 40px;  \n        line-height: 40px;  \n        font-size: 20px;  \n        text-indent: 0.5em;  \n        /* 去掉输入框的轮廓线 */        outline: none;  \n    }  \n  \n    .row #submit {  \n        width: 300px;  \n        height: 40px;  \n        font-size: 20px;  \n        line-height: 40px;  \n        margin: 0 auto;  \n  \n        color: white;  \n        background-color: orange;  \n        /* 去掉边框 */        border: none;  \n  \n        border-radius: 10px;  \n    }  \n  \n    .row #submit:active {  \n        background-color: gray;  \n    }  \n\u003c/style\u003e  \n\u003cdiv class=\"container\"\u003e  \n    \u003ch3\u003e表白墙\u003c/h3\u003e  \n    \u003cp\u003e输入后点击提交, 会将信息显示在表格中\u003c/p\u003e  \n    \u003cdiv class=\"row\"\u003e  \n        \u003cspan\u003e谁: \u003c/span\u003e  \n        \u003cinput type=\"text\"\u003e  \n    \u003c/div\u003e    \u003cdiv class=\"row\"\u003e  \n        \u003cspan\u003e对谁: \u003c/span\u003e  \n        \u003cinput type=\"text\"\u003e  \n    \u003c/div\u003e    \u003cdiv class=\"row\"\u003e  \n        \u003cspan\u003e说: \u003c/span\u003e  \n        \u003cinput type=\"text\"\u003e  \n    \u003c/div\u003e    \u003cdiv class=\"row\"\u003e  \n        \u003cbutton id=\"submit\"\u003e提交\u003c/button\u003e  \n    \u003c/div\u003e\u003c/div\u003e  \n  \n\u003cscript src=\"https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js\"\u003e\u003c/script\u003e  \n\u003cscript\u003e  \n    // 加入ajax的代码，此处加入导入逻辑有两个部分  \n    // 点击按钮提交的时候，ajax要构造数据发给服务器  \n    // 页面加载时，从服务器获取消息列表， 并在界面上直接显示  \n    function getMessages() {  \n        $.ajax({  \n            type: \"get\",  \n            url: \"message\",  \n            success: function (body) {  \n                // 当前body以及是一个js对象的数组了，ajax会根据响应的content type来自动进行解析  \n                // 如果服务器返回的content-type 已经是 application/json 了， ajax就会把body自动转成js的对象  \n                // 如果客户端没有自动转换，也可以通过 JSON.parse() 这个函数来手动转换  \n  \n                let container = document.querySelector('.container');  \n                for (let message of body) {  \n                    let div = document.createElement('div');  \n                    div.innerHTML = message.from + ' 对 ' + message.to + ' 说 ' + message.message;  \n                    div.className = 'row';  \n                    container.appendChild(div);  \n                }  \n            }  \n        });  \n    }  \n  \n    getMessages();  \n    // 当用户点击 submit, 就会获取到 input 中的内容, 从而把内容构造成一个 div, 插入到页面末尾.  \n    let submitBtn = document.querySelector('#submit');  \n    submitBtn.onclick = function () {  \n        // 1. 获取到 3 个 input 中的内容.  \n        let inputs = document.querySelectorAll('input');  \n        let from = inputs[0].value;  \n        let to = inputs[1].value;  \n        let msg = inputs[2].value;  \n        if (from == '' || to == '' || msg == '') {  \n            // 用户还没填写完, 暂时先不提交数据.  \n            return;  \n        }  \n        // 2. 生成一个新的 div, 内容就是 input 里的内容. 把这个新的 div 加到页面中.  \n        let div = document.createElement('div');  \n        div.innerHTML = from + ' 对 ' + to + ' 说: ' + msg;  \n        div.className = 'row';  \n        let container = document.querySelector('.container');  \n        container.appendChild(div);  \n        // 3. 清空之前输入框的内容.  \n        for (let i = 0; i \u003c inputs.length; i++) {  \n            inputs[i].value = '';  \n        }  \n  \n        //4. 把当前获取到的输入框的内容，构造成一个HTTP Post请求，通过ajax发个服务器  \n        let body = {  \n            from: from,  \n            to: to,  \n            message: msg  \n        };  \n  \n        $.ajax({  \n            type: \"post\",  \n            url: \"message\",  \n            contentType: \"application/json; charset=utf8\",  \n            data: JSON.stringify(body),  \n            success: function (body) {  \n                alert(\"消息提交成功\");  \n            },  \n            error: function () {  \n                alert(\"消息提交失败\");  \n            }  \n        });  \n    }  \n  \n  \n\u003c/script\u003e  \n\u003c/body\u003e  \n  \n\u003c/html\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221129224206-xdzu2d2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224206-xdzu2d2"
			}
		},
		{
			"ID": "20221129224102-eev2iof",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-eev2iof",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "创建 MessageServlet 类"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n其中包含了 Message类， Message类就是每一条数据的格式"
				}
			]
		},
		{
			"ID": "20221129224102-y538fpa",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221129224102-y538fpa",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import com.fasterxml.jackson.databind.ObjectMapper;  \n  \nimport javax.servlet.ServletException;  \nimport javax.servlet.annotation.WebServlet;  \nimport javax.servlet.http.HttpServlet;  \nimport javax.servlet.http.HttpServletRequest;  \nimport javax.servlet.http.HttpServletResponse;  \nimport java.io.IOException;  \nimport java.sql.Connection;  \nimport java.sql.PreparedStatement;  \nimport java.sql.ResultSet;  \nimport java.sql.SQLException;  \nimport java.util.ArrayList;  \nimport java.util.List;  \n  \n  \nclass Message {  \n    public String from;  \n    public String to;  \n    public String message;  \n}  \n  \n@WebServlet(\"/message\")  \npublic class MessageServlet extends HttpServlet {  \n    private ObjectMapper objectMapper = new ObjectMapper();  \n  \n    // 改成数据库, 就不需要这个变量了  \n    // private List\u003cMessage\u003e messages = new ArrayList\u003c\u003e();  \n  \n    @Override  \n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {  \n        // 处理提交消息请求  \n        Message message = objectMapper.readValue(req.getInputStream(), Message.class);  \n        // 最简单的保存方法就是保存到内存中.  \n        // messages.add(message);        // 通过 ContentType 来告知页面, 返回的数据是 json 格式.  \n        // 有了这样的声明, 此时 jquery ajax 就会自动的帮我们把字符串转成 js 对象.  \n        // 如果没有, jquery ajax 就只是当成字符串来处理的~~  \n        save(message);  \n        resp.setContentType(\"application/json; charset=utf8\");  \n        resp.getWriter().write(\"{ \\\"ok\\\": true }\");  \n    }  \n  \n    @Override  \n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {  \n        // 获取到消息列表. 只要把消息列表中的内容整个的都返回给客户端即可  \n        // 此处需要使用 ObjectMapper 把 Java 对象, 转成 JSON 格式字符串~  \n        List\u003cMessage\u003e messages = load();  \n        String jsonString = objectMapper.writeValueAsString(messages);  \n        System.out.println(\"jsonString: \" + jsonString);  \n        resp.setContentType(\"application/json; charset=utf8\");  \n        resp.getWriter().write(jsonString);  \n    }  \n  \n    private void save(Message message) {  \n        // 把一条消息保存到数据库中  \n        Connection connection = null;  \n        PreparedStatement statement = null;  \n        try {  \n            // 1. 和数据库建立连接  \n            connection = DBUtil.getConnection();  \n            // 2. 构造 SQL          \n            String sql = \"insert into message values(?, ?, ?)\";  \n            statement = connection.prepareStatement(sql);  \n            statement.setString(1, message.from);  \n            statement.setString(2, message.to);  \n            statement.setString(3, message.message);  \n            // 3. 执行 SQL            statement.executeUpdate();  \n        } catch (SQLException e) {  \n            e.printStackTrace();  \n        } finally {  \n            DBUtil.close(connection, statement, null);  \n        }  \n    }  \n  \n    private List\u003cMessage\u003e load() {  \n        // 从数据库中获取到所有的消息  \n        List\u003cMessage\u003e messages = new ArrayList\u003c\u003e();  \n        Connection connection = null;  \n        PreparedStatement statement = null;  \n        ResultSet resultSet = null;  \n        try {  \n            connection = DBUtil.getConnection();  \n            String sql = \"select * from message\";  \n            statement = connection.prepareStatement(sql);  \n            resultSet = statement.executeQuery();  \n            while (resultSet.next()) {  \n                Message message = new Message();  \n                message.from = resultSet.getString(\"from\");  \n                message.to = resultSet.getString(\"to\");  \n                message.message =  resultSet.getString(\"message\");  \n                messages.add(message);  \n            }  \n        } catch (SQLException throwables) {  \n            throwables.printStackTrace();  \n        } finally {  \n            DBUtil.close(connection, statement, resultSet);  \n        }  \n        return messages;  \n    }  \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221129224215-5du5yc8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224215-5du5yc8"
			}
		},
		{
			"ID": "20221129224102-pwehgll",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-pwehgll",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "DBUtil类"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n这里我在mysql中创建了一个message_wall库,在库中创建了message表"
				}
			]
		},
		{
			"ID": "20221129224102-dic3usv",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221129224102-dic3usv",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "create database message_wall;\n\nuse message_wall;\n\ncreate table message(`from` varchar(100) , `to` varchar(100) , to text);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221129224102-xq32z2x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-xq32z2x",
				"updated": "20221129224228"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "from 和 to 是sql中的关键字.当关键字作为表名/列名的时候,需要加上反引号"
				}
			]
		},
		{
			"ID": "20221129224234-rmtrtc0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224234-rmtrtc0"
			}
		},
		{
			"ID": "20221129224102-61sw46x",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221129224102-61sw46x",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import com.mysql.cj.jdbc.MysqlDataSource;  \n  \nimport javax.sql.DataSource;  \nimport java.sql.Connection;  \nimport java.sql.PreparedStatement;  \nimport java.sql.ResultSet;  \nimport java.sql.SQLException;  \n  \npublic class DBUtil {  \n    private static final String URL = \"jdbc:mysql://127.0.0.1:3306/message_wall?characterEncoding=utf8\u0026useSSL=false\";  \n    private static final String USERNAME = \"root\";  \n    private static final String PASSWORD = \"back7671773\";  \n  \n    private volatile static DataSource dataSource = null;  \n  \n    private static DataSource getDataSource() {   // getConnection 是在多线程环境下执行的，所以有线程安全问题，所以在这里使用了双判定\n        if (dataSource == null) {  \n            synchronized (DBUtil.class) {  \n                if (dataSource == null) {  \n                    dataSource = new MysqlDataSource();  \n                    ((MysqlDataSource)dataSource).setUrl(URL);  \n                    ((MysqlDataSource)dataSource).setUser(USERNAME);  \n                    ((MysqlDataSource)dataSource).setPassword(PASSWORD);  \n                }  \n            }  \n        }  \n        return dataSource;  \n    }  \n  \n    public static Connection getConnection() throws SQLException {  \n        return getDataSource().getConnection();  \n    }  \n  \n    public static void close(Connection connection, PreparedStatement statement, ResultSet resultSet) {  \n        if (resultSet != null) {  \n            try {  \n                resultSet.close();  \n            } catch (SQLException e) {  \n                e.printStackTrace();  \n            }  \n        }  \n        if (statement != null) {  \n            try {  \n                statement.close();  \n            } catch (SQLException e) {  \n                e.printStackTrace();  \n            }  \n        }  \n        if (connection != null) {  \n            try {  \n                connection.close();  \n            } catch (SQLException e) {  \n                e.printStackTrace();  \n            }  \n        }  \n    }  \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221129224239-c26j9a5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224239-c26j9a5"
			}
		},
		{
			"ID": "20221129224102-hrrthip",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221129224102-hrrthip",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "小结"
				}
			]
		},
		{
			"ID": "20221129224102-f9p9v00",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-f9p9v00",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "开发 一个表白墙网站的基本步骤"
				}
			]
		},
		{
			"ID": "20221129224102-lopkkt5",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221129224102-lopkkt5",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"ID": "20221129224101-22k30r9",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20221129224101-22k30r9",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-000ko1b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-000ko1b",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "约定前后端交互的接口"
								}
							]
						}
					]
				},
				{
					"ID": "20221129224101-tceajo4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20221129224101-tceajo4",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-oakjmpc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-oakjmpc",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "开发服务器代码"
								}
							]
						},
						{
							"ID": "20221129224102-t1l6bgr",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20221129224102-t1l6bgr",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"ID": "20221129224101-7b4aa1v",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20221129224101-7b4aa1v",
										"updated": "20221129224101"
									},
									"Children": [
										{
											"ID": "20221129224102-dgxybc4",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221129224102-dgxybc4",
												"updated": "20221129224102"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "先编写 Servlet能够处理前端发来的请求"
												}
											]
										}
									]
								},
								{
									"ID": "20221129224101-wl1bvyd",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20221129224101-wl1bvyd",
										"updated": "20221129224101"
									},
									"Children": [
										{
											"ID": "20221129224102-sizrnj9",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221129224102-sizrnj9",
												"updated": "20221129224102"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "编写数据库代码 ， 来存储/获取关键数据"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221129224101-ea0kl0u",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20221129224101-ea0kl0u",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-rxw6pl7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-rxw6pl7",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "开发客户端代码"
								}
							]
						},
						{
							"ID": "20221129224102-2kjn9y4",
							"Type": "NodeList",
							"ListData": {
								"Typ": 1
							},
							"Properties": {
								"id": "20221129224102-2kjn9y4",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"ID": "20221129224101-208mpai",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "MS4=",
										"Num": 1
									},
									"Properties": {
										"id": "20221129224101-208mpai",
										"updated": "20221129224101"
									},
									"Children": [
										{
											"ID": "20221129224102-tu6k933",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221129224102-tu6k933",
												"updated": "20221129224102"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "基于ajax能够构造请求以及解析响应"
												}
											]
										}
									]
								},
								{
									"ID": "20221129224101-8ejnnxz",
									"Type": "NodeListItem",
									"ListData": {
										"Typ": 1,
										"Delimiter": 46,
										"Marker": "Mi4=",
										"Num": 2
									},
									"Properties": {
										"id": "20221129224101-8ejnnxz",
										"updated": "20221129224101"
									},
									"Children": [
										{
											"ID": "20221129224102-ye5y6il",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221129224102-ye5y6il",
												"updated": "20221129224102"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "能够响应用户的操作(点击按钮之后,触发给服务器发送请求的行为)"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-6kcuriu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-6kcuriu",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其实也就是MVC (Model , View , Controller)"
				}
			]
		},
		{
			"ID": "20221129224102-49rhxsz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-49rhxsz",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Controller(控制器,处理请求之后的关键逻辑)\nModel(操作数据存取的逻辑)\nView(给用户展示的界面)"
				}
			]
		},
		{
			"ID": "20221129224102-rycelvw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-rycelvw",
				"updated": "20221129224247"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129132402"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129132402-20221129224247-dx85z0q.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224249-mb6g0l6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224249-mb6g0l6"
			}
		},
		{
			"ID": "20221129224102-03wc14z",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221129224102-03wc14z",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Cookie 和 Session"
				}
			]
		},
		{
			"ID": "20221129224102-vysrku8",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221129224102-vysrku8",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "回顾 Cookie"
				}
			]
		},
		{
			"ID": "20221129224102-kon7bmt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-kon7bmt",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HTTP 协议自身是属于 \"无状态\" 协议."
				}
			]
		},
		{
			"ID": "20221129224102-14shd2y",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221129224102-14shd2y",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221129224102-3vs8w6z",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221129224102-3vs8w6z",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "\"无状态\" 的含义指的是"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": ":\n默认情况下 HTTP 协议的客户端和服务器之间的这次通信, 和下次通信之间没有直接的联系."
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-f0ne9aq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-f0ne9aq",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但是实际开发中, 我们很多时候是需要知道请求之间的关联关系的."
				}
			]
		},
		{
			"ID": "20221129224102-v9nqnw4",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221129224102-v9nqnw4",
				"updated": "20221129224302"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221129224102-3wzi79z",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221129224102-3wzi79z",
						"updated": "20221129224302"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "例如登陆网站成功后, 第二次访问的时候服务器就能知道该请求是否是已经登陆过了.\n​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "Pasted image 20221129134254"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "assets/Pasted image 20221129134254-20221129224302-95dkwyy.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeBr",
							"Data": "br"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224305-6ljv5np",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224305-6ljv5np"
			}
		},
		{
			"ID": "20221129224102-q4px6c6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-q4px6c6",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "图中的 \"令牌\" 通常就存储在 Cookie 字段中.\n回忆之前的例子:"
				}
			]
		},
		{
			"ID": "20221129224102-7ns95w0",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221129224102-7ns95w0",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"ID": "20221129224101-dwd9oeb",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20221129224101-dwd9oeb",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-a7iubg3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-a7iubg3",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "到了医院先挂号. 挂号时候需要提供身份证, 同时得到了一张 \"就诊卡\", 这个就诊卡就相当于患者的 \"令牌\"."
								}
							]
						}
					]
				},
				{
					"ID": "20221129224101-erxlpz3",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20221129224101-erxlpz3",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-3r5bstr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-3r5bstr",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "后续去各个科室进行检查, 诊断, 开药等操作, 都不必再出示身份证了, 只要凭就诊卡即可识别 出当前患者的身份."
								}
							]
						}
					]
				},
				{
					"ID": "20221129224101-inuyyb4",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20221129224101-inuyyb4",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-fm1rnd7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-fm1rnd7",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "看完病了之后, 不想要就诊卡了, 就可以注销这个卡. 此时患者的身份和就诊卡的关联就销毁了. (类似于网站的注销操作)"
								}
							]
						}
					]
				},
				{
					"ID": "20221129224101-sk0jtmv",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20221129224101-sk0jtmv",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-s264ezf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-s264ezf",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "又来看病, 可以办一张新的就诊卡, 此时就得到了一个新的 \"令牌\"此时在服务器这边就需要记录令牌信息, 以及令牌对应的用户信息, 这个就是 Session 机制所做的工作."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-v44b10n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-v44b10n",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时在服务器这边就需要记录令牌信息, 以及令牌对应的用户信息, 这个就是 Session 机制所做的工作."
				}
			]
		},
		{
			"ID": "20221129224310-nndzj7j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224310-nndzj7j"
			}
		},
		{
			"ID": "20221129224102-v6uyn7n",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221129224102-v6uyn7n",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "理解会话机制 (Session)"
				}
			]
		},
		{
			"ID": "20221129224102-i51jxaw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-i51jxaw",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "服务器同一时刻收到的请求是很多的. 服务器需要清楚的区分每个请求是从属于哪个用户, 就需要在 服务器这边记录每个用户令牌以及用户的信息的对应关系."
				}
			]
		},
		{
			"ID": "20221129224102-n5l4pkh",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221129224102-n5l4pkh",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221129224102-a6erlrp",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221129224102-a6erlrp",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "在上面的例子中, 就诊卡就是一张 \"令牌\". 要想让这个令牌能够生效, 就需要医院这边通过系统记录每个就诊卡和患者信息之间的关联关系."
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-wulmpcn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-wulmpcn",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "会话的本质就是一个 \"哈希表\", 存储了一些键值对结构. key 就是令牌的 ID(token/sessionId), value 就是用户信息(用户信息可以根据需求灵活设计)."
				}
			]
		},
		{
			"ID": "20221129224102-6yfdudx",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221129224102-6yfdudx",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221129224102-hh2oydv",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221129224102-hh2oydv",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "sessionId 是由服务器生成的一个 \"唯一性字符串\", 从 session 机制的角度来看, 这个唯一性字符串称为 \"sessionId\". 但是站在整个登录流程中看待, 也可以把这个唯一性字符串称为 \"token\"."
						}
					]
				},
				{
					"ID": "20221129224102-sys9j73",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221129224102-sys9j73",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "sessionId 和 token 就可以理解成是同一个东西的不同叫法(不同视角的叫法)."
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-2tca78l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-2tca78l",
				"updated": "20221129224324"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129134607"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129134607-20221129224324-ngjiqo1.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-azozer3",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221129224102-azozer3",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"ID": "20221129224101-qq84tgi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224101-qq84tgi",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-br70vny",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-br70vny",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当用户登陆的时候, 服务器在 Session 中新增一个新记录, 并把 sessionId / token 返回给客户端. (例如通过 HTTP 响应中的 Set-Cookie 字段返回)."
								}
							]
						}
					]
				},
				{
					"ID": "20221129224101-7pn32la",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224101-7pn32la",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-9dgaw1y",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-9dgaw1y",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "客户端后续再给服务器发送请求的时候, 需要在请求中带上 sessionId/ token. (例如通过 HTTP 请求中的 Cookie 字段带上)."
								}
							]
						}
					]
				},
				{
					"ID": "20221129224101-eybksgt",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224101-eybksgt",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-rmkh6jj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-rmkh6jj",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "服务器收到请求之后, 根据请求中的 sessionId / token 在 Session 信息中获取到对应的用户信息, 再进行后续操作."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-4iklhri",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221129224102-4iklhri",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221129224102-3a3hvh6",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221129224102-3a3hvh6",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "Servlet 的 Session 默认是保存在内存中的. 如果重启服务器则 Session 数据就会丢失."
						}
					]
				}
			]
		},
		{
			"ID": "20221129224330-clupa8a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224330-clupa8a"
			}
		},
		{
			"ID": "20221129224102-b62zee8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221129224102-b62zee8",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Cookie 和 Session 的区别"
				}
			]
		},
		{
			"ID": "20221129224102-6sb0pwz",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221129224102-6sb0pwz",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"ID": "20221129224101-uwcbyhf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224101-uwcbyhf",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-aigwq2m",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-aigwq2m",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Cookie 是客户端的机制. Session 是服务器端的机制."
								}
							]
						}
					]
				},
				{
					"ID": "20221129224101-ljqhbr3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224101-ljqhbr3",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-3jqqsxy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-3jqqsxy",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Cookie 和 Session 经常会在一起配合使用. 但是不是必须配合."
								}
							]
						},
						{
							"ID": "20221129224102-v66j0ag",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20221129224102-v66j0ag",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"ID": "20221129224101-8d80ns9",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221129224101-8d80ns9",
										"updated": "20221129224101"
									},
									"Children": [
										{
											"ID": "20221129224102-0q5kcr8",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221129224102-0q5kcr8",
												"updated": "20221129224102"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "完全可以用 Cookie 来保存一些数据在客户端. 这些数据不一定是用户身份信息, 也不一定是 token / sessionId"
												}
											]
										}
									]
								},
								{
									"ID": "20221129224101-gl3gu2k",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221129224101-gl3gu2k",
										"updated": "20221129224101"
									},
									"Children": [
										{
											"ID": "20221129224102-sumfx22",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221129224102-sumfx22",
												"updated": "20221129224102"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "Session 中的 token / sessionId 也不需要非得通过 Cookie / Set-Cookie 传递."
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224333-2ilm7hm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224333-2ilm7hm"
			}
		},
		{
			"ID": "20221129224102-zlfo9j3",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221129224102-zlfo9j3",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "核心方法"
				}
			]
		},
		{
			"ID": "20221129224102-3eh1c1v",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221129224102-3eh1c1v",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HttpServletRequest 类中的相关方法"
				}
			]
		},
		{
			"ID": "20221129224102-w8yla4t",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				1
			],
			"Properties": {
				"colgroup": "width: 199px;|",
				"id": "20221129224102-w8yla4t",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "方法"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 1,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HttpSession getSession()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在服务器中获取会话. 参数如果为 true, 则当不存在会话时新建会话; 参数如果为 false, 则当不存在会话时返回 null"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Cookie[] getCookies()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回一个数组, 包含客户端发送该请求的所有的 Cookie 对象. 会自动把 Cookie 中的格式解析成键值对."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224338-lhk7vwu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224338-lhk7vwu"
			}
		},
		{
			"ID": "20221129224102-irrw8e7",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221129224102-irrw8e7",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "调用getSession的时候具体要做的事情"
				}
			]
		},
		{
			"ID": "20221129224102-u27i44u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-u27i44u",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "getSession"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "方法，既能用于获取到服务器上的会话,也能用于创建会话.具体行为，取决于参数."
				}
			]
		},
		{
			"ID": "20221129224102-r1cp9l0",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221129224102-r1cp9l0",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"ID": "20221129224101-bcz1siu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224101-bcz1siu",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-g8hnsoc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-g8hnsoc",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果参数为"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "true"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ":"
								}
							]
						},
						{
							"ID": "20221129224102-gtl0udx",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20221129224102-gtl0udx",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"ID": "20221129224101-1bizyyf",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221129224101-1bizyyf",
										"updated": "20221129224101"
									},
									"Children": [
										{
											"ID": "20221129224102-n2n60sf",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221129224102-n2n60sf",
												"updated": "20221129224102"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "会话不存在,则创建"
												}
											]
										}
									]
								},
								{
									"ID": "20221129224101-vdwgbts",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221129224101-vdwgbts",
										"updated": "20221129224101"
									},
									"Children": [
										{
											"ID": "20221129224102-a4xsdy9",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221129224102-a4xsdy9",
												"updated": "20221129224102"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "会话存在,则获取"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221129224101-fotu1wp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224101-fotu1wp",
						"updated": "20221129224101"
					},
					"Children": [
						{
							"ID": "20221129224102-g6lefuk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-g6lefuk",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果参数为"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "false"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ":"
								}
							]
						},
						{
							"ID": "20221129224102-od0d8fo",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20221129224102-od0d8fo",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"ID": "20221129224101-874jz76",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221129224101-874jz76",
										"updated": "20221129224101"
									},
									"Children": [
										{
											"ID": "20221129224102-x8rdro6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221129224102-x8rdro6",
												"updated": "20221129224102"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "会话不存在,则返回null"
												}
											]
										}
									]
								},
								{
									"ID": "20221129224101-uled4si",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20221129224101-uled4si",
										"updated": "20221129224101"
									},
									"Children": [
										{
											"ID": "20221129224102-f7ypq2n",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221129224102-f7ypq2n",
												"updated": "20221129224102"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "会话存在,则获取"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224344-gvixukc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224344-gvixukc"
			}
		},
		{
			"ID": "20221129224102-4gzrsxv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-4gzrsxv",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "1. 创建会话"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n首先先获取到请求中cookie里面的sessionld字段(相当于会话的身份标识)判定这个sessionld是否在当前服务器上存在, 如果不存在,则进入创建会话逻辑"
				}
			]
		},
		{
			"ID": "20221129224102-wuqlgpx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-wuqlgpx",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建会话,会创建一个HttpSession对象,并且生成一个sessionld (是一个很长的数字，通常是用十六进制来表示,能够保证唯一性)\n"
				}
			]
		},
		{
			"ID": "20221129224349-p9ozfyb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224349-p9ozfyb"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "接下来就会把这个sessionld 作为 key,把这个HttpSession对象，作为 value,把这个键值对,给保存到服务器内存的一个\"哈希表”这样的结构中"
				}
			]
		},
		{
			"ID": "20221129224102-1v60730",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221129224102-1v60730",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221129224102-eflsr9d",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221129224102-eflsr9d",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "实际的实现不一定真是Hash表,但是一定是类似的能够存储键值对的结构并且这个数据是在内存中的!!"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-5izgozv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-5izgozv",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "再然后,服务器就会返回一个HTTP响应，把 sessionld通过Set-Cookie 字段返回给浏览器.\n浏览器就可以保存这个sessionld 到Cookie中了."
				}
			]
		},
		{
			"ID": "20221129224357-end5bkx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224357-end5bkx"
			}
		},
		{
			"ID": "20221129224102-convi7s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-convi7s",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "2.获取会话"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n先获取到请求中的cookie里面的sessionld字段(也就是会话的身份标识)\n判定这个sessionld是否在当前服务器上存在(也就是在这个哈希表中是否有)\n如果有,就直接查询出这个HttpSession对象，并且通过返回值返回回去"
				}
			]
		},
		{
			"ID": "20221129224409-08ou07h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224409-08ou07h"
			}
		},
		{
			"ID": "20221129224102-03ndr3e",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221129224102-03ndr3e",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "调用getCookie的时候具体要做的事情"
				}
			]
		},
		{
			"ID": "20221129224102-fy0yxb9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-fy0yxb9",
				"updated": "20221129224408"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129141415"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129141415-20221129224408-cg2ca9t.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224415-likrba4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224415-likrba4"
			}
		},
		{
			"ID": "20221129224102-ct7us9t",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221129224102-ct7us9t",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HttpServletResponse 类中的相关方法"
				}
			]
		},
		{
			"ID": "20221129224102-yc0n7r2",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				1
			],
			"Properties": {
				"colgroup": "|",
				"id": "20221129224102-yc0n7r2",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "方法"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 1,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "void addCookie(Cookie cookie)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "把指定的 cookie 添加到响应中."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224429-fh2fpje",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221129224429-fh2fpje",
				"updated": "20221129224526"
			},
			"Children": [
				{
					"ID": "20221129224516-nxbted8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224516-nxbted8",
						"updated": "20221129224526"
					},
					"Children": [
						{
							"ID": "20221129224516-kqnjlsy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224516-kqnjlsy",
								"updated": "20221129224526"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "响应中就可以根据"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "addCookie()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "这个方法,来添加一个Cookie信息到响应报文中."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224441-eixcoyn",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221129224441-eixcoyn",
				"updated": "20221129224518"
			},
			"Children": [
				{
					"ID": "20221129224518-saznpj5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224518-saznpj5",
						"updated": "20221129224518"
					},
					"Children": [
						{
							"ID": "20221129224518-i9jeu5u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224518-i9jeu5u",
								"updated": "20221129224518"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这里添加进来的键值对,就会作为HTTP响应中的Set-Cookie字段来表示"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224442-qyazylr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224442-qyazylr"
			}
		},
		{
			"ID": "20221129224102-o5gw8lb",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221129224102-o5gw8lb",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HttpSession 类中的相关方法"
				}
			]
		},
		{
			"ID": "20221129224102-mu6o6tq",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				1
			],
			"Properties": {
				"colgroup": "|",
				"id": "20221129224102-mu6o6tq",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "一个 HttpSession 对象里面包含多个键值对. 我们可以往 HttpSession 中存任何我们需要的信息."
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 1
								}
							]
						},
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "方法"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 1,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Object getAttribute(String name)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该方法返回在该 session 会话中具有指定名称的对象，如果没有指定名称的对象，则返回 null."
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "void setAttribute(String name, Object value)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该方法使用指定的名称绑定一个对象到该 session 会话"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "boolean isNew()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "判定当前是否是新创建出的会话"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224539-qhwj5gp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224539-qhwj5gp"
			}
		},
		{
			"ID": "20221129224102-ifq27yw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221129224102-ifq27yw",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Cookie 类中的相关方法"
				}
			]
		},
		{
			"ID": "20221129224102-ziwoehc",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				1
			],
			"Properties": {
				"colgroup": "|",
				"id": "20221129224102-ziwoehc",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "每个 Cookie 对象就是一个键值对."
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 1
								}
							]
						},
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "方法"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 1,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String getName()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该方法返回 cookie 的名称。名称在创建后不能改变。(这个值是 Set-Cooke 字段设置给浏览器的)"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String getValue()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该方法获取与 cookie 关联的值"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "void setValue(String newValue)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "该方法设置与 cookie 关联的值。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-0haw8m2",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221129224102-0haw8m2",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"ID": "20221129224102-4sxjypb",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224102-4sxjypb",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"ID": "20221129224102-cesbc8u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-cesbc8u",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "HTTP 的 Cooke 字段中存储的实际上是多组键值对. 每个键值对在 Servlet 中都对应了一个 Cookie对象."
								}
							]
						}
					]
				},
				{
					"ID": "20221129224102-ku1ao72",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224102-ku1ao72",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"ID": "20221129224102-eh60hn4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-eh60hn4",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HttpServletRequest.getCookies()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "获取到"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "请求中"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的一系列 Cookie 键值对."
								}
							]
						}
					]
				},
				{
					"ID": "20221129224102-ah5i1ym",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224102-ah5i1ym",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"ID": "20221129224102-ohas60u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-ohas60u",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "HttpServletResponse.addCookie()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "可以向"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "响应中"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "添加新的 Cookie 键值对."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-tfnifip",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221129224102-tfnifip",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码示例: 网页登陆"
				}
			]
		},
		{
			"ID": "20221129224102-f0htcsr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-f0htcsr",
				"updated": "20221129224548"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "实现逻辑"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129141747"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129141747-20221129224548-4n96wnb.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224555-ybnxk9a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224555-ybnxk9a"
			}
		},
		{
			"ID": "20221129224102-t5rsdq3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-t5rsdq3",
				"updated": "20221129224553"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "登录交互"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129141852"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129141852-20221129224553-ii73mek.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224559-gcdmp1z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224559-gcdmp1z"
			}
		},
		{
			"ID": "20221129224102-03een2y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-03een2y",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "LoginServlet类"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-am8pr2u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221129224102-am8pr2u",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import javax.servlet.ServletException;  \nimport javax.servlet.annotation.WebServlet;  \nimport javax.servlet.http.HttpServlet;  \nimport javax.servlet.http.HttpServletRequest;  \nimport javax.servlet.http.HttpServletResponse;  \nimport javax.servlet.http.HttpSession;  \nimport java.io.IOException;  \n  \n@WebServlet(\"/login\")  \npublic class LoginServlet extends HttpServlet {  \n    @Override  \n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {  \n        // 处理用户请求  \n        String username = req.getParameter(\"username\");  \n        String password = req.getParameter(\"password\");  \n      \n        // 判定用户名或者密码是否正确~~  \n        // 正常来说这个判定操作是要放到数据库中进行存取的.  \n        // 此处为了简单, 就直接在代码里写死了. 假设有效的用户名和密码是 \"fmy\", \"123\"      \n        if (\"fmy\".equals(username) \u0026\u0026 \"123\".equals(password)) {  \n            // 登录成功!  \n            // 创建会话, 并保存必要的身份信息.  \n            HttpSession httpSession = req.getSession(true);  \n            // 往会话中存储键值对. 必要的身份信息  \n            httpSession.setAttribute(\"username\", username);  \n            // 初始情况下, 把登录次数设为 0          \n            httpSession.setAttribute(\"count\", 0);  //这里会将 0 自动装箱为Integer\n            resp.sendRedirect(\"index\");  \n        } else {  \n            // 登录失败!  \n            resp.getWriter().write(\"login failed!\");  \n        }  \n    }  \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221129224603-pdoms5i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224603-pdoms5i"
			}
		},
		{
			"ID": "20221129224102-ggw3oxy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-ggw3oxy",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "IndexServlet类"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-y4g7exi",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221129224102-y4g7exi",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import javax.servlet.ServletException;  \nimport javax.servlet.annotation.WebServlet;  \nimport javax.servlet.http.HttpServlet;  \nimport javax.servlet.http.HttpServletRequest;  \nimport javax.servlet.http.HttpServletResponse;  \nimport javax.servlet.http.HttpSession;  \nimport java.io.IOException;  \n  \n@WebServlet(\"/index\")  \npublic class IndexServlet extends HttpServlet {  \n    @Override  \n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {  \n        // 返回一个主页. (主页就是一个简单的 html 片段)  \n        // 此处需要得到用户名是啥, 从 HttpSession 中就能拿到.  \n        // 此处 getSession 的参数必须是 false. 前面在登录过程中, 已经创建过会话了. 此处是要直接获取到之前的会话.  \n        HttpSession session = req.getSession(false);  \n        String username = (String) session.getAttribute(\"username\");  \n        // 还从会话中取出 count.      \n        Integer count = (Integer) session.getAttribute(\"count\");  \n        count += 1;  \n      \n        // 把自增之后的值写回到会话中.  \n        session.setAttribute(\"count\", count);  \n  \n        resp.setContentType(\"text/html;charset=utf8\");  \n        resp.getWriter().write(\"\u003ch3\u003e欢迎你! \" + username + \" 这是第 \" + count + \" 次访问主页 \u003c/h3\u003e\");  \n    }  \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221129224102-pvs4bja",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-pvs4bja",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "login.html"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-uay7u4i",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221129224102-uay7u4i",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "aHRtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eDocument\u003c/title\u003e\n\u003c/head\u003e\n\n\u003cbody\u003e\n    \u003cform action=\"login\" method=\"post\"\u003e\n        \u003cinput type=\"text\" name=\"username\"\u003e\n        \u003cinput type=\"password\" name=\"password\"\u003e\n        \u003cinput type=\"submit\" value=\"登录\"\u003e\n    \u003c/form\u003e\n\n\u003c/body\u003e\n\n\u003c/html\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221129224102-0wgo5nh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-0wgo5nh",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "action"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的值就是构造请求的路径.\n如果值是"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "/login"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "表示这是一个绝对路径\n直接把"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "/login"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 作为请求中的路径了~~\n正确的做法,应该是在这里使用相对路径没有"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "/"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，光是一个"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "login"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n路径这个写法,哪里要加"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "/"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "    哪里不加"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "/"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "一定要多加注意"
				}
			]
		},
		{
			"ID": "20221129224102-8o458ba",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-8o458ba",
				"updated": "20221129224614"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "http://localhost:8080/ServletHelloWorld/login.html"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 中输入 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "fmy"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "123"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129145506"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129145506-20221129224614-ivxvre6.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-hzma2w5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-hzma2w5",
				"updated": "20221129224619"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129145520"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129145520-20221129224619-ufsbpfm.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-hvstk5k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-hvstk5k",
				"updated": "20221129224624"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129150247"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129150247-20221129224624-3gdoyu2.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224628-zutqzem",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224628-zutqzem"
			}
		},
		{
			"ID": "20221129224102-cixw2ch",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221129224102-cixw2ch",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上传文件"
				}
			]
		},
		{
			"ID": "20221129224102-syho5q8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-syho5q8",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上传文件也是日常开发中的一类常见需求. 在 Servlet 中也进行了支持."
				}
			]
		},
		{
			"ID": "20221129224635-u22lgun",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224635-u22lgun"
			}
		},
		{
			"ID": "20221129224102-62lek2v",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221129224102-62lek2v",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "核心方法"
				}
			]
		},
		{
			"ID": "20221129224102-8c0aiwy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221129224102-8c0aiwy",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "HttpServletRequest 类方法"
				}
			]
		},
		{
			"ID": "20221129224102-irw021u",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				1
			],
			"Properties": {
				"colgroup": "|",
				"id": "20221129224102-irw021u",
				"updated": "20221129224647"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "方法"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 1,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Part getPart(String name)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取请求中给定 name 的文件"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "Collection\u003cPart\u003e getParts()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取所有的文件"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224643-7hp0xro",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224643-7hp0xro",
				"updated": "20221129224644"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上传文件的时候,在前端需要用到form表单"
				}
			]
		},
		{
			"ID": "20221129224649-roprmc9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224649-roprmc9",
				"updated": "20221129224649"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "form表单中需要使用特殊的类型  "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "form-data"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-af77y1d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-af77y1d",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时提交文件的时候,浏览器就会把文件内容以"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "form-data"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的格式构造到HTTP请求中.服务器就可以通过"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "getPart()"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来获取了"
				}
			]
		},
		{
			"ID": "20221129224637-tctvmaa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224637-tctvmaa"
			}
		},
		{
			"ID": "20221129224102-vp1d5z1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221129224102-vp1d5z1",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Part 类方法"
				}
			]
		},
		{
			"ID": "20221129224102-sk029ay",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				1
			],
			"Properties": {
				"colgroup": "|",
				"id": "20221129224102-sk029ay",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "方法"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 1,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "描述"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String getSubmittedFileName()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取提交的文件名"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "String getContentType()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取提交的文件类型"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "long getSize()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "获取文件的大小"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "void write(String path)"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "把提交的文件数据写入磁盘文件"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-m3jkh6x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-m3jkh6x",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一个HTTP请求,可以一次性的提交多个文件的"
				}
			]
		},
		{
			"ID": "20221129224102-vttx5u3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-vttx5u3",
				"updated": "20221129224714"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "每个文件都称为一个"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Part"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n每个Part 都有一个name(身份标识)\n服务器代码中就可以根据name找到对应的Part\n基于这个Part就可以进一步的获取到文件信息,并进行下一阶段操作"
				}
			]
		},
		{
			"ID": "20221129224718-76mqjf8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224718-76mqjf8"
			}
		},
		{
			"ID": "20221129224102-fg61n5z",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221129224102-fg61n5z",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码案例"
				}
			]
		},
		{
			"ID": "20221129224102-8wefmjg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-8wefmjg",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现程序, 通过网页提交一个图片到服务器上."
				}
			]
		},
		{
			"ID": "20221129224102-brxfdfq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-brxfdfq",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "1. 创建 upload.html, 放到 webapp 目录中."
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-rsjdu5m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221129224102-rsjdu5m",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "aHRtbA=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cform action=\"upload\" method=\"post\" enctype=\"multipart/form-data\"\u003e\n\t   \u003cinput type=\"file\" name=\"MyImage\"\u003e\n\t   \u003cinput type=\"submit\" value=\"提交图片\"\u003e\n\u003c/form\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221129224102-z3izxks",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221129224102-z3izxks",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"ID": "20221129224102-jwoyej6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224102-jwoyej6",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"ID": "20221129224102-3i25657",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-3i25657",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "上传文件一般通过 POST 请求的表单实现."
								}
							]
						}
					]
				},
				{
					"ID": "20221129224102-3z43jwh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224102-3z43jwh",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"ID": "20221129224102-8uqe9f5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-8uqe9f5",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 form 中要加上   "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "multipart/form-data"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 字段."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-5ud65pa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-5ud65pa",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上传文件的时候,在前端需要用到form表单\nform表单中需要使用特殊的类型  "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "form-data"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-0011d65",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-0011d65",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时提交文件的时候,浏览器就会把文件内容以"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "form-data"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的格式构造到HTTP请求中.服务器就可以通过"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "getPart()"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来获取了"
				}
			]
		},
		{
			"ID": "20221129224722-fusxatq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224722-fusxatq"
			}
		},
		{
			"ID": "20221129224102-hbdejv2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-hbdejv2",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "2. 创建 UploadServlet 类"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-ijj01nr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221129224102-ijj01nr",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import javax.servlet.ServletException;\nimport javax.servlet.annotation.MultipartConfig;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.Part;\nimport java.io.IOException;\n\n@MultipartConfig\n@WebServlet(\"/upload\")\npublic class UploadServlet extends HttpServlet {\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        Part part = req.getPart(\"MyImage\");\n        System.out.println(part.getSubmittedFileName());\n        System.out.println(part.getContentType());\n        System.out.println(part.getSize());\n        part.write(\"S:\\images/123.png\");// 写到该目录中，可对文件进行修改，现在的文件名就是aaa.jpg\n        resp.setContentType(\"text/html; charset=utf8\");\n        resp.getWriter().write(\"上传成功!\");\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221129224102-77k5gan",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221129224102-77k5gan",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"ID": "20221129224102-hsyzq92",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224102-hsyzq92",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"ID": "20221129224102-cs67fme",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-cs67fme",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "需要给UploadServlet加上"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "@Multipartconfig"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "注解.否则服务器代码无法使用"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "getPart()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "方法"
								}
							]
						}
					]
				},
				{
					"ID": "20221129224102-zb98vk3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224102-zb98vk3",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"ID": "20221129224102-wcks7av",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-wcks7av",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "getPart()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的参数需要和form中input标签的name属性对应."
								}
							]
						}
					]
				},
				{
					"ID": "20221129224102-cjfngqm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221129224102-cjfngqm",
						"updated": "20221129224102"
					},
					"Children": [
						{
							"ID": "20221129224102-p91ibz9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221129224102-p91ibz9",
								"updated": "20221129224102"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "客户端一次可以提交多个文件.(使用多个input标签).此时服务器可以通过"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "getParts"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 获取所有的Part对象."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-t1vcaoi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-t1vcaoi",
				"updated": "20221129224730"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129153506"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129153506-20221129224730-njv13v9.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-m9s2ggt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-m9s2ggt",
				"updated": "20221129224737"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "部署程序, 在浏览器中通过 URL "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "http://localhost:8080/ServletHelloWorld/upload.html"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 访问\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129154213"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129154213-20221129224737-wqajho2.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221129224102-e0q7lka",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-e0q7lka",
				"updated": "20221129224744"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129154318"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129154318-20221129224744-93cnhio.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221129224102-vmor57t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-vmor57t",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时可以看到服务器端的打印日志"
				}
			]
		},
		{
			"ID": "20221129224102-v8icgkw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221129224102-v8icgkw",
				"updated": "20221129224102"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "df69b2b0f6d22f69a4698b7e7762e77.png\nimage/png\n2521596\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221129224102-8ca3w1e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-8ca3w1e",
				"updated": "20221129224752"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同时在 s 盘中生成了 123.png\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129154557"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129154557-20221129224752-3g5320a.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		},
		{
			"ID": "20221129224102-2xybcub",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221129224102-2xybcub",
				"updated": "20221129224758"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "抓包时可以发现\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221129154756"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221129154756-20221129224758-ja48y64.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeBr",
					"Data": "br"
				}
			]
		}
	]
}