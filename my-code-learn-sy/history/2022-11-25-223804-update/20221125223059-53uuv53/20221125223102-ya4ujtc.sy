{
	"ID": "20221125223102-ya4ujtc",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20221125223102-ya4ujtc",
		"title": "js基础语法",
		"updated": "20221125223801"
	},
	"Children": [
		{
			"ID": "20221125223114-2w5exyr",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221125223114-2w5exyr",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第一个程序"
				}
			]
		},
		{
			"ID": "20221125223114-u5lq4dr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-u5lq4dr",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cscript\u003e\n    alert(\"你好!\"); \n\u003c/script\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-9om6pr0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-9om6pr0",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JavaScript 代码可以嵌入到 HTML 的 script 标签中."
				}
			]
		},
		{
			"ID": "20221125223120-8hlrg85",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223120-8hlrg85"
			}
		},
		{
			"ID": "20221125223114-skghidl",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221125223114-skghidl",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JavaScript 的书写形式"
				}
			]
		},
		{
			"ID": "20221125223114-2cu3si0",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-2cu3si0",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "行内式"
				}
			]
		},
		{
			"ID": "20221125223114-86mdu87",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-86mdu87",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "直接嵌入到 html 元素内部"
				}
			]
		},
		{
			"ID": "20221125223114-ha08s4y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-ha08s4y",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cinput type=\"button\" value=\"点我一下\" onclick=\"alert('haha')\"\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-ot47wxw",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-ot47wxw",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-lw0bqm9",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-lw0bqm9",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "注意, JS 中字符串常量可以使用单引号表示, 也可以  使用双引号表示.\nHTML 中推荐使用双引号, JS 中推荐使用单引号."
						}
					]
				}
			]
		},
		{
			"ID": "20221125223145-v8u936a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223145-v8u936a"
			}
		},
		{
			"ID": "20221125223114-1tgt121",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-1tgt121",
				"updated": "20221125223143"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "内嵌式"
				}
			]
		},
		{
			"ID": "20221125223114-sa99o1f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-sa99o1f",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "写到script标签中"
				}
			]
		},
		{
			"ID": "20221125223114-ff3x0c6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-ff3x0c6",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cscript\u003e\n    alert(\"haha\"); \n\u003c/script\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-i6aluyy",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-i6aluyy",
				"updated": "20221125223148"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "外部式"
				}
			]
		},
		{
			"ID": "20221125223114-zfltjzn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-zfltjzn",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "把js 写到一个单独的"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": ".js"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "文件中.在html里面通过script来引入"
				}
			]
		},
		{
			"ID": "20221125223114-8om4wl4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-8om4wl4",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cscript src=\"hello.js\"\u003e\u003c/script\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-jps75s5",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-jps75s5",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-8gffei2",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-8gffei2",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "注意, 这种情况下 script 标签中间不能写代码. 必须空着(写了代码也不会执行).\n适合代码多的情况."
						}
					]
				}
			]
		},
		{
			"ID": "20221125223151-ptx0p1z",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223151-ptx0p1z"
			}
		},
		{
			"ID": "20221125223114-qdclhjb",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221125223114-qdclhjb",
				"updated": "20221125223150"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "js注释"
				}
			]
		},
		{
			"ID": "20221125223114-1bn3m6l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-1bn3m6l",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "单行注释 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "// 内容"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "  [建议使用]\n多行注释 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "/* 内容 */"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223153-cueexxm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223153-cueexxm"
			}
		},
		{
			"ID": "20221125223114-bn5dcqm",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221125223114-bn5dcqm",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输入输出"
				}
			]
		},
		{
			"ID": "20221125223114-j88t0hd",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-j88t0hd",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输入: prompt"
				}
			]
		},
		{
			"ID": "20221125223114-j2paqtf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-j2paqtf",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "弹出一个输入框"
				}
			]
		},
		{
			"ID": "20221125223114-t1n8hti",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-t1n8hti",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 弹出一个输入框 \nprompt(\"请输入您的姓名:\");\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-rrk9ri7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-rrk9ri7",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": " "
				}
			]
		},
		{
			"ID": "20221125223114-32k75wo",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-32k75wo",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出: alert"
				}
			]
		},
		{
			"ID": "20221125223114-t8avbfe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-t8avbfe",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "弹出一个警示对话框, 输出结果"
				}
			]
		},
		{
			"ID": "20221125223114-45o7fyh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-45o7fyh",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 弹出一个输出框 \nalert(\"hello\");\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-t2daxye",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-t2daxye",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": " "
				}
			]
		},
		{
			"ID": "20221125223114-nn03jjp",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-nn03jjp",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输出: console.log"
				}
			]
		},
		{
			"ID": "20221125223114-mr106lh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-mr106lh",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在控制台打印一个日志(供程序员看),在浏览器中使用F12即可进入控制台。"
				}
			]
		},
		{
			"ID": "20221125223114-dynkld5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-dynkld5",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 向控制台输出日志\nconsole.log(\"这是一条日志\");\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-ij7snul",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-ij7snul",
				"updated": "20221125223336"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221116131218"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221116131218-20221125223336-e491qy8.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223338-5gzz00h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223338-5gzz00h"
			}
		},
		{
			"ID": "20221125223114-wefzygc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-wefzygc",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重要概念: 日志"
				}
			]
		},
		{
			"ID": "20221125223114-jgneqtt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-jgneqtt",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "日志是程序员调试程序的重要手段"
				}
			]
		},
		{
			"ID": "20221125223114-qv9kcc5",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-qv9kcc5",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-gjqf8so",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20221125223114-gjqf8so",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-jlj4vgm",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221125223114-jlj4vgm",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"ID": "20221125223114-t88t7mu",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221125223114-t88t7mu",
										"updated": "20221125223114"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "去医院看病, 医生会让患者做各种检查, 血常规, 尿常规, B超, CT等... 此时得到一堆检测结果. 这些结果普通人看不懂, 但是医生能看懂, 并且医生要通过这些信息来诊断病情."
										}
									]
								}
							]
						},
						{
							"ID": "20221125223114-lickqqk",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221125223114-lickqqk",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"ID": "20221125223114-kqnc6zh",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221125223114-kqnc6zh",
										"updated": "20221125223114"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "这些检测结果就是医生的 \"日志\""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-wyyqdbn",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-wyyqdbn",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-v6p61fu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-v6p61fu",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-ium0tfw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-ium0tfw",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "PS: 相比于医生来说, 程序猿多一个终极大招, \"重启下试试\"."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-oby5wtw",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-oby5wtw",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重要概念: ."
				}
			]
		},
		{
			"ID": "20221125223114-9gqpwfj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-9gqpwfj",
				"updated": "20221125223345"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "console"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 是一个 js 中的 \"对象\"\n"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "."
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 表示取对象中的某个属性或者方法. 可以直观理解成 \"的\"\n"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "console.log"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 就可以理解成: 使用 \"控制台\" 对象 \"的\" "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "log"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 方法."
				}
			]
		},
		{
			"ID": "20221125223343-u4by4tk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223343-u4by4tk"
			}
		},
		{
			"ID": "20221125223114-zl7id59",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221125223114-zl7id59",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "语法概述"
				}
			]
		},
		{
			"ID": "20221125223114-en2hnl1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-en2hnl1",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "变量的使用"
				}
			]
		},
		{
			"ID": "20221125223114-jv0girv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-jv0girv",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基本用法"
				}
			]
		},
		{
			"ID": "20221125223114-o3z3wjg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-o3z3wjg",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建变量(变量定义/变量声明/变量初始化),可以使用 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "var"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "let"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "关键字来进行创建变量\n"
				},
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "JS中var和let的区别"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://blog.csdn.net/weixin_43108539/article/details/108514200"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-ys259tj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-ys259tj",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var name = 'zhangsan'; \nvar age = 20;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-6bem6g9",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-6bem6g9",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-vcmwzxc",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-vcmwzxc",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "var 是 JS 中的关键字, 表示这是一个变量.\n= 在 JS 中表示 \"赋值\", 相当于把数据放到内存的盒子中.  = 两侧建议有一个空格\n每个语句最后带有一个 ; 结尾. JS 中可以省略 ; 但是建议还是加上.\n注意, 此处的 ; 为英文分号. JS 中所有的标点都是英文标点.\n初始化的值如果是字符串, 那么就要使用单引号或者双引号引起来.初始化的值如果是数字, 那么直接赋值即可."
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-defpqbl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-defpqbl",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用变量"
				}
			]
		},
		{
			"ID": "20221125223114-t745l0z",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-t745l0z",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "console.log(age); // 读取变量内容 \nage = 30;         // 修改变量内容\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-m32wig2",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-m32wig2",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-8n9itxd",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-8n9itxd",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "为啥动漫中的角色都是要先喊出技能名字再真正释放技能?\n就是因为变量要先声明才能使用."
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-wkozlzo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-wkozlzo",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "代码示例"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ": 弹框提示用户输入信息, 再弹框显示."
				}
			]
		},
		{
			"ID": "20221125223114-czf3wnw",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-czf3wnw",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var name = prompt(\"请输入姓名:\");\nvar age = prompt(\"请输入年龄:\");\nvar score = prompt(\"请输入分数\");\nalert(\"您的姓名是: \" + name);\nalert(\"您的年龄是: \" + age);\nalert(\"您的分数是: \" + score);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-ro7r9bv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-ro7r9bv",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "也可以把三个输出内容合并成一次弹框"
				}
			]
		},
		{
			"ID": "20221125223114-wq3948s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-wq3948s",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var name = prompt(\"请输入姓名:\");\nvar age = prompt(\"请输入年龄:\");\nvar score = prompt(\"请输入分数\");\nalert(\"您的姓名是: \" + name + \"\\n\" + \"您的年龄是: \" + age + \"\\n\" + \"您的分数是: \" + \nscore + \"\\n\");\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-ybk0w8n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-ybk0w8n",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "+"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 表示字符串拼接, 也就是把两个字符串首尾相接变成一个字符串.\n"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\\n"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 表示换行"
				}
			]
		},
		{
			"ID": "20221125223114-kx2cyzr",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-kx2cyzr",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-xmk5qbw",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-xmk5qbw",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "小语法糖"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\n"
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "prompt"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "前可以加一个 "
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "+"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " ,可以把我们接收到的"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "数字字符串变量 转化为 数值型变量"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "。\n"
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "var age = +prompt(\"请输入年龄:\")"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "  此时的age接收到的就是数值型的数据了。"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223356-7z3m9n0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223356-7z3m9n0"
			}
		},
		{
			"ID": "20221125223114-k540n7f",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-k540n7f",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "理解动态类型"
				}
			]
		},
		{
			"ID": "20221125223114-67f25rp",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221125223114-67f25rp",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-6sd57qe",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20221125223114-6sd57qe",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-e7jxpab",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-e7jxpab",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JS 的变量类型是程序运行过程中才确定的(运行到 = 语句才会确定类型)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-efq837x",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-efq837x",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var a = 10;     // 数字 \nvar b = \"hehe\"; // 字符串\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-n6w7vua",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-n6w7vua",
				"updated": "20221125223425"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": " \n2. 随着程序运行, 变量的类型可能会发生改变."
				}
			]
		},
		{
			"ID": "20221125223114-pxmshvq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-pxmshvq",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var a = 10;    // 数字 \na = \"hehe\";    // 字符串\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-ztgb943",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-ztgb943",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这一点和 C Java 这种静态类型语言差异较大."
				}
			]
		},
		{
			"ID": "20221125223114-gidcs5u",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-gidcs5u",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-qycqy6d",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-qycqy6d",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "C, C++, Java, Go 等语言是"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "静态类型语言"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": ". 一个变量在创建的时候类型就确定了, 不能在运行时发生改变.\n如果尝试改变, 就会直接编译报错."
						}
					]
				}
			]
		},
		{
			"ID": "20221125223433-a6n619d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223433-a6n619d"
			}
		},
		{
			"ID": "20221125223114-fvr2x3g",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-fvr2x3g",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "静态类型和动态类型的比较"
				}
			]
		},
		{
			"ID": "20221125223114-mg8p20w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-mg8p20w",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在2022这样的视角来看待,静态类型阵营,完胜!!!\n现在业界基本达成共识:认为静态类型比动态类型更好~"
				}
			]
		},
		{
			"ID": "20221125223114-fmop4nj",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-fmop4nj",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-xuk54wk",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20221125223114-xuk54wk",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-9cs204h",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221125223114-9cs204h",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"ID": "20221125223114-ewcrssb",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221125223114-ewcrssb",
										"updated": "20221125223114"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "静态类型,编译器就可以做更多的检查,让有些错误,提前被发现了.开发工具(IDE),也可以基于类型做更多的分析,提供更加丰富的支持～"
										}
									]
								}
							]
						},
						{
							"ID": "20221125223114-nvl4wbd",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221125223114-nvl4wbd",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"ID": "20221125223114-nvoxa4m",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221125223114-nvoxa4m",
										"updated": "20221125223114"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "动态类型也有自己的好处.写一个函数,就可以同时支持多种不同的类型参数.(完全不需要\"重载\"/\"泛型\"这样的语法),但是虽然有这个优势,整体来说,还是弊大于利了."
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223439-2tfgcut",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223439-2tfgcut"
			}
		},
		{
			"ID": "20221125223114-8v6txpr",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221125223114-8v6txpr",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基本数据类型"
				}
			]
		},
		{
			"ID": "20221125223114-dg36kdc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-dg36kdc",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": " JS 中内置的几种类型"
				}
			]
		},
		{
			"ID": "20221125223114-ot8ccs2",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-ot8ccs2",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-w5tq7ft",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-w5tq7ft",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-muim51u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-muim51u",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "number: 数字. 不区分整数和小数."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-sqmqqbb",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-sqmqqbb",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-10x9766",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-10x9766",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "boolean: true 真, false 假."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-lyy300h",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-lyy300h",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-0rtckyf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-0rtckyf",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "string: 字符串类型."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-wrh6xs8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-wrh6xs8",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-kh351jx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-kh351jx",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "undefined: 只有唯一的值 undefined. 表示未定义的值."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-7urwonx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-7urwonx",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-89ajeuo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-89ajeuo",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "null: 只有唯一的值 null. 表示空值."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-ntettee",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-ntettee",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-yx237cl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-yx237cl",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "NaN: 表示 Not a number , 不是一个数字;"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223444-3bwkghq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223444-3bwkghq"
			}
		},
		{
			"ID": "20221125223114-hagq0ct",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-hagq0ct",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "number 数字类型"
				}
			]
		},
		{
			"ID": "20221125223114-tu7cxxc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-tu7cxxc",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JS 中不区分整数和浮点数, 统一都使用 \"数字类型\" 来表示."
				}
			]
		},
		{
			"ID": "20221125223442-9bweyx7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223442-9bweyx7"
			}
		},
		{
			"ID": "20221125223114-7thoyob",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-7thoyob",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数字进制表示"
				}
			]
		},
		{
			"ID": "20221125223114-rx91gyn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-rx91gyn",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "计算机中都是使用二进制来表示数据, 而人平时都是使用十进制.\n因为二进制在使用过程中不太方便(01太多会看花眼).\n所以在日常使用二进制数字时往往使用 八进制 和 十六进制 来表示二进制数字."
				}
			]
		},
		{
			"ID": "20221125223114-paat8rg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-paat8rg",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var a = 07;      // 八进制整数, 以 0 开头\nvar b = 0xa;     // 十六进制整数, 以 0x 开头\nvar c = 0b10;    // 二进制整数, 以 0b 开头\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-ljk3siq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-ljk3siq",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意:"
				}
			]
		},
		{
			"ID": "20221125223114-saqgu8l",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-saqgu8l",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-4pw55oi",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-4pw55oi",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-thr6jbq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-thr6jbq",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个八进制数字对应三个二进制数字"
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-xx6u49c",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-xx6u49c",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-838xj65",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-838xj65",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个十六进制数字对应四个二进制数字. (两个十六进制数字就是一个字节)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-jddykif",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-jddykif",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "各种进制之间的转换, 不需要手工计算, 直接使用计算器即可."
				}
			]
		},
		{
			"ID": "20221125223451-i3a75fq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223451-i3a75fq"
			}
		},
		{
			"ID": "20221125223114-119ebni",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-119ebni",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "特殊的数字值"
				}
			]
		},
		{
			"ID": "20221125223114-3sj23zr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-3sj23zr",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "Infinity"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ": 无穷大, 大于任何数字. 表示数字已经超过了 JS 能表示的范围.\n"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "-Infinity"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ": 负无穷大, 小于任何数字. 表示数字已经超过了 JS 能表示的范围.\n"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "NaN"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ": 表示当前的结果不是一个数字."
				}
			]
		},
		{
			"ID": "20221125223114-5bbto73",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-5bbto73",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var max = Number.MAX_VALUE; \n// 得到 Infinity\nconsole.log(max * 2); \n\n// 得到 -Infinity \nconsole.log(-max * 2);\n\n// 得到 NaN\nconsole.log('hehe' - 10);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-0ww3k5w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-0ww3k5w",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意:"
				}
			]
		},
		{
			"ID": "20221125223114-qaa82z8",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221125223114-qaa82z8",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-649bk6o",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20221125223114-649bk6o",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-1x4obdl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-1x4obdl",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "负无穷大"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "  和  "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "无穷小"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "  不是一回事. 无穷小指无限趋近与 "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "0"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ",  值为   "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "1 / Infinity"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-l3n1mnn",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20221125223114-l3n1mnn",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-yrpryp3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-yrpryp3",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "'hehe' + 10"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 得到的不是 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "NaN"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", 而是 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "'hehe10'"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", 会把"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "数字隐式转成字符串, 再进行字符串拼接"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-nhbl7rx",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20221125223114-nhbl7rx",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-61m800q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-61m800q",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以使用 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "isNaN()"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 函数判定是不是一个非数字."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-ddl6fl4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-ddl6fl4",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "console.log(isNaN(10));  // false \nconsole.log(isNaN('hehe' - 10));  // true\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223500-ecgbx69",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223500-ecgbx69"
			}
		},
		{
			"ID": "20221125223114-8b0f3at",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-8b0f3at",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "string 字符串类型"
				}
			]
		},
		{
			"ID": "20221125223114-rpt2zm8",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-rpt2zm8",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基本规则"
				}
			]
		},
		{
			"ID": "20221125223114-s29n0mx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-s29n0mx",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字符串字面值需要使用引号引起来, 单引号双引号均可."
				}
			]
		},
		{
			"ID": "20221125223114-c2v8kus",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-c2v8kus",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var a = \"haha\";\nvar b = 'hehe';\nvar c = hehe;    // 运行出错\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223507-eqm3vih",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223507-eqm3vih"
			}
		},
		{
			"ID": "20221125223114-4iiy2fm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-4iiy2fm",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果字符串中本来已经包含了引号咋办？可以使用单双引号进行搭配，此时也就可以不使用转义字符了。"
				}
			]
		},
		{
			"ID": "20221125223114-ab72i28",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-ab72i28",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var msg = \"My name is \"zhangsan\"\";    // 出错\nvar msg = \"My name is \\\"zhangsan\\\"\";  // 正确, 使用转义字符. \\\" 来表示字符串内部的引号.\nvar msg = \"My name is 'zhangsan'\";    // 正确, 搭配使用单双引号 \nvar msg = 'My name is \"zhangsan\"';    // 正确, 搭配使用单双引号\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-ffg9qht",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-ffg9qht",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "求字符串长度"
				}
			]
		},
		{
			"ID": "20221125223114-q1ldhgr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-q1ldhgr",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 String 的 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "length"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 属性即可 , "
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "单位为"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "字符"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "的数量"
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-n8fszgz",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-n8fszgz",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var a = 'hehe'; \nconsole.log(a.length); // 4\n\nvar b = '哈哈'; \nconsole.log(b.length); // 2\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223513-5pgobfk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223513-5pgobfk"
			}
		},
		{
			"ID": "20221125223114-ehtxxnm",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-ehtxxnm",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "字符串拼接"
				}
			]
		},
		{
			"ID": "20221125223114-199my3e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-199my3e",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 + 进行拼接"
				}
			]
		},
		{
			"ID": "20221125223114-bb9i2jk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-bb9i2jk",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var a = \"my name is \"; \nvar b = \"zhangsan\"; \nconsole.log(a + b); // 'my name is zhangsan'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-3asvz5t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-3asvz5t",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意, 数字和字符串也可以进行拼接"
				}
			]
		},
		{
			"ID": "20221125223114-fjk4kb6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-fjk4kb6",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var c = \"my score is \"; \nvar d = 100;\nconsole.log(c + d);// 'my score is 100'\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-g49qhpk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-g49qhpk",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意, 要认准相加的变量到底是字符串还是数字"
				}
			]
		},
		{
			"ID": "20221125223114-eza9j8q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-eza9j8q",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "console.log(100 + 100);     // 200 \nconsole.log('100' + 100);   // 100100\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223517-e40spiq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223517-e40spiq"
			}
		},
		{
			"ID": "20221125223114-5giy282",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-5giy282",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "boolean 布尔类型"
				}
			]
		},
		{
			"ID": "20221125223114-d10okgz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-d10okgz",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "表示 \"真\" 和 \"假\""
				}
			]
		},
		{
			"ID": "20221125223114-n0slq0y",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-n0slq0y",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-ej1m1cj",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-ej1m1cj",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "boolean 原本是数学中的概念 (布尔代数).\n在计算机中 boolean 意义重大, 往往要搭配条件/循环完成逻辑判断."
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-w9u21nq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-w9u21nq",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Boolean 参与运算时当做 1 和 0 来看待."
				}
			]
		},
		{
			"ID": "20221125223114-nx424z0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-nx424z0",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "console.log(true + 1);  // 2\nconsole.log(false + 1); // 1\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-v9l5bdw",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-v9l5bdw",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-jn963cp",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-jn963cp",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "JS中的true就被当成1来处理了.这种\"隐式类型转换\"设定方式,认为其实并不科学!!"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-tlwcuq2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-tlwcuq2",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "undefined 未定义数据类型"
				}
			]
		},
		{
			"ID": "20221125223114-hfm8io1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-hfm8io1",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "==在实际开发中,不应该主动使用undefined，更不应该依赖undefined ==."
				}
			]
		},
		{
			"ID": "20221125223114-5jubtsf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-5jubtsf",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果一个变量没有被初始化过, 结果就是 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "undefined"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ", 是 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "undefined"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 类型"
				}
			]
		},
		{
			"ID": "20221125223114-14lir1r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-14lir1r",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var a; \nconsole.log(a)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223523-s418gdx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223523-s418gdx"
			}
		},
		{
			"ID": "20221125223114-z9xe41e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-z9xe41e",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "undefined"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 和字符串进行相加, 结果进行字符串拼接"
				}
			]
		},
		{
			"ID": "20221125223114-86gn76x",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-86gn76x",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "console.log(a + \"10\");  // undefined10\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223524-wp3t9hr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223524-wp3t9hr"
			}
		},
		{
			"ID": "20221125223114-ax8elj0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-ax8elj0",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "undefined"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 和数字进行相加, 结果为 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "NaN"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-74v8i1t",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-74v8i1t",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "console.log(a + 10); // NaN\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-xx0w6an",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-xx0w6an",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "null 空值类型"
				}
			]
		},
		{
			"ID": "20221125223114-6sdlv49",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-6sdlv49",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "null 表示当前的变量是一个 \"空值\"."
				}
			]
		},
		{
			"ID": "20221125223114-151y8b2",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-151y8b2",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "ar b = null;\nconsole.log(b + 10);    // 10 \nconsole.log(b + \"10\");  // null10\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-9ztbkre",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-9ztbkre",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-xf8uhbt",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-xf8uhbt",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "注意:"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\n"
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "null"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " 和 "
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "undefined"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " 都表示取值非法的情况, 但是侧重点不同.\n"
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "null"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " 表示当前的值为空. (相当于有一个空的盒子)\n"
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "undefined"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " 表示当前的变量未定义. (相当于连盒子都没有)"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-1qyxujv",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221125223114-1qyxujv",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运算符"
				}
			]
		},
		{
			"ID": "20221125223114-imoj1jz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-imoj1jz",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JavaScript 中的运算符和 Java 用法基本相同. 此处不做详细介绍了.此次只介绍几个和 Java 和 C++不一样的运算符。"
				}
			]
		},
		{
			"ID": "20221125223114-59ghpdp",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-59ghpdp",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "算术运算符"
				}
			]
		},
		{
			"ID": "20221125223114-14n0hra",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-14n0hra",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "/"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 和C++与Java语言有一些不同 ,JS中,不区分整数和小数.都是number， 所以是能得到小数的。"
				}
			]
		},
		{
			"ID": "20221125223114-3tvmewk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-3tvmewk",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "console.log(3 / 2); // 1.5\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-l40e1yl",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-l40e1yl",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "比较运算符"
				}
			]
		},
		{
			"ID": "20221125223114-fefz46x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-fefz46x",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "=="
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "  和 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "!="
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 只是比较两个变量的值,而不比较两个变量的类型.如果两个变量能够通过隐式类型转换,转成相同的值,此时就认为，也是相等的~~"
				}
			]
		},
		{
			"ID": "20221125223114-k10foz5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-k10foz5",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "!=="
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "==="
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 既要比较变量的值,也要比较类型.如果类型不相同,就直接认为不相等."
				}
			]
		},
		{
			"ID": "20221125223114-lnr661q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-lnr661q",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "let a  = 10 ; \nlet b = '10';\n\nconsole.log( a == b ); //true\nconsole.log( a ===  b ); //false\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-zohuj1x",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-zohuj1x",
				"updated": "20221125223537"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221116132551"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221116132551-20221125223537-xnq1tda.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223539-3vqb5u1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223539-3vqb5u1"
			}
		},
		{
			"ID": "20221125223114-4mppn9v",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-4mppn9v",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "逻辑运算符"
				}
			]
		},
		{
			"ID": "20221125223114-hvvidiq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-hvvidiq",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JS中"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\u0026\u0026"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "和"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "||"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " ， 和Java与C++是不同的。"
				}
			]
		},
		{
			"ID": "20221125223114-eshnfte",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-eshnfte",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JS中的"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "||"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "符号："
				}
			]
		},
		{
			"ID": "20221125223114-xtosbpt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-xtosbpt",
				"updated": "20221125223606"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运算方法：\n     只要“"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "||"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "”前面为false,不管“"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "||"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "”后面是true还是false，都返回“"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "||"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "”后面的值。\n     只要“"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "||"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "”前面为true,不管“"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "||"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "”后面是true还是false，都返回“"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "||"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "”前面的值。"
				}
			]
		},
		{
			"ID": "20221125223609-ehgpx4l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223609-ehgpx4l"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "\n总结："
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "真前假后"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-y0913xs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-y0913xs",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "逻辑或"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": " ||"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "  ："
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "var a = 表达式1 || 表达式2"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-xxxjn2q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-xxxjn2q",
				"updated": "20221125223719"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "　　　表达式1　　　　表达式2　　　　a取值\n　　    1    　　　　　    0　　　　　　表达式1结果值\n　　　1　　　　　　　 1　　　　　　表达式1结果值\n　　    0　　　　　　　 1　　　　　　表达式2结果值\n　　　0　　　　　　　 0　　　　　　表达式2结果值"
				}
			]
		},
		{
			"ID": "20221125223725-tuw3fhs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223725-tuw3fhs"
			}
		},
		{
			"ID": "20221125223114-de305d2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-de305d2",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JS中的"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\u0026\u0026"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "符号："
				}
			]
		},
		{
			"ID": "20221125223114-0wscrb3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-0wscrb3",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运算方法："
				}
			]
		},
		{
			"ID": "20221125223114-nxuabkl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-nxuabkl",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "     只要“\u0026\u0026”前面是false，无论“\u0026\u0026”后面是true还是false，结果都将返“\u0026\u0026”前面的值;\n     只要“\u0026\u0026”前面是true，无论“\u0026\u0026”后面是true还是false，结果都将返“\u0026\u0026”后面的值;\n总结："
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "假前真后"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-qibk7dz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-qibk7dz",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "逻辑与 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "\u0026\u0026"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "  ： "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "var a = 表达式1 \u0026\u0026 表达式2"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-962wtak",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-962wtak",
				"updated": "20221125223739"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "　　　表达式1　　　　表达式2　　　　a取值\n　　　　  1    　　　　　 0　　　　　　表达式2结果值    　　　　　      "
				}
			]
		},
		{
			"ID": "20221125223740-nnkul4k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223740-nnkul4k",
				"updated": "20221125223801"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "                 1　　　　　　1　　　　　　表达式2结果值\n　　　　 0　　　　　　 1　　　　　　表达式1结果值\n　　　　0　　　　　　 0　　　　　　表达式1结果值"
				}
			]
		},
		{
			"ID": "20221125223114-8tixi6x",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221125223114-8tixi6x",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "条件语句"
				}
			]
		},
		{
			"ID": "20221125223114-w9ulmt0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-w9ulmt0",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "内容和其他C++与java是一致的"
				}
			]
		},
		{
			"ID": "20221125223114-uco4jqg",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221125223114-uco4jqg",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组"
				}
			]
		},
		{
			"ID": "20221125223114-r05e44w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-r05e44w",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JS 的数组和 Java 和C++的差别是十分巨大的，\nJava这里定义数组的时候, "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "int[]"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "类型~~\nJava针对数组初始化,使用的"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "{}"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " , 而JS使用"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "[]"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-gkto7gk",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-gkto7gk",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建数组"
				}
			]
		},
		{
			"ID": "20221125223114-0hwxneo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-0hwxneo",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "new"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 关键字创建"
				}
			]
		},
		{
			"ID": "20221125223114-ze1lxru",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-ze1lxru",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// Array 的 A 要大写 \nvar arr = new Array();\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-ieqi56f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-ieqi56f",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用字面量方式创建 [常用]"
				}
			]
		},
		{
			"ID": "20221125223114-sjvxg8e",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-sjvxg8e",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var arr = [];\nvar arr2 = [1, 2, 'haha', false]; // 数组中保存的内容称为 \"元素\"\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-vm6qr6y",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-vm6qr6y",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-80bi4xj",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-80bi4xj",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "注意: JS 的数组不要求元素是相同类型"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": ".\n这一点和 C, C++, Java 等静态类型的语言差别很大. 但是 Python, PHP 等动态类型语言也是如此."
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-vjk30yh",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-vjk30yh",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "获取数组元素"
				}
			]
		},
		{
			"ID": "20221125223114-x5nkk5o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-x5nkk5o",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用下标的方式访问数组元素(从 0 开始)"
				}
			]
		},
		{
			"ID": "20221125223114-mrs3hvj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-mrs3hvj",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var arr = ['小猪佩奇', '小猪乔治', '小羊苏西'];\nconsole.log(arr);\nconsole.log(arr[0]);\nconsole.log(arr[1]);\nconsole.log(arr[2]); \narr[2] = '小猫凯迪'; \nconsole.log(arr);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-bfknoaj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-bfknoaj",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意: 不要给数组名直接赋值, 此时数组中的所有元素都没了."
				}
			]
		},
		{
			"ID": "20221125223114-q5t9ba2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-q5t9ba2",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "相当于本来 arr 是一个数组, 重新赋值后变成字符串了."
				}
			]
		},
		{
			"ID": "20221125223114-vbhcdqn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-vbhcdqn",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var arr = ['小猪佩奇', '小猪乔治', '小羊苏西']; \narr = '小猫凯迪';\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-0t7aqsz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-0t7aqsz",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "新增数组元素"
				}
			]
		},
		{
			"ID": "20221125223114-2ae77a7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-2ae77a7",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过修改 length 新增"
				}
			]
		},
		{
			"ID": "20221125223114-5diae67",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-5diae67",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "相当于在末尾新增元素. 新增的元素默认值为 undefined"
				}
			]
		},
		{
			"ID": "20221125223114-rwx6zmc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-rwx6zmc",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var arr = [9, 5, 2, 7];\narr.length = 6;\nconsole.log(arr);\nconsole.log(arr[4], arr[5]);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-4sqjn3n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-4sqjn3n",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "![[Pasted image 20221116154812.png]]"
				}
			]
		},
		{
			"ID": "20221125223114-7yaq4v1",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-7yaq4v1",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过下标新增"
				}
			]
		},
		{
			"ID": "20221125223114-fc85jxk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-fc85jxk",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果下标超出范围赋值元素, 则会给指定位置插入新元素"
				}
			]
		},
		{
			"ID": "20221125223114-fgijf3m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-fgijf3m",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var arr = []; \narr[2] = 10; \nconsole.log(arr);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-0kfmzex",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-0kfmzex",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "![[Pasted image 20221116154852.png]]"
				}
			]
		},
		{
			"ID": "20221125223114-bm7kf4g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-bm7kf4g",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时这个数组的 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "[0]"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "[1]"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 都是 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "undefined"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-viu1x8d",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-viu1x8d",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 push 进行追加元素"
				}
			]
		},
		{
			"ID": "20221125223114-o1ojdg5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-o1ojdg5",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码示例: 给定一个数组, 把数组中的奇数放到一个 newArr 中."
				}
			]
		},
		{
			"ID": "20221125223114-y07gtc6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-y07gtc6",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var arr = [9, 5, 2, 7, 3, 6, 8]; \nvar newArr = [];\nfor (var i = 0; i \u003c arr.length; i++) { \n    if (arr[i] % 2 != 0) {\n        newArr.push(arr[i]); \n    }\n}\nconsole.log(newArr);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-w6f4zs1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-w6f4zs1",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "删除数组中的元素"
				}
			]
		},
		{
			"ID": "20221125223114-771rig6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-771rig6",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "splice"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 方法删除元素"
				}
			]
		},
		{
			"ID": "20221125223114-74hngdt",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-74hngdt",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var arr = [9, 5, 2, 7];\n// 第一个参数表示从下表为 2 的位置开始删除. 第二个参数表示要删除的元素个数是 1 个 \narr.splice(2, 1);\nconsole.log(arr);  // [9, 5, 7]\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-b5mc1ob",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-b5mc1ob",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "splice 还可以用来修改元素，具体详情看"
				},
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Array.prototype.splice() - JavaScript | MDN (mozilla.org)"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/splice"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-0ekno99",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-0ekno99",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-cfgy9p1",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20221125223114-cfgy9p1",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-c42bghs",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221125223114-c42bghs",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"ID": "20221125223114-sfjx159",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221125223114-sfjx159",
										"updated": "20221125223114"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "目前咱们已经用到了数组中的一些属性和方法."
										}
									]
								}
							]
						},
						{
							"ID": "20221125223114-d07k0p6",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221125223114-d07k0p6",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"ID": "20221125223114-q5zejlf",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221125223114-q5zejlf",
										"updated": "20221125223114"
									},
									"Children": [
										{
											"Type": "NodeCodeSpan",
											"Data": "code",
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "arr.length"
												},
												{
													"Type": "NodeCodeSpanCloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": " , length 使用的时候不带括号, 此时 length 就是一个普通的变量(称为成员变量, 也叫属\n性)"
										}
									]
								}
							]
						},
						{
							"ID": "20221125223114-51wde5h",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221125223114-51wde5h",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"ID": "20221125223114-8yqqyrl",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221125223114-8yqqyrl",
										"updated": "20221125223114"
									},
									"Children": [
										{
											"Type": "NodeCodeSpan",
											"Data": "code",
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "arr.push()"
												},
												{
													"Type": "NodeCodeSpanCloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": " ,  "
										},
										{
											"Type": "NodeCodeSpan",
											"Data": "code",
											"Children": [
												{
													"Type": "NodeCodeSpanOpenMarker"
												},
												{
													"Type": "NodeCodeSpanContent",
													"Data": "arr.splice()"
												},
												{
													"Type": "NodeCodeSpanCloseMarker"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": " 使用的时候带括号, 并且可以传参数, 此时是一个函数 (也叫做方法)"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-81q79fd",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-81q79fd",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "不正经的JS数组"
				}
			]
		},
		{
			"ID": "20221125223114-vvkxmzp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-vvkxmzp",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JS 中的数组,不是一个正经数组!!\n除了能接数组的活,还能接map的活(表示"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "键值对"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ") =\u003e 这里说数组是一个map，更准确的说,是一个\"对象\".\n在JS里,是可以在运行时，给对象新增属性的."
				}
			]
		},
		{
			"ID": "20221125223114-lme6gcr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-lme6gcr",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "按照之前的理解, Java 中要求数组下标,是"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "0 -\u003elength -1"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "范围.如果超出范围,就会抛出一个"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "异常"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\nJS并非如此 ，当我们访问一个超出范围的下标的时候,得到的结果是"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "undefined"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ",并不会出现异常~~\n![[Pasted image 20221116163618.png]]"
				}
			]
		},
		{
			"ID": "20221125223114-7gsuu8l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-7gsuu8l",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "玩法一："
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n那 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "arr[-1] = 10"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 呢？"
				}
			]
		},
		{
			"ID": "20221125223114-h0i3nsr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-h0i3nsr",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var arr[4] =[1 , 2 , 3 , 4];\narr[-1] = 10;\nconsole.log(arr);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-omobwig",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-omobwig",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "![[Pasted image 20221116163859.png]]\n此时"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "-1"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "与其说是一个下标，不如说是一个\""
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "属性"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\" ,而且并"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "不会影响到数组的长度"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " ,所以现在该数组的长度还是4."
				}
			]
		},
		{
			"ID": "20221125223114-58crm5l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-58crm5l",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "玩法二："
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "arr['hello'] = 10;"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-06m99qo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-06m99qo",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var arr[4] =[1 , 2 , 3 , 4];\narr['hello'] = 10;\nconsole.log(arr);\nconsole.log(arr['hello']);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-zb2z5ve",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-zb2z5ve",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "arr['hello']"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "就是在给"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "arr"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "这个对象,"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "新增了一个属性.属性的名字是hello，属性的值是10"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "."
				}
			]
		},
		{
			"ID": "20221125223114-gvyj801",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221125223114-gvyj801",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数"
				}
			]
		},
		{
			"ID": "20221125223114-i86nvjz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-i86nvjz",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "语法格式"
				}
			]
		},
		{
			"ID": "20221125223114-7v17m8a",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-7v17m8a",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 创建函数/函数声明/函数定义 \nfunction 函数名(形参列表) { \n    函数体\n    return 返回值; \n}\n\n// 函数调用\n函数名(实参列表)           // 不考虑返回值 \n返回值 = 函数名(实参列表)   // 考虑返回值\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-dhxmfof",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-dhxmfof",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-g0vqf8x",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-g0vqf8x",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-8aczqjo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-8aczqjo",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "函数定义并不会执行函数体内容, 必须要调用才会执行. 调用几次就会执行几次."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-3es2w5s",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-3es2w5s",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function hello() {\n    console.log(\"hello\"); \n}\n// 如果不调用函数, 则没有执行打印语句 \nhello();\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-ant8xiw",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-ant8xiw",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-df061qs",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-df061qs",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-6zykvfn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-6zykvfn",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "调用函数的时候进入函数内部执行, 函数结束时回到调用位置继续执行. 可以借助调试器来观察."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-uwmas7m",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-uwmas7m",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-3xi1v7b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-3xi1v7b",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "函数的定义和调用的先后顺序没有要求"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ". (这一点和变量不同, 变量必须先定义再使用)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-83c4bbu",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-83c4bbu",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 调用函数\nhello();\n\n// 定义函数\nfunction hello() {\n    console.log(\"hello\"); \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-jya0l42",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-jya0l42",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于参数个数"
				}
			]
		},
		{
			"ID": "20221125223114-tblxzag",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-tblxzag",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实参和形参之间的个数可以不匹配. "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "但是实际开发一般要求形参和实参个数要匹配"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-bemj1fl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-bemj1fl",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function sum(num1 , num2)\n{\n\treturn num1+num2;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-rqc04mx",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221125223114-rqc04mx",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-wvjdhkf",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20221125223114-wvjdhkf",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-n1m7bxa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-n1m7bxa",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果实参个数比形参个数多, 则多出的参数不参与函数运算"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-eh90k6r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-eh90k6r",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sum(10 ,20 , 30); //30不参与运算\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-zl33z5d",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221125223114-zl33z5d",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-6jrflce",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20221125223114-6jrflce",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-fqst1st",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-fqst1st",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果实参个数比形参个数少, 则此时多出来的形参值为 undefined"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-a72a3kc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-a72a3kc",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sum(10); // NaN, 相当于 num2 为 undefined.\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-upkmt7z",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-upkmt7z",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-rquyu56",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-rquyu56",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "JS 的函数传参比较灵活, 这一点和其他语言差别较大. 事实上这种灵活性往往不是好事."
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-yjz793w",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-yjz793w",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数表达式"
				}
			]
		},
		{
			"ID": "20221125223114-xb9vu1b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-xb9vu1b",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "另外一种函数的定义方式"
				}
			]
		},
		{
			"ID": "20221125223114-sacj3ol",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-sacj3ol",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var add = function() { \n\tvar sum = 0;\n    for (var i = 0; i \u003c arguments.length; i++) { \n        sum += arguments[i];\n    }\n    return sum; \n}\nconsole.log(add(10, 20));            // 30\nconsole.log(add(1, 2, 3, 4));        // 10\nconsole.log(typeof add);             // function\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-2b0hx05",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-2b0hx05",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时形如   "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "function() { }"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 这样的写法定义了一个匿名函数, 然后将这个匿名函数用一个变量来表示. 后面就可以通过这个 add 变量来调用函数了."
				}
			]
		},
		{
			"ID": "20221125223114-iqwflfo",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-iqwflfo",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-j06pczd",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-j06pczd",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "JS 中函数是一等公民, 可以用变量保存, 也可以作为其他函数的参数或者返回值."
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-8bdx2tv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-8bdx2tv",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作用域"
				}
			]
		},
		{
			"ID": "20221125223114-bt3m0px",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-bt3m0px",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "某个标识符名字在代码中的有效范围."
				}
			]
		},
		{
			"ID": "20221125223114-wcb9iu4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-wcb9iu4",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 ES6 标准之前, 作用域主要分成两个"
				}
			]
		},
		{
			"ID": "20221125223114-30sm9rc",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-30sm9rc",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-6nknay6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-6nknay6",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-c8a9u3f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-c8a9u3f",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "全局作用域: 在整个 script 标签中, 或者单独的 js 文件中生效."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-wu5b9jk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-wu5b9jk",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-ke89fgv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-ke89fgv",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "局部作用域/函数作用域: 在函数内部生效."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-u662qsq",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-u662qsq",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 全局变量\nvar num = 10; \nconsole.log(num); \nfunction test() {\n    // 局部变量\n    var num = 20;\n    console.log(num); \n}\n\nfunction test2() { \n    // 局部变量\n    var num = 30;\n    console.log(num); \n}\n\ntest();\ntest2();\nconsole.log(num);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-rqtmwit",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-rqtmwit",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "执行结果"
				}
			]
		},
		{
			"ID": "20221125223114-no6tpv4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-no6tpv4",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "10\n20\n30\n10\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-ppuie29",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-ppuie29",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建变量时如果不写 var, 则得到一个全局变量."
				}
			]
		},
		{
			"ID": "20221125223114-2gktzp0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-2gktzp0",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function test() { \n\tnum = 100;\n}\ntest();\nconsole.log(num); \n\n// 执行结果\n100\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-symgftx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-symgftx",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "另外, 很多语言的局部变量作用域是按照代码块(大括号)来划分的, JS 在 ES6 之前不是这样的."
				}
			]
		},
		{
			"ID": "20221125223114-4zmfbmh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-4zmfbmh",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "if (1 \u003c 2) { \n\tvar a = 10;\n}\nconsole.log(a);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-30j71jh",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-30j71jh",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "作用域链"
				}
			]
		},
		{
			"ID": "20221125223114-1pr3851",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-1pr3851",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "背景:"
				}
			]
		},
		{
			"ID": "20221125223114-om7w2b6",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-om7w2b6",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-x1c19ff",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-x1c19ff",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-8pqm1ac",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-8pqm1ac",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "函数可以定义在函数内部"
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-sbvxvh1",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-sbvxvh1",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-phm6rac",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-phm6rac",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "内层函数可以访问外层函数的局部变量."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-1yhqiqg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-1yhqiqg",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "内部函数可以访问外部函数的变量. 采取的是链式查找的方式. 从内到外依次进行查找."
				}
			]
		},
		{
			"ID": "20221125223114-289ggew",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-289ggew",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\nvar num = 1;\nfunction test1() {\n    var num = 10;\n    function test2() { \n        var num = 20;\n        console.log(num); \n    }\n    \n    test2(); \n}\ntest1(); \n\n// 执行结果\n20\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-404ggs4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-404ggs4",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "执行 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "console.log(num)"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的时候, 会现在 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "test2"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 的局部作用域中查找 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "num"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": ". 如果没找到, 则继续去 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "test1"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 中\n查找. 如果还没找到, 就去全局作用域查找.\n![[Pasted image 20221123111941.png]]"
				}
			]
		},
		{
			"ID": "20221125223114-ljuhgp0",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221125223114-ljuhgp0",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对象"
				}
			]
		},
		{
			"ID": "20221125223114-l64naqr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-l64naqr",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": " "
				}
			]
		},
		{
			"ID": "20221125223114-j4bm6er",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-j4bm6er",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "基本概念"
				}
			]
		},
		{
			"ID": "20221125223114-45dugs3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-45dugs3",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对象是指一个具体的事物."
				}
			]
		},
		{
			"ID": "20221125223114-9zk2d3j",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-9zk2d3j",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-xvhn1dm",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-xvhn1dm",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "\"电脑\" 不是对象, 而是一个泛指的类别. 而 \"我的联想笔记本\" 就是一个对象."
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-yxrhs89",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-yxrhs89",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在 JS 中, 字符串, 数值, 数组, 函数都是对象."
				}
			]
		},
		{
			"ID": "20221125223114-m46kcbd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-m46kcbd",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "每个对象中包含若干的属性和方法."
				}
			]
		},
		{
			"ID": "20221125223114-cq9s6ka",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-cq9s6ka",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-1d43ksl",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-1d43ksl",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-f5fr0fw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-f5fr0fw",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "属性: 事物的特征."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-f8emaww",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-f8emaww",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-jqpzqom",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-jqpzqom",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "方法: 事物的行为."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-v2krcgp",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-v2krcgp",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-u8d13h1",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-u8d13h1",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "例如, 你有一个女票.\n她的身高体重三围这些都是属性.\n她的唱歌, 跳舞, 暖床都是方法."
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-e73gmmd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-e73gmmd",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对象需要保存的属性有多个, 虽然数组也能用于保存多个数据, 但是不够好."
				}
			]
		},
		{
			"ID": "20221125223114-q5lnua7",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-q5lnua7",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-q0lrp6w",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-q0lrp6w",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "例如表示一个学生信息. (姓名蔡徐坤, 身高 175cm, 体重 170斤)\n"
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "var student = ['蔡徐坤', 175, 170];"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\n但是这种情况下到底 175 和 170 谁表示身高, 谁表示体重, 就容易分不清"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-3i2j8xh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-3i2j8xh",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JavaScript 的对象  和 Java 的对象概念上基本一致. 只是具体的语法表项形式差别较大."
				}
			]
		},
		{
			"ID": "20221125223114-hab0jl1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-hab0jl1",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对象的创建与使用"
				}
			]
		},
		{
			"ID": "20221125223114-83hc67n",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-83hc67n",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用  字面量  创建对象 （常用）"
				}
			]
		},
		{
			"ID": "20221125223114-q26tbt3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-q26tbt3",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "{}"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 创建对象"
				}
			]
		},
		{
			"ID": "20221125223114-9jvsfxh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-9jvsfxh",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var a = {};  // 创建了一个空的对象 \n\nvar student = {\n    name: '蔡徐坤', \n    height: 175, \n    weight: 170,\n    sayHello: function() { \n        console.log(\"hello\"); \n    }\n};\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-ovhl1p9",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-ovhl1p9",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-2c1nuvb",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-2c1nuvb",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-k6zvrhp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-k6zvrhp",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用 { } 创建对象"
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-jhdf5m9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-jhdf5m9",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-sretyhr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-sretyhr",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "属性和方法使用"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "键值对"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的形式来组织."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-l947cl4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-l947cl4",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-7oyx8ja",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-7oyx8ja",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "键值对之间使用 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": ","
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 分割. 最后一个属性后面的 , 可有可无"
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-yrkka3n",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-yrkka3n",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-hkomv0f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-hkomv0f",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "键和值之间使用 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": ":"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 分割."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-9z1df2y",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-9z1df2y",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-acm9wuq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-acm9wuq",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "方法的值是一个匿名函数."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-fc1uei4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-fc1uei4",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "使用对象的属性和方法:"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-ska444o",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-ska444o",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 1. 使用 . 成员访问运算符来访问属性 `.` 可以理解成 \"的\" \nconsole.log(student.name);\n\n// 2. 使用 [ ] 访问属性, 此时属性需要加上引号 \nconsole.log(student['height']);\n\n// 3. 调用方法, 别忘记加上 () \nstudent.sayHello();\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-oeqe775",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-oeqe775",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 new Object 创建对象"
				}
			]
		},
		{
			"ID": "20221125223114-kw20v83",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-kw20v83",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var student = new Object(); // 和创建数组类似\n\nstudent.name = \"蔡徐坤\";\nstudent.height = 175;\nstudent['weight'] = 170;\nstudent.sayHello = function () { \n\tconsole.log(\"hello\");\n}\n\nconsole.log(student.name); \nconsole.log(student['weight']); \nstudent.sayHello();\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-uovcguu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-uovcguu",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意, 使用 "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "{}"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 创建的对象也可以随时使用   "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "student.name = \"蔡徐坤\";"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 这样的方式来新增属性."
				}
			]
		},
		{
			"ID": "20221125223114-m2e663n",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-m2e663n",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用  构造函数  创建对象"
				}
			]
		},
		{
			"ID": "20221125223114-6msbtjx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-6msbtjx",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "前面的创建对象方式只能创建一个对象. 而使用构造函数可以很方便  的创建  多个对象."
				}
			]
		},
		{
			"ID": "20221125223114-xi35y5o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-xi35y5o",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如: 创建几个猫咪对象"
				}
			]
		},
		{
			"ID": "20221125223114-kzoex5q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-kzoex5q",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "var mimi = {\n    name: \"咪咪\",\n    type: \"中华田园喵\",\n    miao: function () { \n        console.log(\"喵\"); \n    }\n};\n\nvar xiaohei = {\n    name: \"小黑\",\n    type: \"波斯喵\",\n    miao: function () {\n        console.log(\"猫呜\"); \n    }\n}\n\nvar ciqiu = {\n    name: \"刺球\",\n    type: \"金渐层\",\n    miao: function () {\n        console.log(\"咕噜噜\"); \n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-kwam9hd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-kwam9hd",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时写起来就比较麻烦. 使用构造函数可以把相同的属性和方法的创建提取出来,  简化开发过程."
				}
			]
		},
		{
			"ID": "20221125223114-fn9da3y",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-fn9da3y",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function 构造函数名(形参) { \n    this.属性    = 值;\n    this.方法    = function... \n}\n\nvar obj = new 构造函数名(实参);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-xqz1kf6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-xqz1kf6",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意:"
				}
			]
		},
		{
			"ID": "20221125223114-p987oyf",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-p987oyf",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-axxnm0z",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-axxnm0z",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-xk5c03c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-xk5c03c",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在构造函数内部使用 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "this"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 关键字来表示当前正在构建的对象."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-xtgyvdv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-xtgyvdv",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-b2306hz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-b2306hz",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "构造函数的"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "函数名首字母"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "一般是"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "大写"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-ckcrel5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-ckcrel5",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-7ijpl64",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-7ijpl64",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "构造函数不需要 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "return"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-1qld3i8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-1qld3i8",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-sogb8wn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-sogb8wn",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "创建对象的时候必须使用 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "new"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 关键字."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-wn3jztz",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-wn3jztz",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-iwepf4f",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-iwepf4f",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "this 相当于 \"我\""
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-bf76650",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-bf76650",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用构造函数重新创建猫咪对象"
				}
			]
		},
		{
			"ID": "20221125223114-1ya5oz4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-1ya5oz4",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function Cat(name, type, sound) {\n    this.name = name;\n    this.type = type;\n    this.miao = function () {\n        console.log(sound); // 别忘了作用域的链式访问规则 \n    }\n}\n\nvar mimi = new Cat('咪咪', '中华田园喵', '喵');\nvar xiaohei = new Cat('小黑', '波斯喵', '猫呜');\nvar ciqiu = new Cat('刺球', '金渐层', '咕噜噜');\n\nconsole.log(mimi); \nmimi.miao();\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-hfht15k",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-hfht15k",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "理解 new 关键字"
				}
			]
		},
		{
			"ID": "20221125223114-jg0ty8n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-jg0ty8n",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "new"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "  的执行过程:"
				}
			]
		},
		{
			"ID": "20221125223114-6pp7yxu",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20221125223114-6pp7yxu",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-vs550iz",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20221125223114-vs550iz",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-ny56eyh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-ny56eyh",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "先在内存中创建一个"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "空的对象"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "{ }"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-2scl7e8",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20221125223114-2scl7e8",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-gydtp0l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-gydtp0l",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "this"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 指向刚才的空对象(将上一步的对象作为 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "this"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 的上下文)"
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-uy2n533",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20221125223114-uy2n533",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-ji3aaev",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-ji3aaev",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "执行构造函数的代码, 给对象创建属性和方法"
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-ss2me36",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20221125223114-ss2me36",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-qrb4nb7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-qrb4nb7",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "返回这个对象 (构造函数本身不需要 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "return"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", 由 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "new"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 代劳了)"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-xcsvs2d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-xcsvs2d",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "参看："
				},
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "new 运算符 - JavaScript | MDN (mozilla.org)"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/new"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-g9ii2lz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221125223114-g9ii2lz",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JavaScript 的对象和 Java 的对象的区别"
				}
			]
		},
		{
			"ID": "20221125223114-0jano8i",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-0jano8i",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JavaScript 没有 \"类\" 的概念"
				}
			]
		},
		{
			"ID": "20221125223114-1vpq1rj",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-1vpq1rj",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-xpc6kp2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-xpc6kp2",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-unv3sl6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-unv3sl6",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "对象"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "其实就是 "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "\"属性\" + \"方法\""
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " ."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-3yih80b",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-3yih80b",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-esxu3tq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-esxu3tq",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "类相当于把一些具有共性的对象的属性和方法单独提取了出来, 相当于一个 \"月饼模子\""
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-m43ptqx",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-m43ptqx",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-0sjn8zq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-0sjn8zq",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 JavaScript 中的 \"构造函数\" 也能起到类似的效果."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-1dyzz3q",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-1dyzz3q",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-ahn8pp8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-ahn8pp8",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "而且即使不是用构造函数, 也可以随时的通过 "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "{}"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "  的方式指定出一些对象"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-dc1n3rr",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221125223114-dc1n3rr",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221125223114-45zraa5",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221125223114-45zraa5",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "在 ES6 中也引入了 "
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "class"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " 关键字, 就能按照类似于 Java 的方式创建类和对象了."
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-68ozgsr",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-68ozgsr",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JavaScript 对象不区分 \"属性\" 和 \"方法\""
				}
			]
		},
		{
			"ID": "20221125223114-ygudzko",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-ygudzko",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-mcrg4x0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-mcrg4x0",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-1xg0767",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-1xg0767",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JavaScript 中的函数是 \"一等公民\", 和普通的变量一样. 存储了函数的变量能够通过 ( ) 来进行调用执行."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-6tzzi1v",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-6tzzi1v",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JavaScript 对象没有 private / public 等访问控制机制."
				}
			]
		},
		{
			"ID": "20221125223114-jp1ixrh",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-jp1ixrh",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-zs8ycc5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-zs8ycc5",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-v3v62lz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-v3v62lz",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对象中的属性都可以被外界随意访问."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-k1jcr4j",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-k1jcr4j",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JavaScript 对象没有 \"继承\""
				}
			]
		},
		{
			"ID": "20221125223114-2vpu9ge",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-2vpu9ge",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-ar7zn4q",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-ar7zn4q",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-hb5tyy2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-hb5tyy2",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "继承本质就是 \"让两个对象建立关联\". 或者说是让一个对象能够重用另一个对象的属性/方法."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-bouxrly",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-bouxrly",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-xjkg715",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-xjkg715",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "JavaScript 中使用 \"原型\" 机制实现类似的效果."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-kkue8p0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-kkue8p0",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如: 创建一个 cat 对象和 dog 对象, 让这两个对象都能使用 animal 对象中的 eat 方法.\n通过   "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "__proto__"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 属性来建立这种关联关系 (proto 翻译作 \"原型\")\n![[Pasted image 20221124174127.png]]\n当eat方法被调用的时候，先在自己的方法列表中寻找， 如果找不到，就去找原型中的方法， 如果原型中找不到，  就去原型的原型中去寻找......  最后找到Object那里，  如果还找不到，  那就是未定义了。"
				}
			]
		},
		{
			"ID": "20221125223114-pny9g2m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-pny9g2m",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "![[Pasted image 20221124174258.png]]"
				}
			]
		},
		{
			"ID": "20221125223114-pcl1o9v",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221125223114-pcl1o9v",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "JavaScript 没有 \"多态\""
				}
			]
		},
		{
			"ID": "20221125223114-2eq0v85",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221125223114-2eq0v85",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"ID": "20221125223114-71qlnew",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-71qlnew",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-6xxm8b8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-6xxm8b8",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "多态的本质在于 \"程序猿不必关注具体的类型, 就能使用其中的某个方法\"."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-jq35j75",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-jq35j75",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-9viwdbb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-9viwdbb",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "C++ / Java 等静态类型的语言对于类型的约束和校验比较严格. 因此通过  子类继承父类, 并重写父类的方法的方式  来实现多态的效果."
								}
							]
						}
					]
				},
				{
					"ID": "20221125223114-4zkrpo6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221125223114-4zkrpo6",
						"updated": "20221125223114"
					},
					"Children": [
						{
							"ID": "20221125223114-5kbri50",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221125223114-5kbri50",
								"updated": "20221125223114"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "但是在 JavaScript 中本身就支持动态类型, 程序猿在使用对象的某个方法的时候本身也不需要对对象的类型做出明确区分. 因此并不需要在语法层面上支持多态."
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221125223114-818rasu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-818rasu",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如:\n在 Java 中已经学过 ArrayList 和 LinkedList. 为了让程序猿使用方便, 往往写作\n"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "List\u003cString\u003e list = new ArrayList\u003c\u003e()"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n然后我们可以写一个方法:"
				}
			]
		},
		{
			"ID": "20221125223114-ozk0214",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-ozk0214",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "void add(List\u003cString\u003e list, String s) { \n\tlist.add(s);  \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-5s2l1xt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-5s2l1xt",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们不必关注 list 是 ArrayList 还是 LinkedList, 只要是 List 就行. 因为 List 内部带有 add 方法.\n当我们使用 JavaScript 的代码的时候"
				}
			]
		},
		{
			"ID": "20221125223114-r2dqsz7",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221125223114-r2dqsz7",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "anM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "function add(list, s) { \n\tlist.add(s)\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221125223114-v5gniqd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-v5gniqd",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "add 对于 list 这个参数的类型本身就没有任何限制. 只需要 list 这个对象有 add 方法即可. 就不必\n像 Java 那样先继承再重写绕一个圈子."
				}
			]
		},
		{
			"ID": "20221125223114-im3prgx",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221125223114-im3prgx",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "引用文章"
				}
			]
		},
		{
			"ID": "20221125223114-d9hpwxy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221125223114-d9hpwxy",
				"updated": "20221125223114"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "JS中var和let的区别_Mastersheaven的博客-CSDN博客_js let var"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://blog.csdn.net/weixin_43108539/article/details/108514200"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		}
	]
}