{
	"ID": "20221026225404-wlq8q6e",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20221026225404-wlq8q6e",
		"title": "网络基础2",
		"updated": "20221105232511"
	},
	"Children": [
		{
			"ID": "20221026225417-ixn6dl4",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221026225417-ixn6dl4",
				"updated": "20221026225417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "再谈协议"
				}
			]
		},
		{
			"ID": "20221026225417-tevvc3b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221026225417-tevvc3b",
				"updated": "20221026225424"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在"
				},
				{
					"Type": "NodeBlockRef",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeBlockRefID",
							"Data": "20221019224713-ahcoy7z"
						},
						{
							"Type": "NodeBlockRefSpace"
						},
						{
							"Type": "NodeBlockRefDynamicText",
							"Data": "认识 \"协议\""
						},
						{
							"Type": "NodeCloseParen"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中，我们初步认识了协议，那协议应该具体实现呢。"
				}
			]
		},
		{
			"ID": "20221026225417-40w28b9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221026225417-40w28b9",
				"updated": "20221026225417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用一个例子进行说明"
				}
			]
		},
		{
			"ID": "20221026225417-mdfiz3t",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221026225417-mdfiz3t",
				"updated": "20221026225417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "网络版计算器"
				}
			]
		},
		{
			"ID": "20221026225417-oo7hq2l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221026225417-oo7hq2l",
				"updated": "20221026225417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "例如, 我们需要实现一个服务器版的加法器. 我们需要客户端把要计算的两个加数发过去, 然后由服务器进行计算, 最\n后再把结果返回给客户端."
				}
			]
		},
		{
			"ID": "20221026225417-26u4ts8",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221026225417-26u4ts8",
				"updated": "20221026225417"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221026225417-x14cr0x",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221026225417-x14cr0x",
						"updated": "20221026225417"
					},
					"Children": [
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "约定方案一"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": ":\n客户端发送一个形如\""
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "1+1"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\"的字符串;\n这个字符串中有两个操作数, 都是整形;\n两个数字之间会有一个字符是运算符, 运算符只能是 "
						},
						{
							"Type": "NodeCodeSpan",
							"Data": "code",
							"Children": [
								{
									"Type": "NodeCodeSpanOpenMarker"
								},
								{
									"Type": "NodeCodeSpanContent",
									"Data": "+"
								},
								{
									"Type": "NodeCodeSpanCloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": " ;\n数字和运算符之间没有空格;\n..."
						}
					]
				}
			]
		},
		{
			"ID": "20221026225417-qv83yhe",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221026225417-qv83yhe",
				"updated": "20221026225417"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221026225417-57hhhfy",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221026225417-57hhhfy",
						"updated": "20221026225417"
					},
					"Children": [
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "约定方案二:"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\n定义结构体来表示我们需要交互的信息;\n发送数据时将这个结构体按照一个规则转换成字符串, 接收到数据的时候再按照相同的规则把字符串转化回结构体;\n这个过程叫做 \""
						},
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "序列化"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\" 和 \""
						},
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "反序列化"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\""
						}
					]
				}
			]
		},
		{
			"ID": "20221026225417-pcj453u",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221026225417-pcj453u",
				"updated": "20221026225417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "方案一"
				}
			]
		},
		{
			"ID": "20221026225433-vaw9894",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221026225433-vaw9894",
				"updated": "20221026225442"
			},
			"Children": [
				{
					"Type": "NodeBlockRef",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeBlockRefID",
							"Data": "20221026225442-9g650ob"
						},
						{
							"Type": "NodeBlockRefSpace"
						},
						{
							"Type": "NodeBlockRefDynamicText",
							"Data": "方案一代码"
						},
						{
							"Type": "NodeCloseParen"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221026225417-npvs180",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221026225417-npvs180",
				"updated": "20221026225417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "方案二"
				}
			]
		},
		{
			"ID": "20221026225417-u6a6l93",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221026225417-u6a6l93",
				"updated": "20221026225658"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用"
				},
				{
					"Type": "NodeBlockRef",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeBlockRefID",
							"Data": "20221026225535-lyhhje0"
						},
						{
							"Type": "NodeBlockRefSpace"
						},
						{
							"Type": "NodeBlockRefDynamicText",
							"Data": "序列化和反序列化"
						},
						{
							"Type": "NodeCloseParen"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n我们使用的是 "
				},
				{
					"Type": "NodeBlockRef",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeBlockRefID",
							"Data": "20221026225550-fzllyhl"
						},
						{
							"Type": "NodeBlockRefSpace"
						},
						{
							"Type": "NodeBlockRefDynamicText",
							"Data": "json序列化"
						},
						{
							"Type": "NodeCloseParen"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "来进行序列化传输。"
				}
			]
		},
		{
			"ID": "20221026225712-c8d9sq0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221026225712-c8d9sq0",
				"updated": "20221026225733"
			},
			"Children": [
				{
					"Type": "NodeBlockRef",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeBlockRefID",
							"Data": "20221026225732-wq0yetn"
						},
						{
							"Type": "NodeBlockRefSpace"
						},
						{
							"Type": "NodeBlockRefDynamicText",
							"Data": "方案二代码"
						},
						{
							"Type": "NodeCloseParen"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221026225417-ayd1yks",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221026225417-ayd1yks",
				"updated": "20221026225909"
			}
		},
		{
			"ID": "20221026225417-uthum6n",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221026225417-uthum6n",
				"updated": "20221026225417"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "http协议"
				}
			]
		},
		{
			"ID": "20221026225417-jl65z46",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221026225417-jl65z46",
				"updated": "20221026225417"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \"Sock.hpp\"\n#include \u003cpthread.h\u003e\n\nvoid Usage(std::string proc)\n{\n    std::cout \u003c\u003c \"Usage: \" \u003c\u003c proc \u003c\u003c \" port\" \u003c\u003c std::endl;\n}\n\nvoid* HandlerHttpRequest(void* args)\n{\n    int sock = *(int*)args;\n    delete (int*)args;\n    pthread_detach(pthread_self());\n\n#define SIZE 1024*10\n\n    char buffer[SIZE];\n    memset(buffer , 0 ,sizeof(buffer));\n\n    ssize_t s = recv(sock , buffer , sizeof(buffer) , 0 );\n    if(s \u003e 0)\n    {\n        buffer[s] = 0;\n        std::cout \u003c\u003c buffer;//查看http的请求格式! for test\n\n        std::string http_response = \"http/1.0 200 OK\\n\";\n        http_response += \"Content-Type: text/plain\\n\";//text/plain,正文是普通的文本\n        http_response += \"\\n\"; //传说中的空行\n        http_response += \"hello bit , hello fmy\";\n\n        send(sock , http_response.c_str() , http_response.size() , 0);\n    }\n\n    close(sock);\n    return nullptr;\n\n}\n\nint main(int argc , char* argv[])\n{\n    if( argc != 2 )\n    {\n        Usage(argv[0]);\n        exit(1);\n    }\n\n    uint16_t port = atoi(argv[1]);\n    int listen_sock = Sock::Socket();\n    Sock::Bind(listen_sock , port);\n    Sock::Listen(listen_sock);\n\n    while(true)\n    {\n        int sock = Sock::Accept(listen_sock);\n        if(sock \u003e 0)\n        {\n            pthread_t tid;\n            int* pram = new int(sock);\n            pthread_create(\u0026tid , nullptr , HandlerHttpRequest , pram);\n        }\n    }\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221026225417-sktzruh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221026225417-sktzruh",
				"updated": "20221026230109"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221026225322"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221026225322-20221026230109-0aso58n.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221105231556-tldw60j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221105231556-tldw60j"
			}
		},
		{
			"ID": "20221105231613-nqialu2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221105231613-nqialu2"
			}
		},
		{
			"ID": "20221105231614-twvz5zb",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221105231614-twvz5zb",
				"updated": "20221105231614"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数据链路层"
				}
			]
		},
		{
			"ID": "20221105231614-mlz5kvk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221105231614-mlz5kvk",
				"updated": "20221105231614"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以太网认识"
				}
			]
		},
		{
			"ID": "20221105231614-v6untvz",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221105231614-v6untvz",
				"updated": "20221105231614"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221105231614-kd5pct3",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221105231614-kd5pct3",
						"updated": "20221105231614"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "\"以太网\" 不是一种具体的网络, 而是一种技术标准; 既包含了数据链路层的内容, 也包含了一些物理层的内容. 例如: 规定了网络拓扑结构, 访问控制方式, 传输速率等;\n例如以太网中的网线必须使用双绞线; 传输速率有10M, 100M, 1000M等;\n以太网是当前应用最广泛的局域网技术; 和以太网并列的还有令牌环网, 无线LAN等;"
						}
					]
				}
			]
		},
		{
			"ID": "20221105231614-uiirn8m",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221105231614-uiirn8m",
				"updated": "20221105231614"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以太网帧格式"
				}
			]
		},
		{
			"ID": "20221105231614-2wsslts",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221105231614-2wsslts",
				"updated": "20221105232511"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221105132647"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221105132647-20221105232511-kzj859c.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221105231614-kdphcje",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221105231614-kdphcje",
				"updated": "20221105231614"
			},
			"Children": [
				{
					"ID": "20221105231614-s18wck3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221105231614-s18wck3",
						"updated": "20221105231614"
					},
					"Children": [
						{
							"ID": "20221105231614-8d8aamm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221105231614-8d8aamm",
								"updated": "20221105231614"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "源地址和目的地址是指网卡的硬件地址(也叫"
								},
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "MAC地址"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "), 长度是48位,是在网卡出厂时固化的;"
								}
							]
						}
					]
				},
				{
					"ID": "20221105231614-iwwpwle",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221105231614-iwwpwle",
						"updated": "20221105231614"
					},
					"Children": [
						{
							"ID": "20221105231614-59s504c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221105231614-59s504c",
								"updated": "20221105231614"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "帧协议类型字段有三种值,分别对应IP、ARP、RARP;"
								}
							]
						}
					]
				},
				{
					"ID": "20221105231614-2irtnu0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221105231614-2irtnu0",
						"updated": "20221105231614"
					},
					"Children": [
						{
							"ID": "20221105231614-e02hou2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221105231614-e02hou2",
								"updated": "20221105231614"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "帧末尾是CRC校验码。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221105231614-szfwuqx",
			"Type": "NodeTable",
			"TableAligns": [
				2,
				2,
				1
			],
			"Properties": {
				"colgroup": "||",
				"id": "20221105231614-szfwuqx",
				"updated": "20221105231614"
			},
			"Children": [
				{
					"Type": "NodeTableHead",
					"Data": "thead",
					"Children": [
						{
							"Type": "NodeTableRow",
							"Data": "tr",
							"Children": [
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "字段名称"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 2,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "长度(byte)"
										}
									]
								},
								{
									"Type": "NodeTableCell",
									"Data": "th",
									"TableCellAlign": 1,
									"Children": [
										{
											"Type": "NodeText",
											"Data": "含义"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "目的地址"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "6"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "接收方MAC地址，网络包接收方的MAC地址，在局域网中使用这一地址来传输网络包"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "源地址"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "6"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "网络包发送方的MAC地址，接收方通过它来判断是谁发送了这个包"
								}
							]
						}
					]
				},
				{
					"Type": "NodeTableRow",
					"Data": "tr",
					"Children": [
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "类型"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 2,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2"
								}
							]
						},
						{
							"Type": "NodeTableCell",
							"Data": "td",
							"TableCellAlign": 1,
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用的协议类型。TCP通信中 IP协议与ARP协议较常见 0000-05DC：IEEE 802.3  "
								},
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "0800:IP协议"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "  ；"
								},
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "0806 :ARP协议"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " ； "
								},
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "86DD:IPv6"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221105231614-h4epjuo",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221105231614-h4epjuo",
				"updated": "20221105231614"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221105231614-1lo6ftz",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221105231614-1lo6ftz",
						"updated": "20221105231614"
					},
					"Children": [
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "如何分离报头和有效载荷(封装) ？  如何决定将自己的有效载荷交付给上一层？"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "\n都由"
						},
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "目的地址"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "，"
						},
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "源地址"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "，"
						},
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "类型"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "决定。"
						}
					]
				}
			]
		},
		{
			"ID": "20221105231614-mbup46g",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221105231614-mbup46g",
				"updated": "20221105231614"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "认识MAC地址"
				}
			]
		},
		{
			"ID": "20221105231614-6eocedd",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221105231614-6eocedd",
				"updated": "20221105231614"
			},
			"Children": [
				{
					"ID": "20221105231614-vtg0opu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221105231614-vtg0opu",
						"updated": "20221105231614"
					},
					"Children": [
						{
							"ID": "20221105231614-2pe4w29",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221105231614-2pe4w29",
								"updated": "20221105231614"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "MAC地址用来识别数据链路层中相连的节点;"
								}
							]
						}
					]
				},
				{
					"ID": "20221105231614-a9pozjz",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221105231614-a9pozjz",
						"updated": "20221105231614"
					},
					"Children": [
						{
							"ID": "20221105231614-6h5pjpu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221105231614-6h5pjpu",
								"updated": "20221105231614"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "长度为"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "48位"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ", 及"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "6个字节"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": ". 一般用16进制数字加上"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "冒号"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的形式来表示(例如: 08:00:27:03:fb:19)"
								}
							]
						}
					]
				},
				{
					"ID": "20221105231614-3eeb9x2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221105231614-3eeb9x2",
						"updated": "20221105231614"
					},
					"Children": [
						{
							"ID": "20221105231614-nalrk4f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221105231614-nalrk4f",
								"updated": "20221105231614"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "网卡出厂时就确定了, 不能修改. mac地址通常是唯一的"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "(虚拟机中的mac地址不是真实的mac地址, 可能会冲突; 也有些网卡支持用户配置mac地址)."
								}
							]
						}
					]
				}
			]
		}
	]
}