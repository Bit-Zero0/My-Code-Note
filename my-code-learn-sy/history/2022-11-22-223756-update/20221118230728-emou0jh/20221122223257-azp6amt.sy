{
	"ID": "20221122223257-azp6amt",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20221122223257-azp6amt",
		"title": "索引",
		"updated": "20221122223753"
	},
	"Children": [
		{
			"ID": "20221122223304-pzz0teg",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221122223304-pzz0teg",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "没有索引，可能会有什么问题"
				}
			]
		},
		{
			"ID": "20221122223304-bbb4j7o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-bbb4j7o",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "索引：提高数据库的性能，索引是物美价廉的东西了。不用加内存，不用改程序，不用调sql，只要执行正确的 create index ，查询速度就可能提高成百上千倍。但是天下没有免费的午餐，查询速度的提高是以插入、更新、删除的速度为代价的，这些写操作，增加了大量的IO。所以它的价值，在于提高一个海量数据的检索速度。"
				}
			]
		},
		{
			"ID": "20221122223304-kvs2b4t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-kvs2b4t",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "常见索引分为："
				}
			]
		},
		{
			"ID": "20221122223304-lcnyxdt",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-lcnyxdt",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223303-wh6u7k0",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223303-wh6u7k0",
						"updated": "20221122223303"
					},
					"Children": [
						{
							"ID": "20221122223304-w343xdc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-w343xdc",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "主键索引(primary key)"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221122223303-44f9cwh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223303-44f9cwh",
						"updated": "20221122223303"
					},
					"Children": [
						{
							"ID": "20221122223304-qefb20j",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-qefb20j",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "唯一索引(unique)"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221122223303-2hs68lu",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223303-2hs68lu",
						"updated": "20221122223303"
					},
					"Children": [
						{
							"ID": "20221122223304-eql0uw4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-eql0uw4",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "普通索引(index)"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221122223303-4zeim8a",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223303-4zeim8a",
						"updated": "20221122223303"
					},
					"Children": [
						{
							"ID": "20221122223304-dif5an9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-dif5an9",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "全文索引(fulltext)--解决中子文索引问题。"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223309-daapi8h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223309-daapi8h"
			}
		},
		{
			"ID": "20221122223304-b8pwzh5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-b8pwzh5",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "案例：\n先整一个海量表，在查询的时候，看看没有索引时有什么问题？"
				}
			]
		},
		{
			"ID": "20221122223304-fatv4e8",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-fatv4e8",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "drop database if exists `bit_index`;\ncreate database if not exists `bit_index` default character set utf8;\nuse `bit_index`;\n\n-- 构建一个8000000条记录的数据\n-- 构建的海量表数据需要有差异性，所以使用存储过程来创建， 拷贝下面代码就可以了，暂时不用理解\n\n-- 产生随机字符串\ndelimiter $$\ncreate function rand_string(n INT)\nreturns varchar(255)\nbegin\ndeclare chars_str varchar(100) default\n'abcdefghijklmnopqrstuvwxyzABCDEFJHIJKLMNOPQRSTUVWXYZ';\ndeclare return_str varchar(255) default '';\ndeclare i int default 0;\nwhile i \u003c n do\nset return_str =concat(return_str,substring(chars_str,floor(1+rand()*52),1));\nset i = i + 1;\nend while;\nreturn return_str;\nend $$\ndelimiter ;\n\n\n-- 产生随机数字\ndelimiter $$\ncreate function rand_num( )\nreturns int(5)\nbegin\ndeclare i int default 0;\nset i = floor(10+rand()*500);\nreturn i;\nend $$\ndelimiter ;\n\n-- 创建存储过程，向雇员表添加海量数据\ndelimiter $$\ncreate procedure insert_emp(in start int(10),in max_num int(10))\nbegin\ndeclare i int default 0;\nset autocommit = 0;\nrepeat\nset i = i + 1;\ninsert into EMP values ((start+i)\n,rand_string(6),'SALESMAN',0001,curdate(),2000,400,rand_num());\nuntil i = max_num\nend repeat;\ncommit;\nend $$\ndelimiter ;\n\n-- 雇员表\nCREATE TABLE `EMP` (\n  `empno` int(6) unsigned zerofill NOT NULL COMMENT '雇员编号',\n  `ename` varchar(10) DEFAULT NULL COMMENT '雇员姓名',\n  `job` varchar(9) DEFAULT NULL COMMENT '雇员职位',\n  `mgr` int(4) unsigned zerofill DEFAULT NULL COMMENT '雇员领导编号',\n  `hiredate` datetime DEFAULT NULL COMMENT '雇佣时间',\n  `sal` decimal(7,2) DEFAULT NULL COMMENT '工资月薪',\n  `comm` decimal(7,2) DEFAULT NULL COMMENT '奖金',\n  `deptno` int(2) unsigned zerofill DEFAULT NULL COMMENT '部门编号'\n);\n\n\n-- 执行存储过程，添加8000000条记录\ncall insert_emp(100001, 8000000);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-cbwwd0u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-cbwwd0u",
				"updated": "20221122223336"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果上述数据报出1418号错误， 该错误的原因可能是一个安全设置方面的配置，查手册log_bin_trust_function_creators参数缺省0，是不允许function的同步的，一般我们在配置repliaction的时候，都忘记关注这个参数，这样在master更新funtion后，slave就会报告错误，然后slave stoped。\n解决方法如下："
				}
			]
		},
		{
			"ID": "20221122223304-new5drm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-new5drm",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " set global log_bin_trust_function_creators = 1;\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-qcnfwi9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-qcnfwi9",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "到此，已经创建出了海量数据的表了。"
				}
			]
		},
		{
			"ID": "20221122223345-vyj1pcx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223345-vyj1pcx",
				"updated": "20221122223346"
			}
		},
		{
			"ID": "20221122223346-21lawot",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223346-21lawot",
				"updated": "20221122223346"
			},
			"Children": [
				{
					"ID": "20221122223303-g46fxeq",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223303-g46fxeq",
						"updated": "20221122223303"
					},
					"Children": [
						{
							"ID": "20221122223304-ya6aqzt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-ya6aqzt",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "查询员工编号为998877的员工"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-xz7664r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-xz7664r",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " select * from EMP where empno=998877;\n+--------+--------+----------+------+---------------------+---------+--------+--------+\n| empno  | ename  | job      | mgr  | hiredate            | sal     | comm   | deptno |\n+--------+--------+----------+------+---------------------+---------+--------+--------+\n| 998877 | qwkNlN | SALESMAN | 0001 | 2022-11-22 00:00:00 | 2000.00 | 400.00 |     90 |\n+--------+--------+----------+------+---------------------+---------+--------+--------+\n1 row in set (11.28 sec)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-burmofr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-burmofr",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以看到耗时11.28秒，这还是在本机一个人来操作，在实际项目中，如果放在公网中，假如同时有1000个人并发查询，那很可能就死机。"
				}
			]
		},
		{
			"ID": "20221122223352-x6cy12y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223352-x6cy12y",
				"updated": "20221122223354"
			}
		},
		{
			"ID": "20221122223353-s8pux7g",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223353-s8pux7g",
				"updated": "20221122223353"
			},
			"Children": [
				{
					"ID": "20221122223303-56qeje5",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223303-56qeje5",
						"updated": "20221122223303"
					},
					"Children": [
						{
							"ID": "20221122223304-qhwv9r6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-qhwv9r6",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "解决方法，创建索引\n数据量大，时间可能也会久一点。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-6gum59r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-6gum59r",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "alter table EMP add index(empno); \nQuery OK, 0 rows affected (32.35 sec)\nRecords: 0  Duplicates: 0  Warnings: 0\n\n select * from EMP where empno=998877;\n+--------+--------+----------+------+---------------------+---------+--------+--------+\n| empno  | ename  | job      | mgr  | hiredate            | sal     | comm   | deptno |\n+--------+--------+----------+------+---------------------+---------+--------+--------+\n| 998877 | qwkNlN | SALESMAN | 0001 | 2022-11-22 00:00:00 | 2000.00 | 400.00 |     90 |\n+--------+--------+----------+------+---------------------+---------+--------+--------+\n1 row in set (0.00 sec)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-0hahsr2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-0hahsr2",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时的查询速度就是飞快了"
				}
			]
		},
		{
			"ID": "20221122223357-jekek94",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223357-jekek94",
				"updated": "20221122223357"
			}
		},
		{
			"ID": "20221122223357-0c944we",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223357-0c944we",
				"updated": "20221122223357"
			},
			"Children": [
				{
					"ID": "20221122223303-k6fewbs",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223303-k6fewbs",
						"updated": "20221122223303"
					},
					"Children": [
						{
							"ID": "20221122223304-6i4nuzh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-6i4nuzh",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "换一个员工编号，测试看看查询时间"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-1gbn9f9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-1gbn9f9",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "select * from EMP where empno=123456;\n+--------+--------+----------+------+---------------------+---------+--------+--------+\n| empno  | ename  | job      | mgr  | hiredate            | sal     | comm   | deptno |\n+--------+--------+----------+------+---------------------+---------+--------+--------+\n| 123456 | wbTpQl | SALESMAN | 0001 | 2022-11-22 00:00:00 | 2000.00 | 400.00 |    321 |\n+--------+--------+----------+------+---------------------+---------+--------+--------+\n1 row in set (0.00 sec)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-9qcbcpm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-9qcbcpm",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当然，要详细了解索引，也需要认识一下磁盘。"
				}
			]
		},
		{
			"ID": "20221122223400-1y57y9q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223400-1y57y9q"
			}
		},
		{
			"ID": "20221122223304-51dae7w",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221122223304-51dae7w",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "认识磁盘"
				}
			]
		},
		{
			"ID": "20221122223304-lqosrps",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122223304-lqosrps",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MySQL与存储"
				}
			]
		},
		{
			"ID": "20221122223304-d8a25bb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-d8a25bb",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "给用户提供存储服务，而存储的都是数据，数据在磁盘这个外设当中。磁盘是计算机中的一个机械设备，相于计算机其他电子元件，磁盘效率是比较低的，在加上IO本身的特征，可以知道，如何提交效率，是 MySQL的一个个重要话题。"
				}
			]
		},
		{
			"ID": "20221122223304-v97du79",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122223304-v97du79",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "研究磁盘"
				}
			]
		},
		{
			"ID": "20221122223304-e9dky52",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-e9dky52",
				"updated": "20221122223408"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221122123439"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221122123439-20221122223408-x2r6pjm.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-np4as2y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-np4as2y",
				"updated": "20221122223413"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在看看磁盘中一个"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "盘片"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221122123519"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221122123519-20221122223413-b08wl5i.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122223416-oy20wzr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223416-oy20wzr"
			}
		},
		{
			"ID": "20221122223304-7r82awl",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-7r82awl",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "扇区"
				}
			]
		},
		{
			"ID": "20221122223304-idr9ojo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-idr9ojo",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数据库文件，本质其实就是保存在磁盘的盘片当中。也就是上面的一个个小格子中，就是我们经常所说的扇区。当然，数据库文件很大，也很多，一定需要占据多个扇区。"
				}
			]
		},
		{
			"ID": "20221122223304-8s9vkaw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-8s9vkaw",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "题外话："
				}
			]
		},
		{
			"ID": "20221122223304-bnl5yam",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-bnl5yam",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-gd3exb3",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-gd3exb3",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-a168p1b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-a168p1b",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "从上图可以看出来，在半径方向上，距离圆心越近，扇区越小，距离圆心越远，扇区越大"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-ot8cu1z",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-ot8cu1z",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-3pvyb9w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-3pvyb9w",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "那么，所有"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "扇区都是默认512字节"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "吗？目前是的，我们也这样认为。因为保证一个扇区多大，是由比特位密度决定的。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-wy5c4l8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-wy5c4l8",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-gx45nke",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-gx45nke",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不过最新的磁盘技术，已经慢慢的让扇区大小不同了，不过我们现在暂时不考虑。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-tyb9vm3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-tyb9vm3",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们在使用Linux，所看到的大部分目录或者文件，其实就是保存在硬盘当中的。(当然，有一些内存文件系统，如：proc ， sys之类，我们不考虑）"
				}
			]
		},
		{
			"ID": "20221122223304-70vwl5r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-70vwl5r",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c2hlbGw="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#数据库文件，本质其实就是保存在磁盘的盘片当中，就是一个一个的文件\n[root@VM-0-3-centos ~]# ls /var/lib/mysql -l   #我们目前MySQL中的文件 \ntotal 319592\ndrwxr-x--- 2 mysql mysql      4096 Apr 15 21:46 57test\n-rw-r----- 1 mysql mysql        56 Apr 12 15:27 auto.cnf\ndrwxr-x--- 2 mysql mysql      4096 May 17 13:52 bit_index\n-rw------- 1 mysql mysql      1676 Apr 12 15:27 ca-key.pem\n-rw-r--r-- 1 mysql mysql      1112 Apr 12 15:27 ca.pem\ndrwx------ 2 mysql mysql      4096 Apr 13 21:26 ccdata_pro\n-rw-r--r-- 1 mysql mysql      1112 Apr 12 15:27 client-cert.pem \n-rw------- 1 mysql mysql      1680 Apr 12 15:27 client-key.pem \n-rw-r----- 1 mysql mysql     16958 Jun  8 15:46 ib_buffer_pool \n-rw-r----- 1 mysql mysql 213909504 Jun  8 16:02 ibdata1\n-rw-r----- 1 mysql mysql  50331648 Jun  8 16:02 ib_logfile0\n-rw-r----- 1 mysql mysql  50331648 Jun  8 16:02 ib_logfile1\n-rw-r----- 1 mysql mysql  12582912 Jun  8 15:46 ibtmp1\ndrwxr-x--- 2 mysql mysql      4096 Apr 28 14:11 musicserver \ndrwxr-x--- 2 mysql mysql      4096 May  9 09:47 mysql\nsrwxrwxrwx 1 mysql mysql         0 Jun  8 15:46 mysql.sock\n-rw------- 1 mysql mysql         5 Jun  8 15:46 mysql.sock.lock \ndrwxr-x--- 2 mysql mysql      4096 Apr 12 15:27 performance_schema \n-rw------- 1 mysql mysql      1676 Apr 12 15:27 private_key.pem \n-rw-r--r-- 1 mysql mysql       452 Apr 12 15:27 public_key.pem \ndrwxr-x--- 2 mysql mysql      4096 May  9 09:46 scott\n-rw-r--r-- 1 mysql mysql      1112 Apr 12 15:27 server-cert.pem \n-rw------- 1 mysql mysql      1676 Apr 12 15:27 server-key.pem \ndrwxr-x--- 2 mysql mysql     12288 Apr 12 15:27 sys\ndrwxr-x--- 2 mysql mysql      4096 Jun  5 17:13 test   # 自己定义的数据库，里面有数据表\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-r1efr5m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-r1efr5m",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以，最基本的，找到一个文件的全部，本质，就是在磁盘找到所有保存文件的扇区。\n而我们能够定位任何一个扇区，那么便能找到所有扇区，因为查找方式是一样的。"
				}
			]
		},
		{
			"ID": "20221122223441-w5mztd6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223441-w5mztd6"
			}
		},
		{
			"ID": "20221122223304-lzlkdqt",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-lzlkdqt",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "定位扇区"
				}
			]
		},
		{
			"ID": "20221122223304-9fiyhis",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-9fiyhis",
				"updated": "20221122223435"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221122123940"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221122123940-20221122223435-sgzxcre.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-f0v51i5",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-f0v51i5",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-dtdto2f",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-dtdto2f",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-9yvzqe5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-9yvzqe5",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "柱面(磁道): 多盘磁盘，每盘都是双面，大小完全相等。那么同半径的磁道，整体上便构成了一个柱面"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-u0adw6h",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-u0adw6h",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-ui6tdot",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-ui6tdot",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "每个盘面都有一个磁头，那么磁头和盘面的对应关系便是1对1的"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-gijgkb7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-gijgkb7",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-v0mv1je",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-v0mv1je",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "所以，我们只需要知道，磁头（Heads）、柱面(Cylinder)(等价于磁道)、扇区(Sector)对应的编号。即可在磁盘上定位所要访问的扇区。这种磁盘数据定位方式叫做 "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "CHS"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 。不过实际系统软件使用的并不是 CHS（但是硬件是），而是 "
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "LBA"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " ，"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "一种线性地址，可以想象成虚拟地址与物理地址。系统将 LBA 地址最后会转化成为 CHS ，交给磁盘去进行数据读取"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。不过，我们现在不关心转化细节，知道这个东西，让我们逻辑自洽起来即可"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223453-ukit1u8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223453-ukit1u8"
			}
		},
		{
			"ID": "20221122223304-2jighoy",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-2jighoy",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "结论"
				}
			]
		},
		{
			"ID": "20221122223304-jadv95w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-jadv95w",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们现在已经能够在硬件层面定位，任何一个基本数据块了(扇区)。那么在系统软件上，就直接按照扇区(512字节，部分4096字节),进行IO交互吗？不是"
				}
			]
		},
		{
			"ID": "20221122223304-79zilnx",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-79zilnx",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-aj5yivm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-aj5yivm",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-iy5c5c6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-iy5c5c6",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果操作系统直接使用硬件提供的数据大小进行交互，那么系统的IO代码，就和硬件强相关，换言之，如果硬件发生变化，系统必须跟着变化，所以系统必须与磁盘进行解耦。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-9xly48w",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-9xly48w",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-7igh1ax",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-7igh1ax",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "从目前来看，单次IO 512字节，还是太小了。IO单位小，意味着读取同样的数据内容，需要进行多次磁盘访问，会带来效率的降低。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-tsexr3y",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-tsexr3y",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-l7t3t14",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-l7t3t14",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "之前学习文件系统，就是在磁盘的基本结构下建立的，文件系统读取基本单位，就不是扇区，而是数据块。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-cz0xcio",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-cz0xcio",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "故，"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "系统读取磁盘，是以块为单位的，基本单位是 "
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "4KB"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 。"
				}
			]
		},
		{
			"ID": "20221122223506-q52clpj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223506-q52clpj"
			}
		},
		{
			"ID": "20221122223304-kp0lbgs",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-kp0lbgs",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "磁盘随机访问(Random Access)与连续访问(Sequential Access)"
				}
			]
		},
		{
			"ID": "20221122223304-7fas07h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-7fas07h",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "随机访问"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "：本次IO所给出的扇区地址和上次IO给出扇区地址不连续，这样的话磁头在两次IO操作之间需要作比较大的移动动作才能重新开始读/写数据。"
				}
			]
		},
		{
			"ID": "20221122223304-8x4jw3i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-8x4jw3i",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "连续访问"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "：如果当次IO给出的扇区地址与上次IO结束的扇区地址是连续的，那磁头就能很快的开始这次IO操作，这样的多个IO操作称为连续访问。"
				}
			]
		},
		{
			"ID": "20221122223304-p9gw1ku",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-p9gw1ku",
				"updated": "20221122223513"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此尽管相邻的两次IO操作在同一时刻发出，但如果它们的请求的扇区地址相差很大的话也只能称为随机访问，而非连续访问。"
				}
			]
		},
		{
			"ID": "20221122223304-e52jwbd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-e52jwbd",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "磁盘是通过机械运动进行寻址的，随机访问不需要过多的定位，所以效率比较高。"
				}
			]
		},
		{
			"ID": "20221122223530-f453g9r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223530-f453g9r"
			}
		},
		{
			"ID": "20221122223304-h4bxsdk",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221122223304-h4bxsdk",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MySQL 与磁盘交互基本单位"
				}
			]
		},
		{
			"ID": "20221122223304-zlp4ogq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-zlp4ogq",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而MySQL作为一款应用软件，可以想象成一种特殊的文件系统。它有着更高的IO场景，所以，为了提高基本的IO效率, "
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "MySQL 进行IO的基本单位是 "
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "16KB"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "(后面统一使用InnoDB 存储引擎讲解)"
				}
			]
		},
		{
			"ID": "20221122223304-avvo47s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-avvo47s",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可使用"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "show global status like 'innodb_page_size';"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " 指令查看"
				}
			]
		},
		{
			"ID": "20221122223304-000b2g0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-000b2g0",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "show global status like 'innodb_page_size';  --查看innodb引擎的io基本单位\n+------------------+-------+\n| Variable_name   | Value | \n+------------------+-------+\n| Innodb_page_size | 16384 |    -- 16*1024=16384 \n+------------------+-------+\n1 row in set (0.01 sec)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-m5ad997",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-m5ad997",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "也就是说，磁盘这个硬件设备的基本单位是512字节，而"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "MysQL InnoDB"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "引擎使用"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "16KB"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "进行"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "IO交互"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "即，MysQL和磁盘进行数据交互的基本单位是16KB"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。这个基本数据单元，"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "在MysQL这里叫做"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "page"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": " (注意和系统的page区分)"
				}
			]
		},
		{
			"ID": "20221122223535-mevu5q2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223535-mevu5q2"
			}
		},
		{
			"ID": "20221122223304-tbz6nin",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221122223304-tbz6nin",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "建立共识"
				}
			]
		},
		{
			"ID": "20221122223304-kvofy5e",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-kvofy5e",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-r4y1v1o",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-r4y1v1o",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-g160gzk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-g160gzk",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "MysQL中的数据文件，是以page为单位保存在磁盘当中的"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-9vw24hc",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-9vw24hc",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-2mkqksd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-2mkqksd",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "MysQL的"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "CURD操作"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，都需要通过计算，找到对应的插入位置，或者找到对应要修改或者查询的数据。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-66jv8t9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-66jv8t9",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-nxd4qi6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-nxd4qi6",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "而只要涉及计算，就需要CPU参与，而为了便于CPU参与，一定要能够先将数据移动到内存当中。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-cpt8b3t",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-cpt8b3t",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-cj0kjer",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-cj0kjer",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "所以在特定时间内，数据一定是磁盘中有，内存中也有。后续操作完内存数据之后，以特定的刷新策略，刷新到磁盘。而这时，就涉及到磁盘和内存的数据交互，也就是IO了。而"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "此时IO的基本单位就是Page"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-v1g079c",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-v1g079c",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-olif3gz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-olif3gz",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "为了更好的进行上面的操作，MySQL服务器在内存中运行的时候，在服务器内部，就申请了被称为"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "BufferPool"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "的的"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "大内存空间，来进行各种缓存。其实就是很大的内存空间，来和磁盘数据进行IO交互"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-19m9yua",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-19m9yua",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-z5eoa7a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-z5eoa7a",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "为了更高的效率，一定要尽可能的减少系统和磁盘IO的次数"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223543-a48k3x0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223543-a48k3x0"
			}
		},
		{
			"ID": "20221122223304-zjzk0qs",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221122223304-zjzk0qs",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "索引的理解"
				}
			]
		},
		{
			"ID": "20221122223304-nehw24t",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-nehw24t",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-hzcjau4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-hzcjau4",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-ofai9mj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-ofai9mj",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "建立测试表"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-fuo4jll",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-fuo4jll",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "create table if not exists user (\n   id int primary key,     --一定要添加主键哦，只有这样才会默认生成主键索引 \n   age int not null,\n   name varchar(16) not null \n);\nmysql\u003e show create table user \\G\n*************************** 1. row *************************** \n      Table: user\nCreate Table: CREATE TABLE `user` ( \n`id` int(11) NOT NULL,\n`age` int(11) NOT NULL,\n`name` varchar(16) NOT NULL, \nPRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8  --默认就是InnoDB存储引擎 \n1 row in set (0.00 sec)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223548-33qrju6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223548-33qrju6"
			}
		},
		{
			"ID": "20221122223304-vbbmuxs",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-vbbmuxs",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-uksxa99",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-uksxa99",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-qsesz5q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-qsesz5q",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "插入多条记录"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-y1k1s8g",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-y1k1s8g",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "--插入多条记录，注意，我们并没有按照主键的大小顺序插入哦\ninsert into user (id, age, name) values(3, 18, '杨过'); \n\ninsert into user (id, age, name) values(4, 16, '小龙女'); \n\ninsert into user (id, age, name) values(2, 26, '黄蓉'); \n\ninsert into user (id, age, name) values(5, 36, '郭靖'); \n\ninsert into user (id, age, name) values(1, 56, '欧阳锋'); \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223552-7kkw37s",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223552-7kkw37s",
				"updated": "20221122223553"
			}
		},
		{
			"ID": "20221122223552-3wqwnfm",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223552-3wqwnfm",
				"updated": "20221122223552"
			},
			"Children": [
				{
					"ID": "20221122223304-3te9tvc",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-3te9tvc",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-u4cjwb8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-u4cjwb8",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "查看插入结果"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-01b192b",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-01b192b",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "select *from user;\n+----+-----+-----------+\n| id | age | name      |\n+----+-----+-----------+\n|  1 |  56 | 欧阳锋    |\n|  2 |  26 | 黄蓉      |\n|  3 |  18 | 杨过      |\n|  4 |  16 | 小龙女    |\n|  5 |  36 | 郭靖      |\n+----+-----+-----------+\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223555-ngffpmr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223555-ngffpmr"
			}
		},
		{
			"ID": "20221122223304-9lu2r9e",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122223304-9lu2r9e",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为何IO交互要是 page"
				}
			]
		},
		{
			"ID": "20221122223304-ln1jhoj",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221122223304-ln1jhoj",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221122223304-s0c69l6",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221122223304-s0c69l6",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "为何MySQL和磁盘进行IO交互的时候，要采用Page的方案进行交互呢?用多少，加载多少不香吗?"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-t6lvjo5",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20221122223304-t6lvjo5",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-ox09wd9",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221122223304-ox09wd9",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"ID": "20221122223304-nhkzvko",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122223304-nhkzvko",
										"updated": "20221122223304"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "如上面的5条记录，如果MySQL要查找id=2的记录，第一次加载id=1，第二次加载id=2，一次一条记录，那么就需要2次IO。 如果要找id=5，那么就需要5次IO。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122223304-6h0pi2l",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221122223304-6h0pi2l",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"ID": "20221122223304-p1dfw6e",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122223304-p1dfw6e",
										"updated": "20221122223304"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "但，"
										},
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "如果这5条(或者更多)都被保存在一个Page中(16KB，能保存很多记录),那么第一次IO查找id=2的时候，整个Page会被加载到MySQL的Buffer Pool中，这里完成了一次IO"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "。但是往后如果在查找id=1,3,4,5等，完全不需要进行IO了，而是直接在内存中进行了。所以，就在单Page里面，大大减少了IO的次数。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122223304-yzz6zgu",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221122223304-yzz6zgu",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"ID": "20221122223304-okofgdz",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122223304-okofgdz",
										"updated": "20221122223304"
									},
									"Children": [
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "你怎么保证，用户一定下次找的数据，就在这个Page里面？我们不能严格保证，但是有很大概率，因为有局部性原理"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "。 往往IO效率低下的最主要矛盾不是IO单次数据量的大小，而是IO的次数。"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-0qnm54p",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122223304-0qnm54p",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "理解单个Page"
				}
			]
		},
		{
			"ID": "20221122223304-k6jllxq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-k6jllxq",
				"updated": "20221122223609"
			},
			"Children": [
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "MySQL"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "中要管理很多数据表文件，而要管理好这些文件，就需要 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "先描述，在组织"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "  ,我们目前可以简单理解成"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "一个个独立文件是有一个或者多个Page构成的"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221122142859"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221122142859-20221122223609-uvoi4lr.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n不同的"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "Page"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "在MysQL中，都是16KB，使用prev和next构成双向链表"
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-fgh6vi8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-fgh6vi8",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因为有主键的问题，MySQL会默认按照主键给我们的数据进行排序，从上面的Page内数据记录可以看出，数据是有序且彼此关联的。"
				}
			]
		},
		{
			"ID": "20221122223304-yh8nln4",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221122223304-yh8nln4",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221122223304-cg0om0h",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221122223304-cg0om0h",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"Type": "NodeMark",
							"Data": "mark",
							"Children": [
								{
									"Type": "NodeMark2OpenMarker"
								},
								{
									"Type": "NodeText",
									"Data": "为什么数据库在插入数据时要对其进行排序呢?我们按正常顺序插入数据不是也挺好的吗?"
								},
								{
									"Type": "NodeMark2CloseMarker"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-cqr5g8v",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20221122223304-cqr5g8v",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-ep3ycnf",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221122223304-ep3ycnf",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"ID": "20221122223304-okarr9z",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122223304-okarr9z",
										"updated": "20221122223304"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "插入数据时, 排序的目的就是优化查询的效率。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122223304-r3ya774",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221122223304-r3ya774",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"ID": "20221122223304-our1f3w",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122223304-our1f3w",
										"updated": "20221122223304"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "页内部存放数据的模块，实质上也是一个链表的结构，链表的特点也就是增删快，查询修改慢，所以优化查询的效率是必须的。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122223304-flpwtzf",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221122223304-flpwtzf",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"ID": "20221122223304-g7lph4x",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122223304-g7lph4x",
										"updated": "20221122223304"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "正式因为有序，在查找的时候，从头到后都是有效查找，没有任何一个查找是浪费的，而且，如果运气好，是可以提前结束查找过程的。"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-40vulun",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122223304-40vulun",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "理解多个Page"
				}
			]
		},
		{
			"ID": "20221122223304-cqss42x",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-cqss42x",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-jp3a6va",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-jp3a6va",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-us3nhwt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-us3nhwt",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过上面的分析，我们知道，上面页模式中，只有一个功能，就是"
								},
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "在查询某条数据的时候直接将一整页的数据加载到内存中，以减少硬盘IO次数，从而提高性能"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "。但是，我们也可以看到，现在的页模式内部，实际上是采用了链表的结构，前一条数据指向后一条数据，本质上还是通过数据的逐条比较来取出特定的数据。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-md7abst",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-md7abst",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-wgg0lk5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-wgg0lk5",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果有1千万条数据，一定需要多个Page来保存1千万条数据，多个Page彼此使用双链表链接起来，而且每个Page内部的数据也是基于链表的。那么，查找特定一条记录，也一定是线性查找。这效率也太低了。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-zin77r8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-zin77r8",
				"updated": "20221122223618"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那如何提高一个page内的搜索速度呢？那就是提供 "
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "页目录"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221122143350"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221122143350-20221122223618-lnv35rp.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122223620-2742up4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223620-2742up4"
			}
		},
		{
			"ID": "20221122223304-rndrl59",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-rndrl59",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "页目录"
				}
			]
		},
		{
			"ID": "20221122223304-3rwn611",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-3rwn611",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们在看一本有关C语言书的时候，如果我们要看\u003c指针章节\u003e，找到该章节有两种做法"
				}
			]
		},
		{
			"ID": "20221122223304-i26xtb6",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-i26xtb6",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-la3qetj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-la3qetj",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-mygq2zk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-mygq2zk",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "从头逐页的向后翻，直到找到目标内容"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-vkf098v",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-vkf098v",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-4kc2i95",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-4kc2i95",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeStrong",
									"Data": "strong",
									"Children": [
										{
											"Type": "NodeStrongA6kOpenMarker",
											"Data": "**"
										},
										{
											"Type": "NodeText",
											"Data": "通过书提供的目录"
										},
										{
											"Type": "NodeStrongA6kCloseMarker",
											"Data": "**"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "，发现指针章节在234页(假设)，那么我们便直接翻到234页。同时，查找目录的方案，可以顺序找，不过因为目录肯定少，所以可以快速提高定位"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-uj6k1s1",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-uj6k1s1",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-284rna0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-284rna0",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "本质上，书中的目录，是多花了纸张的，但是却提高了效率"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-iej4q75",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-iej4q75",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以，目录，是一种“"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "空间换时间"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "的做法”"
				}
			]
		},
		{
			"ID": "20221122223652-bxeqwjv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223652-bxeqwjv"
			}
		},
		{
			"ID": "20221122223304-0jdua76",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-0jdua76",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "单page情况"
				}
			]
		},
		{
			"ID": "20221122223304-il1fsmk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-il1fsmk",
				"updated": "20221122223650"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "针对上面的单页Page，我们能否也引入目录呢？当然可以\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221122144710"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221122144710-20221122223650-oe8qh4z.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n那么当前，在一个Page内部，我们引入了目录。比如，我们要查找"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "id=4"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "记录，之前必须线性遍历4次，才能拿到结\n果。现在直接通过目录"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "2[3]"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，直接进行定位新的起始位置，提高了效率。现在我们可以再次正式回答上面的问题了，"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "为何通过键值MysQL会自动排序?  "
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "可以很方便引入目录"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221122223657-cinx1jp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223657-cinx1jp"
			}
		},
		{
			"ID": "20221122223304-6u19pga",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-6u19pga",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "多页情况"
				}
			]
		},
		{
			"ID": "20221122223304-2x7dsph",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-2x7dsph",
				"updated": "20221122223705"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MysQL中每一页的大小只有"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "16KB"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "单个Page大小固定"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "，所以随着数据量不断增大，16KB不可能存下所有的数据，那么必定会有多个页来存储数据。\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221122144611"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221122144611-20221122223705-d952yhz.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n在单表数据不断被插入的情况下，MySQL会在容量不足的时候，自动开辟新的Page来保存新的数据，然后通过指针的方式，将所有的Page组织起来。"
				}
			]
		},
		{
			"ID": "20221122223304-g30mln1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-g30mln1",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "需要注意，上面的图，是理想结构，大家也知道，目前要保证整体有序，那么新插入的数据，不一定会在新Page上面，这里仅仅做演示。"
				}
			]
		},
		{
			"ID": "20221122223304-svvjt17",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-svvjt17",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这样，我们就可以通过多个Page遍历，Page内部通过目录来快速定位数据。可是，貌似这样也有效率问题，在Page之间，也是需要MysQL遍历的，遍历意味着依旧需要进行大量的IO，将下一个Page加载到内存，进行线性检测。这样就显得我们之前的Page内部的目录，有点杯水车薪了。"
				}
			]
		},
		{
			"ID": "20221122223304-a23orzm",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221122223304-a23orzm",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20221122223304-shjah5x",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221122223304-shjah5x",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "那么如何解决呢?解决方案，其实就是我们之前的思路，给"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "Page"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "也带上目录。"
						}
					]
				},
				{
					"ID": "20221122223304-282bpmr",
					"Type": "NodeList",
					"ListData": {},
					"Properties": {
						"id": "20221122223304-282bpmr",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-dc6a8s5",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221122223304-dc6a8s5",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"ID": "20221122223304-r36sb97",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122223304-r36sb97",
										"updated": "20221122223304"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "使用一个目录项来指向某一页，而这个目录项存放的就是将要指向的页中存放的最小数据的键值。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122223304-mqmuj7j",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221122223304-mqmuj7j",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"ID": "20221122223304-03m2v45",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122223304-03m2v45",
										"updated": "20221122223304"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "和页内目录不同的地方在于，这种目录管理的级别是页，而页内目录管理的级别是行。"
										}
									]
								}
							]
						},
						{
							"ID": "20221122223304-9zbsdgf",
							"Type": "NodeListItem",
							"ListData": {
								"BulletChar": 42,
								"Marker": "Kg=="
							},
							"Properties": {
								"id": "20221122223304-9zbsdgf",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"ID": "20221122223304-kxiijp5",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20221122223304-kxiijp5",
										"updated": "20221122223304"
									},
									"Children": [
										{
											"Type": "NodeText",
											"Data": "其中，每个目录项的构成是:"
										},
										{
											"Type": "NodeStrong",
											"Data": "strong",
											"Children": [
												{
													"Type": "NodeStrongA6kOpenMarker",
													"Data": "**"
												},
												{
													"Type": "NodeText",
													"Data": "键值+指针"
												},
												{
													"Type": "NodeStrongA6kCloseMarker",
													"Data": "**"
												}
											]
										},
										{
											"Type": "NodeText",
											"Data": "。图中没有画全。"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-y2xryyz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-y2xryyz",
				"updated": "20221122223717"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221122144540"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221122144540-20221122223717-nkhbd9s.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n存在一个目录页来管理页目录，目录页中的数据存放的就是指向的那一页中最小的数据。有数据，就可通过比较，找\n到该访问那个Page，进而通过指针，找到下一个Page。"
				}
			]
		},
		{
			"ID": "20221122223304-d5tlb8t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-d5tlb8t",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其实"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "目录页的本质也是页，普通页中存的数据是用户数据，而目录页中存的数据是普通页的地址"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20221122223304-o1flon9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-o1flon9",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可是，我们每次检索数据的时候，该从哪里开始呢？虽然顶层的目录页少了，但是还要遍历啊？不用担心，可以在加\n目录页"
				}
			]
		},
		{
			"ID": "20221122223304-oh5r4yu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-oh5r4yu",
				"updated": "20221122223731"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221122144830"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221122144830-20221122223731-w9d6azu.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n这货就是传说中的B+树啊！没错，至此，我们已经给我们的表user构建完了主键索引。"
				}
			]
		},
		{
			"ID": "20221122223304-qnpbeo6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-qnpbeo6",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "随便找一个"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "id=?"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "我们发现，现在查找的Page数一定减少了，也就意味着IO次数减少了，那么效率也就提高了。"
				}
			]
		},
		{
			"ID": "20221122223737-2bglk1v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223737-2bglk1v"
			}
		},
		{
			"ID": "20221122223304-sq5b9op",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-sq5b9op",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "复盘一下"
				}
			]
		},
		{
			"ID": "20221122223304-sh6j4ju",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-sh6j4ju",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-82rk4ql",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-82rk4ql",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-8b7u32x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-8b7u32x",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Page分为目录页和数据页。目录页只放各个下级Page的最小键值。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-c0mq3j8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-c0mq3j8",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-1sov6xx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-1sov6xx",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "查找的时候，自定向下找，只需要加载部分目录页到内存，即可完成算法的整个查找过程，大大减少了IO次数"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223740-k40hxpz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223740-k40hxpz"
			}
		},
		{
			"ID": "20221122223304-j7p8h8t",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-j7p8h8t",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "InnoDB在建立索引结构来管理数据的时候，其他数据结构为何不行?"
				}
			]
		},
		{
			"ID": "20221122223304-of43527",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-of43527",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-b0zc4e6",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-b0zc4e6",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-pcye0h4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-pcye0h4",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "二叉搜索树?"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "  退化问题，可能退化成为线性结构"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-r9qew2l",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-r9qew2l",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-d6hmwz0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-d6hmwz0",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "AVL_\u0026\u0026红黑树?"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": " 虽然是平衡或者近似平衡，但是毕竟是二叉结构，相比较多阶B+，意味着树整体过高，大家都是自顶向下找，层高越低，意味着系统与硬盘更少的IO Page交互。虽然你很秀，但是有更秀的。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-0a8s7gb",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-0a8s7gb",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-8w7wi0c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-8w7wi0c",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeMark",
									"Data": "mark",
									"Children": [
										{
											"Type": "NodeMark2OpenMarker"
										},
										{
											"Type": "NodeText",
											"Data": "Hash?"
										},
										{
											"Type": "NodeMark2CloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "官方的索引实现方式中，MysQL是支持HASH的，不过InnoDB和MyISAw并不支持.Hash跟进其算法特征，决定了虽然有时候也很快(O(1)，不过，在面对范围查找就明显不行，另外还有其他差别，有兴趣可以查一下。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-5fx3kdm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-5fx3kdm",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "数据结构演示链接"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://www.cs.usfca.edu/~galles/visualization/Algorithms.html"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-firdhsb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-firdhsb",
				"updated": "20221122223753"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20221122150548"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20221122150548-20221122223753-qq4f3lz.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-zyjtrdb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-zyjtrdb",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "B树？"
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "最值得比较的是InnoDB为何不用B树作为底层索引？"
				}
			]
		},
		{
			"ID": "20221122223304-elmesfz",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20221122223304-elmesfz",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "B+ vs B"
				}
			]
		},
		{
			"ID": "20221122223304-n3ypful",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-n3ypful",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "B树"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n![[Pasted image 20221122150714.png]]"
				}
			]
		},
		{
			"ID": "20221122223304-q9pu6ot",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-q9pu6ot",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "B+树"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n![[Pasted image 20221122150736.png]]\n上面的图，是在网上找的，大家也可以搜一下。"
				}
			]
		},
		{
			"ID": "20221122223304-sljp8kx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-sljp8kx",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "目前这两棵树，对我们最有意义的区别是："
				}
			]
		},
		{
			"ID": "20221122223304-y1ixfgh",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-y1ixfgh",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-fvk7i7d",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-fvk7i7d",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-ppdoef2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-ppdoef2",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "B树节点，既有数据，又有Page指针，而B+，只有叶子节点有数据，其他目录页，只有键值和Page指针"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-51uenw9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-51uenw9",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-uo27lnv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-uo27lnv",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "B+叶子节点，全部相连，而B没有"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-6oa6syg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-6oa6syg",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为何选择B+"
				}
			]
		},
		{
			"ID": "20221122223304-yjyd3a1",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-yjyd3a1",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-80cpggy",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-80cpggy",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-jtdipdv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-jtdipdv",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "节点不存储data，这样一个节点就可以存储更多的key。可以使得树更矮，所以IO操作次数更少。"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-7m1hfyd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-7m1hfyd",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-70600zh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-70600zh",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "叶子节点相连，更便于进行范围查找"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-zohv6ll",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122223304-zohv6ll",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "聚簇索引 VS 非聚簇索引"
				}
			]
		},
		{
			"ID": "20221122223304-vqvxi7c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-vqvxi7c",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MyISAM存储引擎-主键索引"
				}
			]
		},
		{
			"ID": "20221122223304-wjw9cco",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-wjw9cco",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "MyISAM引擎同样使用"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "B+树"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "作为索引结果，叶节点的data域存放的是数据记录的地址。下图为MyISAM表的主索引，"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "col1"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "为主键。\n![[Pasted image 20221122151022.png]]"
				}
			]
		},
		{
			"ID": "20221122223304-ctnrbvd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-ctnrbvd",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中，"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "MyISA最大的特点是，将索引Page和数据Page分离，也就是叶子节点没有数据，只有对应数据的地址。"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-ib6iwvv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-ib6iwvv",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "相较于InnoDB索引，InnoDB是将索引和数据放在一起的。"
				}
			]
		},
		{
			"ID": "20221122223304-udjdn2w",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-udjdn2w",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\n--终端A\nmysql\u003e create database myisam_test;  --创建数据库 \nQuery OK, 1 row affected (0.00 sec)\n\nmysql\u003e use myisam_test; \nDatabase changed\nmysql\u003e create table mtest(\n-\u003e id int primary key,\n-\u003e name varchar(11) not null\n-\u003e )engine=MyISAM;\nQuery OK, 0 rows affected (0.01 sec) \n\n\n--终端B\n--使用engine=MyISAM\n[root@VM-0-3-centos mysql]# cd /var/lib/mysql --进入mysql数据目录\n[root@VM-0-3-centos mysql]# ls myisam_test/ -al  --mysql数据目录下 \ntotal 28\ndrwxr-x---  2 mysql mysql 4096 Jun 13 13:33 . \ndrwxr-x--x 13 mysql mysql 4096 Jun 13 13:32 ..\n-rw-r-----  1 mysql mysql   61 Jun 13 13:32 db.opt\n-rw-r----- 1 mysql mysql 8586 Jun 13 13:33 mtest.frm --表结构数据\n-rw-r-----  1 mysql mysql    0 Jun 13 13:33 mtest.MYD   --该表对应的数据，当前没有数据，所以是0 \n-rw-r-----  1 mysql mysql 1024 Jun 13 13:33 mtest.MYI   --该表对应的主键索引数据\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-zssefjp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-zssefjp",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中，"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "MyISAM这种用户数据与索引数据分离的索引方案，叫做"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "非聚簇索引"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-aubhfrn",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-aubhfrn",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "--终端A\nmysql\u003e create database innodb_test;       --创建数据库 \nQuery OK, 1 row affected (0.00 sec)\n\nmysql\u003e use innodb_test; \nDatabase changed\nmysql\u003e create table itest(\n-\u003e id int primary key,\n-\u003e name varchar(11) not null\n-\u003e )engine=InnoDB;\nQuery OK, 0 rows affected (0.02 sec) \n\n\n--终端B\n[root@VM-0-3-centos mysql]# ls innodb_test/ -al \ntotal 120\ndrwxr-x---  2 mysql mysql  4096 Jun 13 13:39 . \ndrwxr-x--x 14 mysql mysql  4096 Jun 13 13:38 ..\n-rw-r-----  1 mysql mysql    61 Jun 13 13:38 db.opt\n-rw-r-----  1 mysql mysql  8586 Jun 13 13:39 itest.frm     --表结构数据\n-rw-r-----  1 mysql mysql 98304 Jun 13 13:39 itest.ibd     --该表对应的主键索引和用户数据，虽然现在 \n一行数据没有，但是该表并不为0，因为有主键索引数据\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-vy76rfh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-vy76rfh",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其中，"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "InnoDB这种用户数据与索引数据在一起索引方案，叫做"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "聚簇索引"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n当然，MysQL除了默认会建立主键索引外，我们用户也有可能建立按照其他列信息建立的索引，一般这种索引可以叫做辅助（普通)索引。"
				}
			]
		},
		{
			"ID": "20221122223304-5tdzuxp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-5tdzuxp",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于MyISAM ,建立辅助（普通）索引和主键索引没有差别，无非就是主键不能重复，而非主键可重复。\n下图就是基于MyISAM的"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "col2"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "建立的索引，和主键索引没有差别\n![[Pasted image 20221122152052.png]]"
				}
			]
		},
		{
			"ID": "20221122223304-rzqd33b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-rzqd33b",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同样，InnoDB除了主键索引，用户也会建立辅助(普通）索引，我们以上表中的"
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "col3"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "建立对应的辅助索引如下图:\n![[Pasted image 20221122152126.png]]\n可以看到，InnoDB的非主键索引中叶子节点并没有数据，而只有对应记录的key值。\n"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "所以通过辅助（普通)索引，找到目标记录，需要两遍索引:首先检索辅助索引获得主键，然后用主键到主索引中检索获得记录。这种过程，就叫做"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "回表查询"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n为何InnoDB针对这种辅助（普通）索引的场景，不给叶子节点也附上数据呢?原因就是太浪费空间了。"
				}
			]
		},
		{
			"ID": "20221122223304-zaw3n4k",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221122223304-zaw3n4k",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "索引操作"
				}
			]
		},
		{
			"ID": "20221122223304-8z3cmtb",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122223304-8z3cmtb",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "主键索引"
				}
			]
		},
		{
			"ID": "20221122223304-puz86ks",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-puz86ks",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "创建主键索引"
				}
			]
		},
		{
			"ID": "20221122223304-szun1mm",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-szun1mm",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-f8ed9cp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-f8ed9cp",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-1un90id",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-1un90id",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第一种方式"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-k5af7oj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-k5af7oj",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "-- 在创建表的时候，直接在字段名后指定    primary key\ncreate table user1(id int primary key, name varchar(30));\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-a7tkja2",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-a7tkja2",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-gbs6qo9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-gbs6qo9",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-aj6m529",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-aj6m529",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第二种方式："
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-10mua9r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-10mua9r",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "-- 在创建表的最后，指定某列或某几列为主键索引\ncreate table user2(id int, name varchar(30), primary key(id));\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-rxc3rq0",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-rxc3rq0",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-n5h7cf4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-n5h7cf4",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-qrjv2mk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-qrjv2mk",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第三种方式："
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-hd89wuc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-hd89wuc",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "create table  user3(id int, name varchar(30)); \n-- 创建表以后再添加主键\nalter table user3 add primary key(id);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-ncjwau7",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-ncjwau7",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "主键索引的特点："
				}
			]
		},
		{
			"ID": "20221122223304-c2tsnvn",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-c2tsnvn",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-mcvfk6v",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-mcvfk6v",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-01k7akj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-01k7akj",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个表中，最多有一个主键索引，当然可以使符合主键"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-9cc49p7",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-9cc49p7",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-sb2nwio",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-sb2nwio",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "主键索引的效率高（主键不可重复）"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-2072up8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-2072up8",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-ppvg8zx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-ppvg8zx",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "创建主键索引的列，它的值不能为null，且不能重复"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-4ogo7t4",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-4ogo7t4",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-1y8nrj6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-1y8nrj6",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "主键索引的列基本上是int"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-mga2ad7",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122223304-mga2ad7",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "唯一索引"
				}
			]
		},
		{
			"ID": "20221122223304-ho11d6a",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-ho11d6a",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "唯一索引的创建"
				}
			]
		},
		{
			"ID": "20221122223304-ph64tyn",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-ph64tyn",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-6igwtoa",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-6igwtoa",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-yjgclb2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-yjgclb2",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第一种方式"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-mgji0mg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-mgji0mg",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "-- 在表定义时，在某列后直接指定unique唯一属性。\ncreate table user4(id int primary key, name varchar(30) unique);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-64qiphl",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-64qiphl",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-qi1wp4l",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-qi1wp4l",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-rpmrmhd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-rpmrmhd",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第二种方式"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-h2s6rv0",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-h2s6rv0",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "-- 创建表时，在表的后面指定某列或某几列为unique\ncreate table user5(id int primary key, name varchar(30), unique(name));\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-d61k90h",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-d61k90h",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-e5p05fk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-e5p05fk",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-u6xavpp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-u6xavpp",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第三种方式"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-d1ed4jf",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-d1ed4jf",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "create table user6(id int primary key, name varchar(30)）； \nalter table user6 add unique(name);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-f86si0u",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-f86si0u",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "唯一索引的特点："
				}
			]
		},
		{
			"ID": "20221122223304-zcsgkkh",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-zcsgkkh",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-z812rn8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-z812rn8",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-ox6sonh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-ox6sonh",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个表中，可以有多个唯一索引"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-lbbzdo8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-lbbzdo8",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-p7fonpm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-p7fonpm",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "查询效率高"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-yec9jcl",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-yec9jcl",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-cmrczbb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-cmrczbb",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果在某一列建立唯一索引，必须保证这列不能有重复数据"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-fdd1g5b",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-fdd1g5b",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-9qlf5rt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-9qlf5rt",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果一个唯一索引上指定not null，等价于主键索引"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-j4svqic",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122223304-j4svqic",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "普通索引"
				}
			]
		},
		{
			"ID": "20221122223304-zin3348",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-zin3348",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "普通索引的创建"
				}
			]
		},
		{
			"ID": "20221122223304-xfcr4ua",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-xfcr4ua",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-xfeed4v",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-xfeed4v",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-zzmzkve",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-zzmzkve",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第一种方式"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-ceuzvqd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-ceuzvqd",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "create table user8(id int primary key, \n\tname varchar(20),\n\temail varchar(30),\n\tindex(name) --在表的定义最后，指定某列为索引 \n);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-ebe6drw",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-ebe6drw",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-3vfif2j",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-3vfif2j",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-rjjg4k1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-rjjg4k1",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第二种方式"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-1trddla",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-1trddla",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "create table user9(id int primary key,  name varchar(20),  email varchar(30)); \nalter table user9 add index(name); --创建完表以后指定某列为普通索引\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-bbvkoab",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-bbvkoab",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-r39kjb9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-r39kjb9",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-cmp7p6t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-cmp7p6t",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第三种方式"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-7pa0hgb",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-7pa0hgb",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "create table user10(id int primary key,  name varchar(20),  email varchar(30)); \n\n-- 创建一个索引名为    idx_name 的索引\ncreate index idx_name on user10(name);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-mr7wgcc",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-mr7wgcc",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "普通索引的特点："
				}
			]
		},
		{
			"ID": "20221122223304-99v96xj",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-99v96xj",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-f7a5yis",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-f7a5yis",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-eu1rw9v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-eu1rw9v",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个表中可以有多个普通索引，普通索引在实际开发中用的比较多"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-iyj1t3n",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-iyj1t3n",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-a3l920s",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-a3l920s",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果某列需要创建索引，但是该列有重复的值，那么我们就应该使用普通索引"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-mp2mcoz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122223304-mp2mcoz",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "全文索引"
				}
			]
		},
		{
			"ID": "20221122223304-zut0vb0",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221122223304-zut0vb0",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "全文索引的创建"
				}
			]
		},
		{
			"ID": "20221122223304-r3dmjtj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-r3dmjtj",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当对文章字段或有大量文字的字段进行检索时，会使用到全文索引。"
				},
				{
					"Type": "NodeMark",
					"Data": "mark",
					"Children": [
						{
							"Type": "NodeMark2OpenMarker"
						},
						{
							"Type": "NodeText",
							"Data": "MySQL提供全文索引机制，但是有要求，要求表的存储引擎必是"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "MyISAM"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "，而且默认的全文索引支持英文，"
						},
						{
							"Type": "NodeStrong",
							"Data": "strong",
							"Children": [
								{
									"Type": "NodeStrongA6kOpenMarker",
									"Data": "**"
								},
								{
									"Type": "NodeText",
									"Data": "不支持中文"
								},
								{
									"Type": "NodeStrongA6kCloseMarker",
									"Data": "**"
								}
							]
						},
						{
							"Type": "NodeMark2CloseMarker"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "。如果对中文进行全文检索，可以使用sphinx的中文版(coreseek)。"
				}
			]
		},
		{
			"ID": "20221122223304-wjj25i6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-wjj25i6",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "CREATE TABLE articles (\n\tid INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY, \n\ttitle VARCHAR(200),\n\tbody TEXT,\n\tFULLTEXT (title,body) \n)engine=MyISAM;\n\n--插入数据\nINSERT INTO articles (title,body) VALUES\n('MySQL Tutorial','DBMS stands for DataBase ...'),\n('How To Use MySQL Well','After you went through a ...'),\n('Optimizing MySQL','In this tutorial we will show ...'),\n('1001 MySQL Tricks','1. Never run mysqld as root. 2. ...'), \n('MySQL vs. YourSQL','In the following database comparison ...'), \n('MySQL Security','When configured properly, MySQL ...');\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-pkxxxhp",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-pkxxxhp",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-g3lbwil",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-g3lbwil",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-m94pb6f",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-m94pb6f",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "查询有没有database数据\n如果使用如下查询方式，虽然查询出数据，但是没有使用到全文索引"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-gk5qutk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-gk5qutk",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "select * from articles where body like '%database%';\n+----+-------------------+------------------------------------------+\n| id | title             | body                                     |\n+----+-------------------+------------------------------------------+\n|  1 | MySQL Tutorial    | DBMS stands for DataBase ...             |\n|  5 | MySQL vs. YourSQL | In the following database comparison ... |\n+----+-------------------+------------------------------------------+\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-hui0urc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-hui0urc",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以用"
				},
				{
					"Type": "NodeStrong",
					"Data": "strong",
					"Children": [
						{
							"Type": "NodeStrongA6kOpenMarker",
							"Data": "**"
						},
						{
							"Type": "NodeText",
							"Data": "explain"
						},
						{
							"Type": "NodeStrongA6kCloseMarker",
							"Data": "**"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "工具看一下，是否使用到索引"
				}
			]
		},
		{
			"ID": "20221122223304-sidtqmc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-sidtqmc",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "explain select * from articles where body like '%database%'\\G\n*************************** 1. row ***************************\n           id: 1\n  select_type: SIMPLE\n        table: articles\n   partitions: NULL\n         type: ALL\npossible_keys: NULL\n          key: NULL  \u003c== key为null表示没有用到索引\n      key_len: NULL\n          ref: NULL\n         rows: 6\n     filtered: 16.67\n        Extra: Using where\n1 row in set, 1 warning (0.01 sec)\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-d1wb41k",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-d1wb41k",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-qecsesa",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-qecsesa",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-mb3hbao",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-mb3hbao",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如何使用全文索引呢？"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-j2so3xm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-j2so3xm",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "select * from articles where match(title , body) against ('database');\n+----+-------------------+------------------------------------------+\n| id | title             | body                                     |\n+----+-------------------+------------------------------------------+\n|  5 | MySQL vs. YourSQL | In the following database comparison ... |\n|  1 | MySQL Tutorial    | DBMS stands for DataBase ...             |\n+----+-------------------+------------------------------------------+\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-adhmh39",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-adhmh39",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过explain来分析这个sql语句"
				}
			]
		},
		{
			"ID": "20221122223304-ps9pnni",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-ps9pnni",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " explain select * from articles where match(title , body) against ('database') \\G\n*************************** 1. row ***************************\n           id: 1\n  select_type: SIMPLE\n        table: articles\n   partitions: NULL\n         type: fulltext\npossible_keys: title\n          key: title  \u003c== key用到了title\n      key_len: 0\n          ref: const\n         rows: 1\n     filtered: 100.00\n        Extra: Using where\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-r1ap9fr",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122223304-r1ap9fr",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "查询索引"
				}
			]
		},
		{
			"ID": "20221122223304-qrj6ytb",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-qrj6ytb",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-25p626s",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-25p626s",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-il3bnlp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-il3bnlp",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第一种方法："
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "show keys from 表名"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-slq7o1r",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20221122223304-slq7o1r",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "c3Fs"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "mysql\u003e show keys from exam_result\\G\n*************************** 1. row ***************************\n        Table: exam_result   \u003c= 表名\n   Non_unique: 0             \u003c= 0表示唯一索引\n     Key_name: PRIMARY       \u003c= 主键索引\n Seq_in_index: 1\n  Column_name: id            \u003c= 索引在哪列\n    Collation: A\n  Cardinality: 6\n     Sub_part: NULL\n       Packed: NULL\n         Null:\n   Index_type: BTREE        \u003c= 以二叉树形式的索引\n      Comment:\nIndex_comment:\n      Visible: YES\n   Expression: NULL\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20221122223304-54l3l41",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-54l3l41",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第二种方法: "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "show index from 表名; "
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-7ze3rfw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-7ze3rfw",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第三种方法（信息比较简略）： "
				},
				{
					"Type": "NodeCodeSpan",
					"Data": "code",
					"Children": [
						{
							"Type": "NodeCodeSpanOpenMarker"
						},
						{
							"Type": "NodeCodeSpanContent",
							"Data": "desc 表名;"
						},
						{
							"Type": "NodeCodeSpanCloseMarker"
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-sbrygow",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221122223304-sbrygow",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "删除索引"
				}
			]
		},
		{
			"ID": "20221122223304-ilq182g",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-ilq182g",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-g5tcih8",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-g5tcih8",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-diagmzk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-diagmzk",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第一种方法-删除主键索引："
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "alter table 表名    drop primary key;"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-ppts3ca",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-ppts3ca",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-yufvdhs",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-yufvdhs",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第二种方法-其他索引的删除： "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "alter table 表名    drop index 索引名;"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "   索引名就是show keys from 表名中的 Key_name 字段\n"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "alter table user10 drop index idx_name;"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-a00gn7w",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-a00gn7w",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-3dnysv3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-3dnysv3",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "第三种方法方法： "
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "drop index 索引名 on 表名"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								},
								{
									"Type": "NodeText",
									"Data": "\n"
								},
								{
									"Type": "NodeCodeSpan",
									"Data": "code",
									"Children": [
										{
											"Type": "NodeCodeSpanOpenMarker"
										},
										{
											"Type": "NodeCodeSpanContent",
											"Data": "drop index name on user8;"
										},
										{
											"Type": "NodeCodeSpanCloseMarker"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-cot8bt3",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221122223304-cot8bt3",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "索引创建原则"
				}
			]
		},
		{
			"ID": "20221122223304-418jwvr",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221122223304-418jwvr",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"ID": "20221122223304-1lgi7m9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-1lgi7m9",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-kmvwnyo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-kmvwnyo",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "比较频繁作为查询条件的字段应该创建索引"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-6prxm67",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-6prxm67",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-ftw1q8c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-ftw1q8c",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "唯一性太差的字段不适合单独创建索引，即使频繁作为查询条件"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-8t92v42",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-8t92v42",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-rtwrw0e",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-rtwrw0e",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "更新非常频繁的字段不适合作创建索引"
								}
							]
						}
					]
				},
				{
					"ID": "20221122223304-ebie57t",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221122223304-ebie57t",
						"updated": "20221122223304"
					},
					"Children": [
						{
							"ID": "20221122223304-48m25k4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221122223304-48m25k4",
								"updated": "20221122223304"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "不会出现在where子句中的字段不该创建索引"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221122223304-bdllfqs",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20221122223304-bdllfqs",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其他概念--自行了解："
				}
			]
		},
		{
			"ID": "20221122223304-9f0ajbw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221122223304-9f0ajbw",
				"updated": "20221122223304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "复合索引\n索引最左匹配原则\n索引覆盖"
				}
			]
		}
	]
}