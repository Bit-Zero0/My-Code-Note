{
	"ID": "20220722153052-t26rxxj",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220722153052-t26rxxj",
		"title": "Linux IO操作",
		"updated": "20230317221240"
	},
	"Children": [
		{
			"ID": "20220722153059-wd67iba",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220722153059-wd67iba",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "I/O的一些概念"
				}
			]
		},
		{
			"ID": "20220722153059-tpmqxgd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-tpmqxgd",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "C语言"
				},
				{
					"Type": "NodeText",
					"Data": "中会默认打开三个"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "输入输出流"
				},
				{
					"Type": "NodeText",
					"Data": " ： "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "stdin"
				},
				{
					"Type": "NodeText",
					"Data": " ， "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "stdout"
				},
				{
					"Type": "NodeText",
					"Data": " , "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "stderr"
				},
				{
					"Type": "NodeText",
					"Data": " 。\n仔细观察发现，这三个流的类型都是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "FILE*"
				},
				{
					"Type": "NodeText",
					"Data": " , "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": " fopen"
				},
				{
					"Type": "NodeText",
					"Data": "返回值类型，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "文件指针"
				}
			]
		},
		{
			"ID": "20220722153059-ceib7qp",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220722153059-ceib7qp",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220722153059-gv8hyc6",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220722153059-gv8hyc6",
						"updated": "20220722153059"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "stdin"
						},
						{
							"Type": "NodeText",
							"Data": " : 标准输入\n"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "stdout"
						},
						{
							"Type": "NodeText",
							"Data": "：标准输出\n"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "stderr"
						},
						{
							"Type": "NodeText",
							"Data": "：标准错误"
						}
					]
				}
			]
		},
		{
			"ID": "20220722153059-1b42m7a",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-1b42m7a",
				"updated": "20230317212854"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317212848.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​\n所有的语言上的对“文件”的操作，都必须"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "贯穿OS"
				},
				{
					"Type": "NodeText",
					"Data": "!"
				}
			]
		},
		{
			"ID": "20220722153059-dtykgtp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-dtykgtp",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "操作系统不相信任何人，访问操作系统，需要通过"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong mark",
					"TextMarkTextContent": "系统调用接口"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "的！"
				},
				{
					"Type": "NodeText",
					"Data": "！！"
				}
			]
		},
		{
			"ID": "20220722153059-hu2rm5t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-hu2rm5t",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "几乎所有的语言"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "fopen"
				},
				{
					"Type": "NodeText",
					"Data": " , "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "fclose"
				},
				{
					"Type": "NodeText",
					"Data": " , "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "fread"
				},
				{
					"Type": "NodeText",
					"Data": " , "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "fwrite"
				},
				{
					"Type": "NodeText",
					"Data": "  ,  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "fgets"
				},
				{
					"Type": "NodeText",
					"Data": " , "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "fputs"
				},
				{
					"Type": "NodeText",
					"Data": " , "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "fgetc"
				},
				{
					"Type": "NodeText",
					"Data": " ,  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "fputc"
				},
				{
					"Type": "NodeText",
					"Data": "等底层一定需要使用OS提供的系统调用！！！"
				}
			]
		},
		{
			"ID": "20220722153059-9nefv1u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-9nefv1u",
				"updated": "20220722153156"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其实是可以把输出的内容 ，通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220722135953-zet60pa",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "输出重定向"
				},
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": " 输出到其他文件中的"
				}
			]
		},
		{
			"ID": "20220722153059-ibd787d",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722153059-ibd787d",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e\n\nint main()\n{\n  FILE* fp = fopen(\"./log.txt\", \"r\");\n\n  if(NULL == fp)\n  {\n    perror(\"fopen\");\n    return 1;\n  }\n\n  char buf[64];\n  while(fgets(buf , sizeof(buf) , fp))\n  {\n    printf(\"%s\",buf);\n  }\n\n  if(!feof(fp))\n  {\n    printf(\"fgets quit not normal!\\n\");\n  }\n  else{\n    printf(\"fgets quit normal! \\n\");\n  }                                                                                                                                               \n\n  fclose(fp);\n  return 0;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220722153059-cldydou",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-cldydou",
				"updated": "20230317212910"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317212904.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220722153236-o2xbn3d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153236-o2xbn3d"
			}
		},
		{
			"ID": "20220722153059-cxft5kx",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220722153059-cxft5kx",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "系统调用接口 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "open"
				}
			]
		},
		{
			"ID": "20220722153059-8jjux0d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-8jjux0d",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "open"
				},
				{
					"Type": "NodeText",
					"Data": " 属于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "系统调用"
				},
				{
					"Type": "NodeText",
					"Data": "的接口，在Linux中使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "2 号手册"
				},
				{
					"Type": "NodeText",
					"Data": "查询。"
				}
			]
		},
		{
			"ID": "20220722153059-k3j7lnc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-k3j7lnc",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "需要导入的头文件"
				}
			]
		},
		{
			"ID": "20220722153059-5s9db9h",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220722153059-5s9db9h",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220722153059-jt4tnts",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220722153059-jt4tnts",
						"updated": "20220722153059"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "\u003csys/types.h\u003e\n\u003csys/stat.h\u003e\n\u003cfcntl.h\u003e"
						}
					]
				}
			]
		},
		{
			"ID": "20220722153059-sb3iggg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-sb3iggg",
				"updated": "20230317212942"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317212916.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​\nopen的返回值："
				}
			]
		},
		{
			"ID": "20220722153059-yg32kyg",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220722153059-yg32kyg",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220722153059-wwpz2gi",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220722153059-wwpz2gi",
						"updated": "20220722153059"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "成功： 返回文件标识符\n失败： 返回 -1"
						}
					]
				}
			]
		},
		{
			"ID": "20220722153300-xxq4qf2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153300-xxq4qf2"
			}
		},
		{
			"ID": "20220722153059-6wt3pds",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722153059-6wt3pds",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数参数解析"
				}
			]
		},
		{
			"ID": "20220722153059-lnfbjsk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-lnfbjsk",
				"updated": "20230317213015"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第一个参数 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "const char* pathname"
				},
				{
					"Type": "NodeText",
					"Data": "​\n 这个参数是代表我们要打开的文件，需要包含路径\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317213010.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220722153059-58kkbm2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-58kkbm2",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第二个参数 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "int flags"
				},
				{
					"Type": "NodeText",
					"Data": "\n表示是我们要对这个文件进行的操作，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "读 写 创建"
				},
				{
					"Type": "NodeText",
					"Data": "\n有三个参数可供我们选择"
				}
			]
		},
		{
			"ID": "20220722153059-ehjft57",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220722153059-ehjft57",
				"updated": "20230317213049"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220722153059-syy1s4g",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220722153059-syy1s4g",
						"updated": "20220724134849"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark strong",
							"TextMarkTextContent": "O_RDONLY:"
						},
						{
							"Type": "NodeText",
							"Data": " 只读打开\n"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark strong",
							"TextMarkTextContent": "O_WRONLY"
						},
						{
							"Type": "NodeText",
							"Data": ": 只写打开\n"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark strong",
							"TextMarkTextContent": "O_RDWR"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark",
							"TextMarkTextContent": " "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark mark",
							"TextMarkTextContent": ": 读，写 打开\n\t\t以上这三个常量，必须"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark strong",
							"TextMarkTextContent": "指定一个且只能指定一"
						},
						{
							"Type": "NodeText",
							"Data": "个"
						}
					]
				},
				{
					"ID": "20220722153059-euyrkw1",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220722153059-euyrkw1",
						"updated": "20230317213049"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark strong",
							"TextMarkTextContent": "O_CREAT"
						},
						{
							"Type": "NodeText",
							"Data": " : 若文件不存在，则创建它。需要使用mode选项，来指明新文件的访问权限\n"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark strong",
							"TextMarkTextContent": "O_APPEND"
						},
						{
							"Type": "NodeText",
							"Data": ": 追加写\n​​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "image.png"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317213034.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "​​"
						}
					]
				}
			]
		},
		{
			"ID": "20220722153059-6vwu8cs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-6vwu8cs",
				"updated": "20230317213107"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "第三参数 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "mode_t mode"
				},
				{
					"Type": "NodeText",
					"Data": "​\n此参数一般在第二个参数使用了 O_CREAT时使用，此参数用来设置我们创建文件的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220722141051-ie7gp0k",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "基本权限"
				},
				{
					"Type": "NodeText",
					"Data": "的。 使用的就是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "八进制"
				},
				{
					"Type": "NodeText",
					"Data": "来控制"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220722141042-5jkjzrd",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "文件权限"
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				}
			]
		},
		{
			"ID": "20230317213121-ylyitl5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317213121-ylyitl5",
				"updated": "20230317213121"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317213100.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​这个 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0644"
				},
				{
					"Type": "NodeText",
					"Data": "​ 设置为\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317213108.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20220722153442-gzf86xd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153442-gzf86xd"
			}
		},
		{
			"ID": "20220722153059-3ndrtym",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722153059-3ndrtym",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "flags 详解"
				}
			]
		},
		{
			"ID": "20220722153059-40p4hqv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-40p4hqv",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "open 的第二个参数 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "int flags"
				},
				{
					"Type": "NodeText",
					"Data": "  ，是一个整型，但是它的参数却又有好几个。"
				}
			]
		},
		{
			"ID": "20220722153059-dzp2ntm",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220722153059-dzp2ntm",
				"updated": "20230317213232"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220722153059-i9tn84s",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220722153059-i9tn84s",
						"updated": "20220722153059"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark strong",
							"TextMarkTextContent": "O_RDONLY:"
						},
						{
							"Type": "NodeText",
							"Data": " 只读打开\n"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark strong",
							"TextMarkTextContent": "O_WRONLY"
						},
						{
							"Type": "NodeText",
							"Data": ": 只写打开\n"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark strong",
							"TextMarkTextContent": "O_RDWR"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark",
							"TextMarkTextContent": " "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark mark",
							"TextMarkTextContent": ": 读，写打开\n以上这三个常量，必须"
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark strong",
							"TextMarkTextContent": "指定一个且只能指定一个"
						}
					]
				},
				{
					"ID": "20220722153059-k6jhieo",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220722153059-k6jhieo",
						"updated": "20230317213201"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark strong",
							"TextMarkTextContent": "O_CREAT"
						},
						{
							"Type": "NodeText",
							"Data": " : 若文件不存在，则创建它。需要使用mode选项，来指明新文件的访问权限"
						}
					]
				},
				{
					"ID": "20230317213232-15mc4bq",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230317213232-15mc4bq",
						"updated": "20230317213232"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "​"
						},
						{
							"Type": "NodeImage",
							"Data": "span",
							"Children": [
								{
									"Type": "NodeBang"
								},
								{
									"Type": "NodeOpenBracket"
								},
								{
									"Type": "NodeLinkText",
									"Data": "image.png"
								},
								{
									"Type": "NodeCloseBracket"
								},
								{
									"Type": "NodeOpenParen"
								},
								{
									"Type": "NodeLinkDest",
									"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317213146.png"
								},
								{
									"Type": "NodeCloseParen"
								}
							]
						},
						{
							"Type": "NodeText",
							"Data": "​\n"
						}
					]
				}
			]
		},
		{
			"ID": "20220722153059-m7v3vst",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-m7v3vst",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "int 类型 有 32个 bit位 ， 而在 flags 中，一个bit位，其实可以代表一个标志。\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "O_WRONLY"
				},
				{
					"Type": "NodeText",
					"Data": " , "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "O_RDONLY"
				},
				{
					"Type": "NodeText",
					"Data": " , "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "O_CREAT"
				},
				{
					"Type": "NodeText",
					"Data": " 等都是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "只有一个比特位"
				},
				{
					"Type": "NodeText",
					"Data": "是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": " 的数据，而且不重复。"
				}
			]
		},
		{
			"ID": "20220722153059-9axh7sn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-9axh7sn",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如："
				}
			]
		},
		{
			"ID": "20220722153059-jp15tv5",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220722153059-jp15tv5",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220722153059-guwnl6p",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220722153059-guwnl6p",
						"updated": "20220722153059"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "#define 0 WRONLY  0x1     0000 0001\n#define 0 RDONLY   0x2    0000 0010\n#define 0 CREAT      0x4    0000 0100"
						}
					]
				}
			]
		},
		{
			"ID": "20220722153502-6r1qiu9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153502-6r1qiu9"
			}
		},
		{
			"ID": "20220722153059-bg3q5yw",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722153059-bg3q5yw",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "open的返回值"
				}
			]
		},
		{
			"ID": "20220722153059-f6xe7te",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722153059-f6xe7te",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e\n#include \u003csys/stat.h\u003e\n#include \u003csys/types.h\u003e\n#include \u003cfcntl.h\u003e\n#include \u003cunistd.h\u003e\n\nint main()\n{\n  int fp = open(\"./test.txt\" , O_WRONLY | O_CREAT , 0644);\n  int fp1 = open(\"./test1.txt\" , O_WRONLY | O_CREAT , 0644);\n  int fp2 = open(\"./test2.txt\" , O_WRONLY | O_CREAT , 0644);\n  int fp3 = open(\"./test3.txt\" , O_WRONLY | O_CREAT , 0644);\n  if(fp \u003c 0)\n  {\n    printf(\"open error\");\n  }\n  \n  printf(\"fd: %d\\n\",fp);\n  printf(\"fd1: %d\\n\",fp1);\n  printf(\"fd2: %d\\n\",fp2);\n  printf(\"fd3: %d\\n\",fp3);\n  \n  close(fp);\n  close(fp1);\n  close(fp2);\n  close(fp3);\n\n  return 0;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230317213358-9pwjnya",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317213358-9pwjnya",
				"updated": "20230317213358"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317213255.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230317213358-u0tcd0w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317213358-u0tcd0w",
				"updated": "20230317213358"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为什么文件的返回值是从3开始？\n因为文件返回值中的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeText",
					"Data": "  ， "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": "  ， "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "2"
				},
				{
					"Type": "NodeText",
					"Data": " ， 是已经被使用的了\n分别对应："
				}
			]
		},
		{
			"ID": "20230317213358-g39c9ni",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20230317213358-g39c9ni",
				"updated": "20230317213358"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20230317213358-3aqi90h",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20230317213358-3aqi90h",
						"updated": "20230317213358"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "0    标准输入       键盘\n1    标准输出       显示器\n2    标准输出      显示器"
						}
					]
				}
			]
		},
		{
			"ID": "20230317213358-efj05p9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317213358-efj05p9",
				"updated": "20230317213404"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317213300.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "进程与文件的关系"
				},
				{
					"Type": "NodeText",
					"Data": "是 一对多 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "1 : n"
				},
				{
					"Type": "NodeText",
					"Data": "​。"
				}
			]
		},
		{
			"ID": "20220722153059-gqcn7tb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-gqcn7tb",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那么，OS要不要把打开的文件在内存中（系统中）管理起来呢？？\n如何管理打开的文件怩？先描述，在组织！！！"
				}
			]
		},
		{
			"ID": "20220722153059-cdei8dp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-cdei8dp",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "C语言中对文件进行管理的结构"
				}
			]
		},
		{
			"ID": "20220722153059-mo56e0h",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722153059-mo56e0h",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "struct file\n{\n\t//包含了打开文件的相关属性\n\t//链接属性\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220905105134-o7v4axy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220905105134-o7v4axy"
			}
		},
		{
			"ID": "20220722153059-ur53cyw",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220722153059-ur53cyw",
				"updated": "20220905105134"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "系统调用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "write"
				},
				{
					"Type": "NodeText",
					"Data": " 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "read"
				}
			]
		},
		{
			"ID": "20220722153059-dpycs0m",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722153059-dpycs0m",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "write"
				}
			]
		},
		{
			"ID": "20220722153059-wyft7cb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-wyft7cb",
				"updated": "20230317213444"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "向指定的文件写入数据\n​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317213439.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220722153059-fktrjvh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220722153059-fktrjvh",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "函数参数详解"
				}
			]
		},
		{
			"ID": "20220722153059-5hlgckg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-5hlgckg",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "int fd"
				},
				{
					"Type": "NodeText",
					"Data": "  就是文件描述符，指的就是我们打开的文件。"
				}
			]
		},
		{
			"ID": "20220722153059-a8dg00q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-a8dg00q",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "const void* buf"
				},
				{
					"Type": "NodeText",
					"Data": "  就是我们要写入的内容"
				}
			]
		},
		{
			"ID": "20220722153059-7cnm9kz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-7cnm9kz",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "size_t"
				},
				{
					"Type": "NodeText",
					"Data": " 就是我们要写入的字节个数"
				}
			]
		},
		{
			"ID": "20220722153059-ce3u8h1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-ce3u8h1",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "返回值"
				},
				{
					"Type": "NodeText",
					"Data": "  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "ssize_t"
				},
				{
					"Type": "NodeText",
					"Data": "  返回的是我们写入的字符量"
				}
			]
		},
		{
			"ID": "20220723074400-hbgovj9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723074400-hbgovj9",
				"updated": "20220723074401"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "注意：在文件中是没有 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "\\0"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": " 的概念， "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "\\0"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": " 只是语言级别的结束符，在文件中是不需要的。"
				}
			]
		},
		{
			"ID": "20220723074411-rlw5w1t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723074411-rlw5w1t"
			}
		},
		{
			"ID": "20220722153059-kj2wpwh",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220722153059-kj2wpwh",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实例"
				}
			]
		},
		{
			"ID": "20220722153059-klz9hif",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722153059-klz9hif",
				"updated": "20220723074550"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e\n#include \u003cunistd.h\u003e\n#include \u003csys/types.h\u003e\n#include \u003csys/stat.h\u003e\n#include \u003cfcntl.h\u003e\n#include \u003cstring.h\u003e\n\nint main()\n{\n\n  int fd = open(\"./log.txt\", O_WRONLY | O_CREAT , 0644);\n  if(fd \u003c 0)\n  {\n    perror(\"file fail\");\n    return 1;\n  }\n\n  const char* msg = \"hello Linus\\n\";\n\n  int count = 5;\n  while(count--) //要写入五次 msg 的内容\n  {\n    write(fd , msg , strlen(msg)); //在写入文件的过程中我们需要写入 \\0 吗？  不需要，\\0作为字符串结束，只是编程语言的规定。\n  }\n\n  close(fd);\n  return 0\n}  \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220722153059-orbvizz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-orbvizz",
				"updated": "20230317214229"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317214212.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220722153831-1x590pm",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153831-1x590pm"
			}
		},
		{
			"ID": "20220722153059-rjgtsen",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722153059-rjgtsen",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "read"
				}
			]
		},
		{
			"ID": "20220722153059-xaz3pxn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-xaz3pxn",
				"updated": "20230317214233"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "向指定的文件读取数据\n​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317214222.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "int fd"
				},
				{
					"Type": "NodeText",
					"Data": "​  就是文件描述符，指的就是我们打开的文件。"
				}
			]
		},
		{
			"ID": "20220722153059-6qhihif",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-6qhihif",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "void* buf"
				},
				{
					"Type": "NodeText",
					"Data": " 表示将读到的内容写到 buf数组中"
				}
			]
		},
		{
			"ID": "20220722153059-n31blzq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-n31blzq",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "size_t"
				},
				{
					"Type": "NodeText",
					"Data": " 就是我们要读取的字节个数"
				}
			]
		},
		{
			"ID": "20220722153059-uh4ygii",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-uh4ygii",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "返回值"
				},
				{
					"Type": "NodeText",
					"Data": "  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "ssize_t"
				},
				{
					"Type": "NodeText",
					"Data": "  返回的是我们写入的字符量"
				}
			]
		},
		{
			"ID": "20220722153933-b7flep4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153933-b7flep4"
			}
		},
		{
			"ID": "20220722153059-ww2pbzz",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220722153059-ww2pbzz",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实例"
				}
			]
		},
		{
			"ID": "20220722153059-zytr5bb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-zytr5bb",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "注意：在文件中是没有 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "\\0"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": " 的概念， "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "\\0"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": " 只是语言级别的结束符，在文件中是不需要的。"
				}
			]
		},
		{
			"ID": "20220722153059-kgnzhzo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220722153059-kgnzhzo",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e\n#include \u003cunistd.h\u003e\n#include \u003csys/types.h\u003e\n#include \u003csys/stat.h\u003e\n#include \u003cfcntl.h\u003e\n\nint main()\n{\n  int fd = open(\"./log.txt\" , O_RDONLY);\n  if(fd \u003c 0)\n  {\n    perror(\"open\");\n    return 1;\n  }\n\n  char buf[1024]; //这就是我们要用来接收读取到的文件数据的数组\n  size_t s = read(fd , buf , sizeof(buf)-1 ); //在文件中虽然没有 \\0 的概念，但是在C语言中是有的，所以留一个空位来放 \\0\n  if(s \u003e 0)\n  {\n    buf[s] = 0; //s放回的就是 read() 读取到的字节个数，所以在 s 处放 \\0 就是相当于结束符。\n    printf(\"%s\\n\" , buf);\n  }\n\n  close(fd);\n\n  return 0;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220722153059-98z14hi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-98z14hi",
				"updated": "20230317214444"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317214428.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220722154024-dg5y6e3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722154024-dg5y6e3"
			}
		},
		{
			"ID": "20220723080218-86y0juk",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220723080218-86y0juk",
				"updated": "20220723080256"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文件在哪？是什么？"
				}
			]
		},
		{
			"ID": "20220723080426-3ett8wn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723080426-3ett8wn",
				"updated": "20220723080448"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果一个文件，没有被打开，这个文件在哪里？  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "磁盘"
				}
			]
		},
		{
			"ID": "20220723080426-nw81w1c",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723080426-nw81w1c",
				"updated": "20220723080503"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果我创建一个空文件，该文件要不要占磁盘空间？  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong mark",
					"TextMarkTextContent": "必须的！"
				}
			]
		},
		{
			"ID": "20220723080426-u1t054l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723080426-u1t054l",
				"updated": "20220723080511"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文件有属性，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "属性也是数据"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220723080513-mn50yw1",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220723080513-mn50yw1",
				"updated": "20220723081815"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220723081744-uqcs1ne",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220723081744-uqcs1ne",
						"updated": "20220723081815"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "mark strong",
							"TextMarkTextContent": "磁盘文件 = 文件内容 + 文件属性"
						}
					]
				}
			]
		},
		{
			"ID": "20220723080244-6nx0vys",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723080244-6nx0vys",
				"updated": "20220905105345"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在文件还没打开时，OS怎么对"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "打开的文件"
				},
				{
					"Type": "NodeText",
					"Data": "进行管理？\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark code",
					"TextMarkTextContent": "struct file"
				},
				{
					"Type": "NodeText",
					"Data": " 。"
				}
			]
		},
		{
			"ID": "20220723082213-wh6hgf9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723082213-wh6hgf9"
			}
		},
		{
			"ID": "20220722153059-8kbs55c",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220722153059-8kbs55c",
				"updated": "20220723073243"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文件描述符 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "fd"
				}
			]
		},
		{
			"ID": "20220722153059-5lm9mdw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-5lm9mdw",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "通过对 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "open"
				},
				{
					"Type": "NodeText",
					"Data": " 函数的学习，我们知道了文件描述符就是一个小整数."
				}
			]
		},
		{
			"ID": "20220722153059-i0nt81f",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220722153059-i0nt81f",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "0 \u0026 1 \u0026 2"
				}
			]
		},
		{
			"ID": "20220722153059-f9d6l82",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-f9d6l82",
				"updated": "20220723075203"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Linux"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "进程"
				},
				{
					"Type": "NodeText",
					"Data": "默认情况下会有"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "3个缺省"
				},
				{
					"Type": "NodeText",
					"Data": "打开的文件描述符，分别是标准输入 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeText",
					"Data": "， 标准输出 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": "， 标准错误 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "2"
				},
				{
					"Type": "NodeText",
					"Data": "  ."
				}
			]
		},
		{
			"ID": "20220722153059-65ec2ho",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-65ec2ho",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "0 ,1 ,2"
				},
				{
					"Type": "NodeText",
					"Data": "  对应的物理设备一般是："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "键盘，显示器，显示器"
				},
				{
					"Type": "NodeText",
					"Data": " 。"
				}
			]
		},
		{
			"ID": "20220722153059-h61qpnr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-h61qpnr",
				"updated": "20230317214449"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317214436.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​\n在我们的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "task_struct"
				},
				{
					"Type": "NodeText",
					"Data": "​ 中包含了一个指针 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "struct files_struct* fs"
				},
				{
					"Type": "NodeText",
					"Data": "​ 。"
				}
			]
		},
		{
			"ID": "20220722153059-1dwlaws",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-1dwlaws",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "struct files_struct* fs"
				},
				{
					"Type": "NodeText",
					"Data": " 指向了文件操作符结构体"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "struct file_struct"
				}
			]
		},
		{
			"ID": "20220722153059-rz0ovbd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-rz0ovbd",
				"updated": "20220722153059"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "struct file_struct"
				},
				{
					"Type": "NodeText",
					"Data": "中就包含了我们所需要的指向文件描述符的指针数组"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "struct file* fd_array[]"
				}
			]
		},
		{
			"ID": "20220722153059-k9b4fbh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-k9b4fbh",
				"updated": "20220723080108"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "struct file* fd_array[]"
				},
				{
					"Type": "NodeText",
					"Data": " 数组中是从 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeText",
					"Data": " 开始的，每一个指向指针指向一个文件，这个文件是一个结构体"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "struct file"
				},
				{
					"Type": "NodeText",
					"Data": " 。"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeText",
					"Data": " 标准输入，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": " 标准输出 ，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "2"
				},
				{
					"Type": "NodeText",
					"Data": " 标准错误   ，从 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "3"
				},
				{
					"Type": "NodeText",
					"Data": " 开始的 fd描述符就是指向我们创建的文件了。"
				}
			]
		},
		{
			"ID": "20220722153059-15zyndr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722153059-15zyndr",
				"updated": "20230317214554"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317214545.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220722154033-awuk6ah",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220722154033-awuk6ah",
				"updated": "20220723084240"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而在每一个外设都会在驱动层有"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "特有"
				},
				{
					"Type": "NodeText",
					"Data": "的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "IO"
				},
				{
					"Type": "NodeText",
					"Data": "，是和其他外设是不同的，如：键盘是write{} ;  显示器是 read()；"
				}
			]
		},
		{
			"ID": "20220723084311-s4dmgk9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723084311-s4dmgk9",
				"updated": "20220723084910"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那在struct file 中怎么找到对应的外设或IO呢？  其实这就像C++中的多态一样，而在C语言中使用的就是函数指针来进行多态 ， 在struct file 中就有两个函数指针 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "int (*read)()"
				},
				{
					"Type": "NodeText",
					"Data": "  , "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "int (*write)()"
				},
				{
					"Type": "NodeText",
					"Data": "来与外设和IO进行交互。"
				}
			]
		},
		{
			"ID": "20220723085340-6gz6fep",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723085340-6gz6fep"
			}
		},
		{
			"ID": "20220723085340-lud1cy9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723085340-lud1cy9",
				"updated": "20220723085448"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "既然文件描述符 1 ， 2 ，对应的是标准输出，那我们可不可以使用他们进行直接输出呢？"
				}
			]
		},
		{
			"ID": "20220723085448-ua1kkce",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220723085448-ua1kkce",
				"updated": "20220723151204"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                    \n#include \u003cunistd.h\u003e                                                                                                                                   \n#include \u003cstring.h\u003e                                                                                                                                   \n                                                                                                                                                      \nint main()                                                                                                                                            \n{                                                                                                                                                     \n    const char* msg = \"hello code\\n\";                                                                                                                 \n    write(1 , msg,strlen(msg));                                                                                                                       \n    write(1 , msg,strlen(msg));                                                                                                                       \n    write(1 , msg,strlen(msg));                                                                                                                       \n    write(1 , msg,strlen(msg));                                                                                                                       \n    write(1 , msg,strlen(msg));                                                                                                                       \n    write(1 , msg,strlen(msg));                                                                                                                       \n    return 0;                                                                                                                                         \n}             \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220723084214-1uwn2vn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723084214-1uwn2vn",
				"updated": "20230317214605"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317214600.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220723151244-efqntyq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723151244-efqntyq"
			}
		},
		{
			"ID": "20220723151349-5lgeguv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723151349-5lgeguv",
				"updated": "20220818220629"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "标准错误流 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "2"
				},
				{
					"Type": "NodeText",
					"Data": " 也可以进行输出"
				}
			]
		},
		{
			"ID": "20220723151334-gwymey6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220723151334-gwymey6",
				"updated": "20220723151341"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                    \n#include \u003cunistd.h\u003e                                                                                                                                   \n#include \u003cstring.h\u003e                                                                                                                                   \n                                                                                                                                                      \nint main()                                                                                                                                            \n{                                                                                                                                                     \n    const char* msg = \"hello code\\n\";                                                                                                                 \n    write(2 , msg,strlen(msg));                                                                                                                       \n    write(2 , msg,strlen(msg));                                                                                                                       \n    write(2 , msg,strlen(msg));                                                                                                                       \n    write(2 , msg,strlen(msg));                                                                                                                       \n    write(2 , msg,strlen(msg));                                                                                                                       \n    write(2 , msg,strlen(msg));                                                                                                                       \n    return 0;                                                                                                                                         \n} \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220723151346-o32u540",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723151346-o32u540",
				"updated": "20230317214618"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317214612.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220723201022-61x8fp0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723201022-61x8fp0"
			}
		},
		{
			"ID": "20220723201022-jpf0kev",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723201022-jpf0kev"
			}
		},
		{
			"ID": "20220723201023-6qd8dds",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723201023-6qd8dds",
				"updated": "20220723201112"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "既然 1 ,  2 这个两个fd，都可以输出，那 0 这标准输入可以进行输入吗？  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "当然可以"
				}
			]
		},
		{
			"ID": "20220723201113-jx1fxgm",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220723201113-jx1fxgm",
				"updated": "20220723201640"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                    \n#include \u003cunistd.h\u003e                                                                                                                                                                                                                                                                      \n                                                                                                                                                    \nint main()                                                                                                                                          \n{                                                                                                                                                   \n    char buf[64];                                                                                                                                   \n    int s  = read(0 , buf , sizeof(buf));                                                                                                           \n    buf[s] = 0; //这表示 \\0                                                                                                                           \n    printf(\"echo# %s\\n\",buf);                                                                                                                                                                                                                                             \n    return 0;                                                                                                                                       \n} \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220723201738-ho5nigr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723201738-ho5nigr",
				"updated": "20230317214628"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317214623.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220723201741-6hnr1ei",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723201741-6hnr1ei",
				"updated": "20220723201851"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为什么结果下面会有一个空行？"
				},
				{
					"Type": "NodeText",
					"Data": " "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "因为在读取的过程中会读取我们的 回车（也就是\\n）"
				}
			]
		},
		{
			"ID": "20220723202002-bcu81k8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723202002-bcu81k8"
			}
		},
		{
			"ID": "20220723202003-kasu6dn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723202003-kasu6dn"
			}
		},
		{
			"ID": "20220723201853-0obl5gp",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220723201853-0obl5gp",
				"updated": "20220723202000"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文件描述符的分配规则"
				}
			]
		},
		{
			"ID": "20220723202006-850pltc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723202006-850pltc",
				"updated": "20220725125219"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文件描述符的分配规则，给新文件分配的fd，是从fd_array中找一个最小的，没有被使用的，作为新的fd！"
				}
			]
		},
		{
			"ID": "20220723203534-1fevo51",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723203534-1fevo51",
				"updated": "20220818202614"
			}
		},
		{
			"ID": "20220723210230-ujy1mfj",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220723210230-ujy1mfj",
				"updated": "20220723210354"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeText",
					"Data": " 标准输入流"
				}
			]
		},
		{
			"ID": "20220723203536-jvho7cs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723203536-jvho7cs",
				"updated": "20220723203736"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我们关闭 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeText",
					"Data": " 后，建立新文件，新文件就会占用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeText",
					"Data": " 这个文件描述符"
				}
			]
		},
		{
			"ID": "20220723203357-ttj8tl4",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220723203357-ttj8tl4",
				"linewrap": "true",
				"updated": "20220725230101"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "  #include \u003cstdio.h\u003e\n  #include \u003cunistd.h\u003e\n  #include \u003cstring.h\u003e\n  #include \u003csys/types.h\u003e\n  #include \u003csys/stat.h\u003e \n  #include \u003cfcntl.h\u003e\n                                                                                                                                                \n  int main()\n  {\n      close(0);\n      int fd = open(\"./log.txt\" , O_CREAT | O_WRONLY , 0644);\n      printf(\"%d\\n\" , fd);\n      return 0;\n  }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220723204040-nphew32",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723204040-nphew32",
				"updated": "20230317215129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317215121.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220723204042-1t6j5ez",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723204042-1t6j5ez"
			}
		},
		{
			"ID": "20220723204058-uyt3vpv",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220723204058-uyt3vpv",
				"updated": "20220818164642"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2"
				},
				{
					"Type": "NodeText",
					"Data": "标准错误流"
				}
			]
		},
		{
			"ID": "20220723203648-th7z3ws",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723203648-th7z3ws",
				"updated": "20220723203731"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "再如，我们关闭 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2"
				},
				{
					"Type": "NodeText",
					"Data": " ， 新文件也会占用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2"
				},
				{
					"Type": "NodeText",
					"Data": " 这个文件描述符"
				}
			]
		},
		{
			"ID": "20220723204102-e1cxdbo",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220723204102-e1cxdbo",
				"updated": "20220723204322"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                     \n#include \u003cunistd.h\u003e                                                                                                                                    \n#include \u003cstring.h\u003e                                                                                                                                    \n#include \u003csys/stat.h\u003e                                                                                                                                  \n#include \u003csys/types.h\u003e                                                                                                                                 \n#include \u003cfcntl.h\u003e                                                                                                                                     \n                                                                                                                                                       \nint main()                                                                                                                                             \n{                                                                                                                                                      \n    close(2);                                                                                                                                          \n    int fd = open(\"./log.txt\" , O_CREAT | O_WRONLY , 0644);                                                                                            \n    printf(\"%d\\n\" , fd);                                                                                                                               \n    return 0;                                                                                                                                          \n}   \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220723203725-rwkrnh6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723203725-rwkrnh6",
				"updated": "20230317215235"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317215159.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220723204327-cgzt9lu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723204327-cgzt9lu"
			}
		},
		{
			"ID": "20220818164345-ykkps1q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220818164345-ykkps1q"
			}
		},
		{
			"ID": "20220723210309-62ecjoi",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220723210309-62ecjoi",
				"updated": "20220723210430"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": " 标准输出流"
				}
			]
		},
		{
			"ID": "20220723210430-kam8fsd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723210430-kam8fsd",
				"updated": "20220723210548"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为什么不把 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": " 放在前面呢， "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "因为 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "比较特殊"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220723210549-s60pa3l",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220723210549-s60pa3l",
				"updated": "20220723211311"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                     \n#include \u003csys/stat.h\u003e                                                                                                                                  \n#include \u003csys/types.h\u003e                                                                                                                                 \n#include \u003cfcntl.h\u003e                                                                                                                                     \n#include \u003cunistd.h\u003e                                                                                                                                    \nint main()                                                                                                                                           \n{                                                                                                                                                    \n    close(1);                                                                                                                                        \n    int fd = open(\"./log.txt\" , O_WRONLY|O_CREAT , 0644);                                                                                            \n    printf(\"fd = %d\\n\" , fd);                                                                                                                        \n    return 0;                                                                                                                                        \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230317215307-y6dbre3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317215307-y6dbre3",
				"updated": "20230317215307"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317215241.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230317215307-34bx1io",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317215307-34bx1io",
				"updated": "20230317215307"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当我们运行程序时，发现并没有在屏幕上显示结果，结果去哪了？"
				}
			]
		},
		{
			"ID": "20230317215307-8drie5h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317215307-8drie5h",
				"updated": "20230317215307"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其实在我们的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "log.txt"
				},
				{
					"Type": "NodeText",
					"Data": "​ 文件中\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317215248.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230317215306-w805x6j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317215306-w805x6j"
			}
		},
		{
			"ID": "20230317215306-93gcviw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317215306-93gcviw"
			}
		},
		{
			"ID": "20230317215259-6he2bw9",
			"Type": "NodeHeading",
			"HeadingLevel": 4,
			"Properties": {
				"id": "20230317215259-6he2bw9",
				"updated": "20230317215303"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": "​标准输出流与编程语言的关系"
				}
			]
		},
		{
			"ID": "20220723211728-j1q7xcj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723211728-j1q7xcj",
				"updated": "20220723212123"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "标准输出流"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": "对应的是显示器文件，当关闭了标准输出流"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": "时，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": "就处于空缺状态，我们创建后log.txt文件后，log.txt文件就会对应 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220723212615-0ieag04",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723212615-0ieag04"
			}
		},
		{
			"ID": "20220723212616-yjfmhak",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723212616-yjfmhak",
				"updated": "20220723213046"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在编程语言，所有的IO操作，其实都是对OS的系统调用进行封装，而这里的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "printf"
				},
				{
					"Type": "NodeText",
					"Data": "就是对"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "open"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "write"
				},
				{
					"Type": "NodeText",
					"Data": "中之一的封装，而printf的本质是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "stdout"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "stdout"
				},
				{
					"Type": "NodeText",
					"Data": "的返回值是"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "FILE*"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "FILE*"
				},
				{
					"Type": "NodeText",
					"Data": "也是C语言层面上的结构体，但在这个结构体中，一定包含一个整数，这个整数就是文件打开对应的fd。"
				}
			]
		},
		{
			"ID": "20220723212347-wg86xva",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723212347-wg86xva",
				"updated": "20230317215356"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317215323.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220723212128-q8754x0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723212128-q8754x0",
				"updated": "20220723212612"
			}
		},
		{
			"ID": "20220723211348-4agdy6k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723211348-4agdy6k",
				"updated": "20220724131653"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong mark",
					"TextMarkTextContent": "因为编程语言的IO函数只认对应的fd_array数组中的fd，而不管fd对应的是不是显示器文件或键盘文件"
				},
				{
					"Type": "NodeText",
					"Data": "，所以我们打印的数据都进入的log.txt文件中。"
				}
			]
		},
		{
			"ID": "20220723213446-g5mvojc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220723213446-g5mvojc",
				"updated": "20220724115207"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其实这种操作已经相当于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220722135953-zet60pa",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "输出重定向"
				},
				{
					"Type": "NodeText",
					"Data": "了。"
				}
			]
		},
		{
			"ID": "20220724115208-zad4a4w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724115208-zad4a4w"
			}
		},
		{
			"ID": "20220724115210-scylyjq",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220724115210-scylyjq",
				"updated": "20220724115234"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重定向"
				}
			]
		},
		{
			"ID": "20220724125724-flrliq4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724125724-flrliq4",
				"updated": "20230317215626"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317215421.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20230317215617-g7pbpyi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317215617-g7pbpyi",
				"updated": "20230317215617"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那重定向的本质是什么呢？"
				}
			]
		},
		{
			"ID": "20220724125724-zoe2ecy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724125724-zoe2ecy",
				"updated": "20230317215601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317215540.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220724121051-xb4d35c",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220724121051-xb4d35c",
				"updated": "20220724121106"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "追加重定向"
				}
			]
		},
		{
			"ID": "20220724115235-xxt52kc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724115235-xxt52kc",
				"updated": "20220724115453"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上面的内容已经演示了输出重定向了，那追加重定向要怎么办呢？"
				}
			]
		},
		{
			"ID": "20220724115454-dnac5mb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724115454-dnac5mb",
				"updated": "20220724120654"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 在linux中使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220722135728-z19j2o0",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "man"
				},
				{
					"Type": "NodeText",
					"Data": "的2号手册查找open这个系统调用接口的手册["
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "man 2 open"
				},
				{
					"Type": "NodeText",
					"Data": "]，可以发现，有个选项 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "O_APPEND"
				}
			]
		},
		{
			"ID": "20220724115644-c4v228l",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724115644-c4v228l",
				"updated": "20230317220900"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317220834.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220724115723-2iv0bpc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724115723-2iv0bpc",
				"updated": "20220724115809"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "O_APPEND"
				},
				{
					"Type": "NodeText",
					"Data": "就可以在进行"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220722135953-5apzkb4",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "追加重定向"
				},
				{
					"Type": "NodeText",
					"Data": "了"
				}
			]
		},
		{
			"ID": "20220724120124-wl8b7j6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724120124-wl8b7j6"
			}
		},
		{
			"ID": "20220724115809-bwpb51r",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724115809-bwpb51r",
				"updated": "20220724120215"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在log.txt文件中，已经只有一条数据。"
				}
			]
		},
		{
			"ID": "20220724120126-2ma0jlt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724120126-2ma0jlt",
				"updated": "20230317220909"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317220840.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220724120140-dppma9k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724120140-dppma9k",
				"updated": "20220724120401"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在在open系统调用中，添加"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "O_APPEND"
				},
				{
					"Type": "NodeText",
					"Data": ",并加入五条数据 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "hello Linux"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220724120322-twrfjww",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220724120322-twrfjww",
				"updated": "20220724120554"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                            \n#include \u003csys/stat.h\u003e                                                                                                                                         \n#include \u003csys/types.h\u003e                                                                                                                                        \n#include \u003cfcntl.h\u003e                                                                                                                                            \n#include \u003cunistd.h\u003e                                                                                                                                           \nint main()                                                                                                                                                  \n{                                                                                                                                                           \n    close(1);                                                                                                                                               \n    int fd = open(\"./log.txt\" , O_WRONLY | O_CREAT | O_APPEND, 0644);  //这里添加了O_APPEND选项                                                                                        \n    printf(\"fd = %d\\n\" , fd);                                                                                                                               \n                                                                                                                                                            \n    printf(\"hello Linux\");                                                                                                                                  \n    printf(\"hello Linux\");                                                                                                                                  \n    printf(\"hello Linux\");                                                                                                                                  \n    printf(\"hello Linux\");                                                                                                                                  \n    printf(\"hello Linux\");                                                                                                                                  \n    return 0;                                                                                                                                               \n}        \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220724120404-06ue4wr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724120404-06ue4wr",
				"updated": "20220724120455"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运行结果"
				}
			]
		},
		{
			"ID": "20220724120456-n0fj3ec",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724120456-n0fj3ec",
				"updated": "20230317220948"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317220941.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220724121109-wvdkt5y",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724121109-wvdkt5y"
			}
		},
		{
			"ID": "20220724121110-rcdg7ao",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724121110-rcdg7ao"
			}
		},
		{
			"ID": "20220724121110-jpxlgiv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220724121110-jpxlgiv",
				"updated": "20220724121119"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输入重定向"
				}
			]
		},
		{
			"ID": "20220724124752-q48v5g5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724124752-q48v5g5",
				"updated": "20220724125311"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "输入重定向的原理和上面的两个系统调用类似。就是将 fd "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "0"
				},
				{
					"Type": "NodeText",
					"Data": "原本是从键盘文件读取，改动为我们的 log.txt 文件读取。"
				}
			]
		},
		{
			"ID": "20220724124833-v875qss",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724124833-v875qss",
				"updated": "20220724125038"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而在这里使用了一个C语言函数 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "fgets"
				}
			]
		},
		{
			"ID": "20220724124940-dj8f03z",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220724124940-dj8f03z",
				"updated": "20220724125041"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220724124941-xs4pnfz",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220724124941-xs4pnfz",
						"updated": "20220724125001"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "char *fgets(char * s ,  int size ,  FILE *stream);"
						}
					]
				},
				{
					"ID": "20220724125039-y0sttoh",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220724125039-y0sttoh",
						"updated": "20220724125041"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "a",
							"TextMarkAHref": "https://cplusplus.com/reference/cstdio/fgets/?kw=fgets",
							"TextMarkTextContent": "fgets 详细介绍"
						}
					]
				}
			]
		},
		{
			"ID": "20220724121119-8nft3fg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220724121119-8nft3fg",
				"updated": "20220724124744"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                            \n#include \u003csys/stat.h\u003e                                                                                                                                         \n#include \u003csys/types.h\u003e                                                                                                                                        \n#include \u003cfcntl.h\u003e                                                                                                                                            \n#include \u003cunistd.h\u003e                                                                                                                                           \nint main()                                                                                                                                                  \n{                                                                                                                                                           \n   close(0);                                                                                                                                                \n   int fd = open(\"./log.txt\", O_RDONLY);                                                                                                                    \n   printf(\"fd = %d\", fd);                                                                                                                                   \n   char line[128];                                                                                                                                          \n   while(fgets(line,sizeof(line)-1,stdin))                                                                                                                  \n   {                                                                                                                                                        \n       printf(\"%s\",line);                                                                                                                                   \n   }                                                                                                                                                                                                                                                                                          \n    return 0;                                                                                                                                               \n}  \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220724125134-pdw8o1u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724125134-pdw8o1u",
				"updated": "20220724125156"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运行结果，成功把log.txt文件的内容读取出来了"
				}
			]
		},
		{
			"ID": "20220724124938-3ml8gyj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724124938-3ml8gyj",
				"updated": "20230317221132"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317221124.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220724125609-jyxf54o",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724125609-jyxf54o"
			}
		},
		{
			"ID": "20220725142051-pq552s6",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220725142051-pq552s6",
				"updated": "20220725142115"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "重定向的注意事项"
				}
			]
		},
		{
			"ID": "20220725143134-bg8rxae",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220725143134-bg8rxae",
				"updated": "20220725143207"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "标准输出"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": " 和 标准错误"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2"
				},
				{
					"Type": "NodeText",
					"Data": " 的区别"
				}
			]
		},
		{
			"ID": "20220725142052-62s5mi1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725142052-62s5mi1",
				"updated": "20220725142219"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当我文件中有 标准输出 1  和标准错误 2 时，虽然两个都是输出到屏幕上，但其实还是有差别的。"
				}
			]
		},
		{
			"ID": "20220725142435-46gezxc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725142435-46gezxc",
				"updated": "20220725142449"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运行以下文件"
				}
			]
		},
		{
			"ID": "20220725142219-7rwnrtd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220725142219-7rwnrtd",
				"updated": "20220725142503"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                          \n#include \u003csys/stat.h\u003e                                                                                                                                       \n#include \u003csys/types.h\u003e                                                                                                                                      \n#include \u003cfcntl.h\u003e                                                                                                                                          \n#include \u003cunistd.h\u003e\n#include \u003cstring.h\u003e\n\nint main()\n{\n    const char* msg1 = \"hello 标准输出\\n\";\n    const char* msg2 = \"hello 标准错误\\n\";\n    write(1 , msg1 ,strlen(msg1) );\n    write(2 , msg2 ,strlen(msg2) );\n    return 0;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230317221158-opha4ig",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317221158-opha4ig",
				"updated": "20230317221158"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运行结果：\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317221143.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230317221207-we16lvn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317221207-we16lvn"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "初看运行结果没有问题，那我们在shell命令界面使用 输出重定向 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026gt;"
				},
				{
					"Type": "NodeText",
					"Data": "​ 呢？\n​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317221147.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20230317221158-mqxhq9t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317221158-mqxhq9t",
				"updated": "20230317221158"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时发现，两条数据，只有标准输出 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的那条数据被重定向到了log.txt文件中去了，而标准错误 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的那条则没有被重定向。"
				}
			]
		},
		{
			"ID": "20230317221158-o32llv1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317221158-o32llv1",
				"updated": "20230317221158"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "原因在于输出重定向只会 重定向 标准输出 1"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20230317221157-r1jf4re",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317221157-r1jf4re"
			}
		},
		{
			"ID": "20230317221157-n2gh5i7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317221157-n2gh5i7"
			}
		},
		{
			"ID": "20220725143218-mzy95lu",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220725143218-mzy95lu",
				"updated": "20220725143303"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "标准输出"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": " 和标准错误"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2"
				},
				{
					"Type": "NodeText",
					"Data": " 同时重定向的方法"
				}
			]
		},
		{
			"ID": "20220725143446-rc8esm7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725143446-rc8esm7",
				"updated": "20220725143601"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "运行文件 \u0026gt; 被定向文件 2\u0026gt;\u0026amp;1"
				}
			]
		},
		{
			"ID": "20220725143603-2i3jwp5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725143603-2i3jwp5",
				"updated": "20220725143632"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在当前环境下就是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "./myfile \u0026gt; log.txt 2\u0026gt;\u0026amp;1"
				}
			]
		},
		{
			"ID": "20220725143304-65ijur9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725143304-65ijur9",
				"updated": "20230317221233"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317221217.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220725143643-tjit9aa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725143643-tjit9aa",
				"updated": "20220725144627"
			}
		},
		{
			"ID": "20220725143126-cpaucye",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725143126-cpaucye",
				"updated": "20220725143640"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "解析"
				}
			]
		},
		{
			"ID": "20220725143700-7vhdcc2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725143700-7vhdcc2",
				"updated": "20230317221240"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image.png"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://image-1311137268.cos.ap-chengdu.myqcloud.com/SiYuan/20230317221221.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​​"
				}
			]
		},
		{
			"ID": "20220725143127-8b2kp3k",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725143127-8b2kp3k",
				"updated": "20230106200755"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "就是将 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": " 指向的内容指向了 新文件 ，  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2"
				},
				{
					"Type": "NodeText",
					"Data": " 指向与"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": "一样的内容， "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2"
				},
				{
					"Type": "NodeText",
					"Data": " 就指向了新文件"
				}
			]
		},
		{
			"ID": "20230106200645-m4k12tw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230106200645-m4k12tw",
				"updated": "20230106200652"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://developer.aliyun.com/article/977075",
					"TextMarkTextContent": "详细解释"
				}
			]
		},
		{
			"ID": "20220725142530-5octlch",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725142530-5octlch"
			}
		},
		{
			"ID": "20220725143925-wdog65q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725143925-wdog65q"
			}
		},
		{
			"ID": "20220724125610-cgy3eyc",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220724125610-cgy3eyc",
				"updated": "20220724132000"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dup2"
				},
				{
					"Type": "NodeText",
					"Data": " 系统调用"
				}
			]
		},
		{
			"ID": "20220724131739-mdi2czu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724131739-mdi2czu",
				"updated": "20220724132103"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "dup2系统调用就可以轻松的实现重定向的功能，而可以不使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "close"
				},
				{
					"Type": "NodeText",
					"Data": "关闭文件来实现。"
				}
			]
		},
		{
			"ID": "20220724125611-7i31ov9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724125611-7i31ov9",
				"updated": "20220724132305"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20220724132304-tu6d7i9.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220724132307-yjp45jy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724132307-yjp45jy",
				"updated": "20220724132440"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "dup系统调用共有三个， "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dup"
				},
				{
					"Type": "NodeText",
					"Data": " ， "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dup2"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "dup3"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "但是最常用的还是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "dup2"
				}
			]
		},
		{
			"ID": "20220724132447-o1czmd1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220724132447-o1czmd1",
				"updated": "20220724132613"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "dup2的描述"
				}
			]
		},
		{
			"ID": "20220724132645-puzv0mb",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220724132645-puzv0mb",
				"updated": "20220724132708"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220724132648-dn073ar",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220724132648-dn073ar",
						"updated": "20220724132708"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"TextMarkType": "strong",
							"TextMarkTextContent": "int dup2( int oldfd ,  int newfd );"
						}
					]
				}
			]
		},
		{
			"ID": "20220724132610-9ce108u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724132610-9ce108u",
				"updated": "20220724132611"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20220724132610-bnas3d9.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220724132617-lv8nubn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724132617-lv8nubn",
				"updated": "20220724132941"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "也就是使用oldfd将newfd进行覆盖，从而进行重定向。"
				}
			]
		},
		{
			"ID": "20220724133753-2f8iiy4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724133753-2f8iiy4"
			}
		},
		{
			"ID": "20220724133757-vfordjm",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220724133757-vfordjm",
				"updated": "20220724133819"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用dup2进行输出重定向"
				}
			]
		},
		{
			"ID": "20220724133908-10s8jka",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220724133908-10s8jka",
				"updated": "20220724134058"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cfcntl.h\u003e                                                                                                                                            \n#include \u003cunistd.h\u003e                                                                                                                                           \nint main()                                                                                                                                                  \n{                                                                                                                                               \n    int fd =  open(\"./log.txt\" ,O_WRONLY );                                                                                                                 \n    if(fd \u003c 0)                                                                                                                                              \n    {                                                                                                                                                       \n        perror(\"file open\");                                                                                                                               \n        return 1;                                                                                                                                           \n    }\n                                                                                                                                                            \n    dup2(fd , 1); //本来应该显示到显示器的内容，写入到文件！\n    printf(\"hello Linux\\n\");                                                                                                                                \n    fprintf(stdout, \"hello Linux\\n\");                                                                                                                       \n    fputs(\"hello Linux\\n\" , stdout);  \n    return 0;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220724134213-zemdvw0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724134213-zemdvw0",
				"updated": "20220724134216"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运行结果"
				}
			]
		},
		{
			"ID": "20220724132944-bwimh3f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724132944-bwimh3f",
				"updated": "20220724133751"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20220724133751-21kb881.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220724134223-dax1j19",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724134223-dax1j19",
				"updated": "20220724134301"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在原有数据的基础上添加了我们的三条 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "hello Linux"
				}
			]
		},
		{
			"ID": "20220724134226-qqv37iw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724134226-qqv37iw"
			}
		},
		{
			"ID": "20220724132644-cztarz7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724132644-cztarz7",
				"updated": "20220724134449"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用open的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "O_TRUNC"
				},
				{
					"Type": "NodeText",
					"Data": "选项可以在每次写入前，清空文件，就可以达到C语言中"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "fwrite"
				},
				{
					"Type": "NodeText",
					"Data": "函数的作用了。"
				}
			]
		},
		{
			"ID": "20220724134412-y7nbokh",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220724134412-y7nbokh",
				"updated": "20220724134523"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cfcntl.h\u003e                                                                                                                                            \n#include \u003cunistd.h\u003e                                                                                                                                           \nint main()                                                                                                                                                  \n{                                                                                                                                               \n    int fd =  open(\"./log.txt\" ,O_WRONLY | O_TRUNC );                                                                                                                 \n    if(fd \u003c 0)                                                                                                                                              \n    {                                                                                                                                                       \n        perror(\"file open\");                                                                                                                               \n        return 1;                                                                                                                                           \n    }\n                                                                                                                                                            \n    dup2(fd , 1); //本来应该显示到显示器的内容，写入到文件！\n    printf(\"hello Linux\\n\");                                                                                                                                \n    fprintf(stdout, \"hello Linux\\n\");                                                                                                                       \n    fputs(\"hello Linux\\n\" , stdout);  \n    return 0;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220724134407-cbmehi4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724134407-cbmehi4",
				"updated": "20220724134408"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20220724134408-rvk8hdw.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220724134533-sekjowp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724134533-sekjowp"
			}
		},
		{
			"ID": "20220724135315-2dkh7ht",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724135315-2dkh7ht"
			}
		},
		{
			"ID": "20220724134547-xja4gab",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220724134547-xja4gab",
				"updated": "20220724134552"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用dup2进行输入重定向"
				}
			]
		},
		{
			"ID": "20220724134554-797j9ux",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220724134554-797j9ux",
				"updated": "20220724140427"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                          \n#include \u003csys/stat.h\u003e                                                                                                                                       \n#include \u003csys/types.h\u003e                                                                                                                                      \n#include \u003cfcntl.h\u003e                                                                                                                                          \n#include \u003cunistd.h\u003e                                                                                                                                         \nint main()                                                                                                                                              \n{                                                                                                                                                       \n                                                                                                                                                        \n    int fd =  open(\"./log.txt\" ,O_RDWR);                                                                                                                \n    if(fd \u003c 0)                                                                                                                                          \n    {                                                                                                                                                   \n        perror(\"file open\");                                                                                                                            \n        return 1;                                                                                                                                       \n    }                                                                                                                                                   \n                                                                                                                                                        \n    dup2(fd , 0);                                                                                                                                       \n                                                                                                                                                        \n    char buf[1024]; \n    while(fgets(buf , sizeof(buf)-1, stdin)\n    {\n        printf(\"%s\",buf);\n    }\n    return 0;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220724140238-h197bii",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724140238-h197bii",
				"updated": "20220724140446"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "log.txt文件的内容是"
				}
			]
		},
		{
			"ID": "20220724140448-ln3h1ar",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220724140448-ln3h1ar",
				"updated": "20220724140516"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "sdfjskfje jji\nasdfgh uio\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220724140514-xbetkti",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724140514-xbetkti",
				"updated": "20220724140529"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运行结果"
				}
			]
		},
		{
			"ID": "20220724140529-kw6e1si",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220724140529-kw6e1si",
				"updated": "20220724140542"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20220724140542-7bzwiyb.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220725125311-mp2yql6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725125311-mp2yql6"
			}
		},
		{
			"ID": "20220725144636-yjeuuxa",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725144636-yjeuuxa"
			}
		},
		{
			"ID": "20220725144637-wu3jh5k",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220725144637-wu3jh5k",
				"updated": "20220725221804"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "缓冲区"
				}
			]
		},
		{
			"ID": "20220725140451-8w527a9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725140451-8w527a9",
				"updated": "20220725212843"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Properties": {
						"parent-style": "max-width: 635px;",
						"style": "width: 625px;"
					},
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20220725212829-x2xll15.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"width: 625px;\" parent-style=\"max-width: 635px;\"}"
				}
			]
		},
		{
			"ID": "20220725212844-rr28q2m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725212844-rr28q2m",
				"updated": "20220818162551"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "在我们所写的数据原本都在用户层的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "C语言缓冲区"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "中，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "C语言缓冲区"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": " 通过 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark block-ref",
					"TextMarkBlockRefID": "20220722153059-8kbs55c",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "fd"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": " 将数据拷贝到了OS层的 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "文件的内核缓冲区"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "文件内核缓冲区"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": " 会定期的将数据刷新到磁盘或某种外设中。"
				}
			]
		},
		{
			"ID": "20220725213609-b50ig40",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220725213609-b50ig40",
				"updated": "20220725213639"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "内部细节"
				}
			]
		},
		{
			"ID": "20220725213632-nyzsquy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725213632-nyzsquy",
				"updated": "20220725214733"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "当C语言缓冲区拷贝数据到OS层的文件的内核缓冲区时，一定需要 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220722153059-8kbs55c",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "fd"
				},
				{
					"Type": "NodeText",
					"Data": " ，因为我们需要系统调用接口，没有OS提供的这层接口，我们无法找到文件。"
				}
			]
		},
		{
			"ID": "20220725214141-i5lz2bv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725214141-i5lz2bv",
				"updated": "20220725214621"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在C语言的IO函数中，一定有是有 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "FILE*"
				},
				{
					"Type": "NodeText",
					"Data": " 类型构成的，而 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "FILE*"
				},
				{
					"Type": "NodeText",
					"Data": "指向的结构体封装的不仅仅是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220722153059-8kbs55c",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "fd"
				},
				{
					"Type": "NodeText",
					"Data": " ， 还包含了 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "维护C语言缓冲区相关的内容"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220725222153-04svc3f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725222153-04svc3f",
				"updated": "20220725222322"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "注意："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong mark",
					"TextMarkTextContent": "系统调用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": " 的所书写的数据是不会在C语言缓冲区中的，而是直接在文件的内核缓冲区。"
				}
			]
		},
		{
			"ID": "20220725214405-mfekheo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725214405-mfekheo"
			}
		},
		{
			"ID": "20220725214748-rvbm1df",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220725214748-rvbm1df",
				"updated": "20220725214921"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "缓冲区的刷新策略"
				}
			]
		},
		{
			"ID": "20220725215803-l9yb8j6",
			"Type": "NodeSuperBlock",
			"Properties": {
				"id": "20220725215803-l9yb8j6"
			},
			"Children": [
				{
					"Type": "NodeSuperBlockOpenMarker"
				},
				{
					"Type": "NodeSuperBlockLayoutMarker",
					"Data": "row"
				},
				{
					"ID": "20220725214935-f8h7o2h",
					"Type": "NodeList",
					"ListData": {
						"Typ": 1
					},
					"Properties": {
						"id": "20220725214935-f8h7o2h",
						"updated": "20220725214939"
					},
					"Children": [
						{
							"ID": "20220725214939-5lr7bgh",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "MS4=",
								"Num": 1
							},
							"Properties": {
								"id": "20220725214939-5lr7bgh",
								"updated": "20220725214939"
							},
							"Children": [
								{
									"ID": "20220725214939-1tu1ele",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20220725214939-1tu1ele",
										"updated": "20220725215313"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "立即刷新（不缓冲）。"
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20220725214935-bgdraoi",
					"Type": "NodeList",
					"ListData": {
						"Typ": 1
					},
					"Properties": {
						"id": "20220725214935-bgdraoi",
						"updated": "20220725214944"
					},
					"Children": [
						{
							"ID": "20220725214944-l5slswc",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "Mi4=",
								"Num": 2
							},
							"Properties": {
								"id": "20220725214944-l5slswc",
								"updated": "20220725214944"
							},
							"Children": [
								{
									"ID": "20220725214944-xt7ta5q",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20220725214944-xt7ta5q",
										"updated": "20220725215311"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "行刷新（行缓冲，就是遇到\\n就刷新），比如，显示器打印。"
										}
									]
								}
							]
						},
						{
							"ID": "20220725215318-6bumfoc",
							"Type": "NodeListItem",
							"ListData": {
								"Typ": 1,
								"Delimiter": 46,
								"Marker": "My4=",
								"Num": 3
							},
							"Properties": {
								"id": "20220725215318-6bumfoc"
							},
							"Children": [
								{
									"ID": "20220725215318-gq7d80x",
									"Type": "NodeParagraph",
									"Properties": {
										"id": "20220725215318-gq7d80x"
									},
									"Children": [
										{
											"Type": "NodeTextMark",
											"TextMarkType": "strong",
											"TextMarkTextContent": "缓冲区满了，才刷新（全缓冲），比如，往磁盘文件中写入。"
										}
									]
								}
							]
						}
					]
				},
				{
					"Type": "NodeSuperBlockCloseMarker"
				}
			]
		},
		{
			"ID": "20220725221616-wd8jydh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725221616-wd8jydh"
			}
		},
		{
			"ID": "20220725215403-a88ymm8",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220725215403-a88ymm8",
				"updated": "20220725215422"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "close"
				},
				{
					"Type": "NodeText",
					"Data": " 引发的问题"
				}
			]
		},
		{
			"ID": "20220725144646-c6nddhe",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725144646-c6nddhe",
				"updated": "20220725144752"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以上的文件都有一个问题，为什么我们在源文件的结尾都没有 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "close"
				},
				{
					"Type": "NodeText",
					"Data": "这个系统调用。"
				}
			]
		},
		{
			"ID": "20220725144754-l1pftew",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725144754-l1pftew",
				"updated": "20220725145357"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在源文件的结尾使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "close"
				},
				{
					"Type": "NodeText",
					"Data": "会怎样。"
				}
			]
		},
		{
			"ID": "20220725144816-mi2qsfw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725144816-mi2qsfw",
				"updated": "20220725145348"
			}
		},
		{
			"ID": "20220725145358-pvjqhmh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725145358-pvjqhmh",
				"updated": "20220725145413"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "源文件结尾没有 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "close"
				},
				{
					"Type": "NodeText",
					"Data": " 的"
				}
			]
		},
		{
			"ID": "20220725145413-za3dcz6",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220725145413-za3dcz6",
				"updated": "20220819112842"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                            \n#include \u003csys/stat.h\u003e                                                                                                                                         \n#include \u003csys/types.h\u003e                                                                                                                                        \n#include \u003cfcntl.h\u003e                                                                                                                                            \n#include \u003cunistd.h\u003e                                                                                                                                           \n#include \u003cstring.h\u003e                                                                                  \nint main()                                                                                                                                                  \n{                                                                                                                                                           \n    close(1);                                                                                                                                               \n    int fd = open(\"./log.txt\" , O_CREAT | O_WRONLY |O_TRUNC ,0644);                                                                                         \n  \n    printf(\"fd = %d \\n\" , fd);                                                                                                                              \n    printf(\"hello printf\\n\");                                                                                                                               \n    fprintf(stdout,\"hello fprintf\\n\");   \n    return 0;\n\t//就是这里没有 close(fd) ;\n} \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220725145349-qvn2xwy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725145349-qvn2xwy",
				"updated": "20220725145453"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20220725145453-s01uz87.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220819112855-kr37xf5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220819112855-kr37xf5"
			}
		},
		{
			"ID": "20220725145454-1hujtg0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725145454-1hujtg0",
				"updated": "20220725145506"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但是加了close以后呢？"
				}
			]
		},
		{
			"ID": "20220725220235-98lkzed",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220725220235-98lkzed",
				"updated": "20220725220356"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                          \n#include \u003csys/stat.h\u003e                                                                                                                                       \n#include \u003csys/types.h\u003e                                                                                                                                      \n#include \u003cfcntl.h\u003e                                                                                                                                          \n#include \u003cunistd.h\u003e                                                                                                                                         \n#include \u003cstring.h\u003e                                                                                                                                         \nint main()                                                                                                                                            \n{                                                                                                                                                     \n    close(1);                                                                                                                                         \n    int fd = open(\"./log.txt\" , O_CREAT | O_WRONLY |O_TRUNC ,0644);                                                                                   \n  \n    printf(\"fd = %d \\n\" , fd);                                                                                                                        \n    printf(\"hello printf\\n\");                                                                                                                         \n    fprintf(stdout,\"hello fprintf\\n\"); \n      \n    close(fd);//加了这一行                                                                                                   \n    return 0;                                                                                                                                         \n} \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220725145507-926nmmg",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725145507-926nmmg",
				"updated": "20220725145552"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20220725145552-bbrdllg.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220725145553-k6l0vj4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725145553-k6l0vj4",
				"updated": "20220725145643"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "就会发现没有内容了，原因其实就是出自于缓冲区。"
				}
			]
		},
		{
			"ID": "20220725215334-ownqh2m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725215334-ownqh2m",
				"updated": "20220725220159"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在以上问题中，其实就是 当我们"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220722135953-zet60pa",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "输出重定向"
				},
				{
					"Type": "NodeText",
					"Data": "后，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "1"
				},
				{
					"Type": "NodeText",
					"Data": "的指向就已经不是显示器文件了，而且其他的普通文件，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "行缓冲 就变成了 全缓冲"
				},
				{
					"Type": "NodeText",
					"Data": "，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "普通文件"
				},
				{
					"Type": "NodeText",
					"Data": "的缓冲区的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220725215803-l9yb8j6",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "刷新策略"
				},
				{
					"Type": "NodeText",
					"Data": "是 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark strong",
					"TextMarkTextContent": "全缓冲"
				},
				{
					"Type": "NodeText",
					"Data": "。"
				}
			]
		},
		{
			"ID": "20220725220054-jx46qsx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725220054-jx46qsx",
				"updated": "20220819113018"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "所以"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "C缓冲区还没有满"
				},
				{
					"Type": "NodeText",
					"Data": "是不会拷贝数据到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "文件的内核缓冲区"
				},
				{
					"Type": "NodeText",
					"Data": "的，而当我们关闭了 fd，就相当于断了它们之间的唯一联系，C缓冲区就"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "无法拷贝"
				},
				{
					"Type": "NodeText",
					"Data": "数据到 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "文件内核缓冲区"
				},
				{
					"Type": "NodeText",
					"Data": "里去了。"
				}
			]
		},
		{
			"ID": "20220725221647-5788pai",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725221647-5788pai"
			}
		},
		{
			"ID": "20220725212013-4t2b9wu",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220725212013-4t2b9wu",
				"updated": "20220725220922"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "解决方法"
				}
			]
		},
		{
			"ID": "20220725220948-i9wxhda",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725220948-i9wxhda",
				"updated": "20220819113045"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong block-ref",
					"TextMarkBlockRefID": "20220722153059-8kbs55c",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "fd"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "关闭前，刷新C语言缓冲区"
				}
			]
		},
		{
			"ID": "20220725221043-e03lu5w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725221043-e03lu5w",
				"updated": "20220818163347"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "可以使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "fflush()"
				},
				{
					"Type": "NodeText",
					"Data": "函数"
				}
			]
		},
		{
			"ID": "20220725220911-zuxdt1u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220725220911-zuxdt1u",
				"updated": "20220819113157"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                          \n#include \u003csys/stat.h\u003e                                                                                                                                       \n#include \u003csys/types.h\u003e                                                                                                                                      \n#include \u003cfcntl.h\u003e                                                                                                                                          \n#include \u003cunistd.h\u003e                                                                                                                                         \n#include \u003cstring.h\u003e                                                                                                                                         \nint main()                                                                                                                                              \n{                                                                                                                                                       \n    //close(1);                                                                                                                                             \n    int fd = open(\"./log.txt\" , O_CREAT | O_WRONLY |O_TRUNC ,0644);                                                                                     \n    printf(\"fd = %d \\n\" , fd);                                                                                                                          \n    printf(\"hello printf\\n\");                                                                                                                           \n    fprintf(stdout,\"hello fprintf\\n\");                                                                                                                  \n                                                                                                                                                        \n    fflush(stdout); //在close(fd)之前，立即刷新C语言缓冲区                                                                                                                                         \n    close(fd);                                                                                                                                          \n    return 0;                                                                                                                                           \n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220725220841-uexme2h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725220841-uexme2h",
				"updated": "20220725221157"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20220725221157-xwuvuji.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220725212217-mnzy9si",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725212217-mnzy9si",
				"updated": "20220725212841"
			}
		},
		{
			"ID": "20220725221411-iewi7j9",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220725221411-iewi7j9",
				"updated": "20220819164715"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "案列  "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "fork()"
				},
				{
					"Type": "NodeText",
					"Data": "与缓冲区"
				}
			]
		},
		{
			"ID": "20220725223027-8ablp3m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725223027-8ablp3m",
				"updated": "20220725225204"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在以下代码中，可以发现，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220722141506-h4gc1uu",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "fork()"
				},
				{
					"Type": "NodeText",
					"Data": " 在源代码的末尾，按理来说是不会对文件运行结果有影响的。"
				}
			]
		},
		{
			"ID": "20220725222913-4ktlg0k",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220725222913-4ktlg0k",
				"updated": "20220725223551"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                            \n#include \u003csys/stat.h\u003e                                                                                                                                         \n#include \u003csys/types.h\u003e                                                                                                                                        \n#include \u003cfcntl.h\u003e                                                                                                                                            \n#include \u003cunistd.h\u003e                                                                                                                                           \n#include \u003cstring.h\u003e                                                                                                                                           \nint main()                                                                                                                                                  \n{                                                                                                                                                           \n    const char* msg = \"hello 标准输出\\n\";                                                                                                                     \n    write( 1 , msg , strlen(msg) );                                                                                                                         \n                                                                                                                                                            \n    printf(\"hello printf\\n\");                                                                                                                               \n    fprintf(stdout , \"hello fprintf\\n\");                                                                                                                    \n    fputs(\"hello fputs\\n\" , stdout);                                                                                                                        \n                                                                                                                                                            \n    fork();\n    return 0;                                                                                                                                               \n} \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220725223202-ona168t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725223202-ona168t",
				"updated": "20220725223322"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "运行结果如下：但确实也对运行结果没有影响"
				}
			]
		},
		{
			"ID": "20220725222939-du8g9f6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725222939-du8g9f6",
				"updated": "20220725223544"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20220725223544-llq1nid.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220725223158-qi1x3xu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725223158-qi1x3xu"
			}
		},
		{
			"ID": "20220725223319-ufhfhbl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725223319-ufhfhbl",
				"updated": "20220819120447"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "但如果我们对结果进行"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "输出重定向"
				},
				{
					"Type": "NodeText",
					"Data": "呢？"
				}
			]
		},
		{
			"ID": "20220725223323-1k80u6w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725223323-1k80u6w",
				"updated": "20220725223523"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20220725223523-o0gowfc.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220725223345-qav7tlf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725223345-qav7tlf",
				"updated": "20220725223751"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时发现"
				}
			]
		},
		{
			"ID": "20220725223748-3g1gft3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725223748-3g1gft3",
				"updated": "20220725223749"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20220725223749-0kn8s46.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220725224339-00727xp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725224339-00727xp"
			}
		},
		{
			"ID": "20220725224320-vxhy7xg",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220725224320-vxhy7xg",
				"updated": "20220725224336"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "原因"
				}
			]
		},
		{
			"ID": "20220725224338-wu0t1dl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725224338-wu0t1dl",
				"updated": "20220725224713"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "原因在于当我们把运行结果重定向时，就会发生"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220725214748-rvbm1df",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "刷新策略"
				},
				{
					"Type": "NodeText",
					"Data": "的改变，由显示器文件的行刷新变为了普通文件的全缓冲，所C接口的数据还在用户层的C语言缓冲区中。"
				}
			]
		},
		{
			"ID": "20220725224713-65io0yn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725224713-65io0yn",
				"updated": "20220725225139"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220722141506-h4gc1uu",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "fork()"
				},
				{
					"Type": "NodeText",
					"Data": " 的时候就会发生写时拷贝，因为父进程的缓冲区[buffer]要刷新，子进程的buffer也要刷新，所以必须发生写时拷贝。"
				}
			]
		},
		{
			"ID": "20220725224830-vdhxpgn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725224830-vdhxpgn",
				"updated": "20220725225000"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "而系统接口是由 OS负责的，所以数据是直接在 文件的内核缓冲区中的。"
				}
			]
		},
		{
			"ID": "20220725225209-lxh97zh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725225209-lxh97zh"
			}
		},
		{
			"ID": "20220725225210-68xa9v6",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220725225210-68xa9v6",
				"updated": "20220725225222"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "解决方法"
				}
			]
		},
		{
			"ID": "20220725225331-9mg8d9h",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725225331-9mg8d9h",
				"updated": "20220819114548"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "在fork() 之前强制刷新缓冲区。"
				}
			]
		},
		{
			"ID": "20220725225222-l8d21a9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220725225222-l8d21a9",
				"updated": "20220725225326"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Yw=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "#include \u003cstdio.h\u003e                                                                                                                                            \n#include \u003csys/stat.h\u003e                                                                                                                                         \n#include \u003csys/types.h\u003e                                                                                                                                        \n#include \u003cfcntl.h\u003e                                                                                                                                            \n#include \u003cunistd.h\u003e                                                                                                                                           \n#include \u003cstring.h\u003e                                                                                                                                           \nint main()                                                                                                                                                  \n{                                                                                                                                                           \n    const char* msg = \"hello 标准输出\\n\";                                                                                                                     \n    write( 1 , msg , strlen(msg) );                                                                                                                         \n                                                                                                                                                            \n    printf(\"hello printf\\n\");                                                                                                                               \n    fprintf(stdout , \"hello fprintf\\n\");                                                                                                                    \n    fputs(\"hello fputs\\n\" , stdout);                                                                                                                        \n          \n    fflush(stdout);//在fork() 之前刷新缓冲区                                                                                                                                                \n    fork();\n    return 0;                                                                                                                                               \n} \n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220725225343-1w10nxf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220725225343-1w10nxf",
				"updated": "20220819114439"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "image"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/image-20220819114439-ve4k6sv.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220818203155-qtktlz0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220818203155-qtktlz0"
			}
		},
		{
			"ID": "20220819164735-as4ktrk",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220819164735-as4ktrk",
				"updated": "20220819164735"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "小知识点"
				}
			]
		},
		{
			"ID": "20220819164735-tleoopy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220819164735-tleoopy",
				"updated": "20220819164735"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "在语言级别的 IO 中是会包含"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "刷新缓冲效果"
				},
				{
					"Type": "NodeText",
					"Data": "的。\n如："
				}
			]
		},
		{
			"ID": "20220819164735-rzkohvx",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220819164735-rzkohvx",
				"updated": "20220819170710"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220819164735-5fzy61o",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220819164735-5fzy61o",
						"updated": "20220819164735"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "stdout , cout/cin ,fstream , iostream.\n这些类中会包含 缓冲区，而 "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": "std::endl "
						},
						{
							"Type": "NodeText",
							"Data": " 就是刷新其缓冲区，效果就类似于 "
						},
						{
							"Type": "NodeTextMark",
							"TextMarkType": "code",
							"TextMarkTextContent": "/n"
						},
						{
							"Type": "NodeText",
							"Data": ",进行 **==行缓冲"
						}
					]
				}
			]
		},
		{
			"ID": "20220819170710-yhlqud9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220819170710-yhlqud9"
			}
		},
		{
			"ID": "20220819170753-5x77cx0",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220819170753-5x77cx0",
				"updated": "20220819170758"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文件系统"
				}
			]
		},
		{
			"ID": "20220818203156-e1yrnin",
			"Type": "NodeBlockQueryEmbed",
			"Properties": {
				"id": "20220818203156-e1yrnin",
				"updated": "20220819170706"
			},
			"Children": [
				{
					"Type": "NodeOpenBrace"
				},
				{
					"Type": "NodeOpenBrace"
				},
				{
					"Type": "NodeBlockQueryEmbedScript",
					"Data": "select * from blocks where id='20220819164837-tzppbex'"
				},
				{
					"Type": "NodeCloseBrace"
				},
				{
					"Type": "NodeCloseBrace"
				}
			]
		},
		{
			"ID": "20220819170843-7bh1gec",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220819170843-7bh1gec"
			}
		},
		{
			"ID": "20220904134255-b188vn9",
			"Type": "NodeHeading",
			"HeadingLevel": 1,
			"Properties": {
				"id": "20220904134255-b188vn9",
				"updated": "20220904134255"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "AMC文件三时间"
				}
			]
		},
		{
			"ID": "20220904134255-4rg6166",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220904134255-4rg6166",
				"updated": "20220904134304"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220904133922-nk87h0n",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "stat"
				},
				{
					"Type": "NodeText",
					"Data": " 指令可以查看文件属性。"
				}
			]
		},
		{
			"ID": "20220904134255-1xhqlzf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220904134255-1xhqlzf",
				"updated": "20220904134255"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Access"
				},
				{
					"Type": "NodeText",
					"Data": " 最后访问时间\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Modify"
				},
				{
					"Type": "NodeText",
					"Data": " 文件内容最后修改时间\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "Change"
				},
				{
					"Type": "NodeText",
					"Data": " 属性最后修改时间"
				}
			]
		},
		{
			"ID": "20220904134255-vgsh86b",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220904134255-vgsh86b",
				"updated": "20220904134255"
			},
			"Children": [
				{
					"ID": "20220904134255-3lc8epf",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220904134255-3lc8epf",
						"updated": "20220904134255"
					},
					"Children": [
						{
							"ID": "20220904134255-q3cx1np",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220904134255-q3cx1np",
								"updated": "20220904134255"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当我们访问文件后，在退出，可以发现 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong code",
									"TextMarkTextContent": "Access"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "时间"
								},
								{
									"Type": "NodeText",
									"Data": "并没有刷新，因为最近访问时间是OS自己定时刷新的，我们无法手动刷新。"
								}
							]
						}
					]
				},
				{
					"ID": "20220904134255-8nlqaq1",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220904134255-8nlqaq1",
						"updated": "20220904134255"
					},
					"Children": [
						{
							"ID": "20220904134255-txydxy6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220904134255-txydxy6",
								"updated": "20220904134255"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong code",
									"TextMarkTextContent": "Change"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "时间"
								},
								{
									"Type": "NodeText",
									"Data": " 可能会随着 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong code",
									"TextMarkTextContent": "Modify"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "时间"
								},
								{
									"Type": "NodeText",
									"Data": "改变而改变，因为文件大小可能一直随着我们修改文件时改变而改变，文件大小是属于文件属性的。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220904134255-uafxcwr",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220904134255-uafxcwr",
				"updated": "20220904134255"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "makefile 和 AMC时间的关系"
				}
			]
		},
		{
			"ID": "20220904134255-wr49n8j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220904134255-wr49n8j",
				"updated": "20220904134338"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为什么我们每次使用"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220722151735-ggv9xsk",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "Makefile"
				},
				{
					"Type": "NodeText",
					"Data": "的make指令后，就暂时无法在make了，如果我们修改了源文件，make指令又可以继续使用了？\n原因就在于"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "AMC时间"
				},
				{
					"Type": "NodeText",
					"Data": "，make指令就是根据"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "AMC时间"
				},
				{
					"Type": "NodeText",
					"Data": "来进行判定是否需要make，判断条件就是源文件的AMC时间和make编译出的文件的"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "mark",
					"TextMarkTextContent": "AMC时间"
				},
				{
					"Type": "NodeText",
					"Data": "进行判定。"
				}
			]
		},
		{
			"ID": "20220904134500-vdk61a9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220904134500-vdk61a9"
			}
		},
		{
			"ID": "20220904134255-zs1usly",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220904134255-zs1usly",
				"updated": "20220904134426"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "Pasted image 20220830191826"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "assets/Pasted image 20220830191826-20220904134405-f8px6jz.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "\n"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20220722135728-a3izcjt",
					"TextMarkBlockRefSubtype": "d",
					"TextMarkTextContent": "touch"
				},
				{
					"Type": "NodeText",
					"Data": " 不仅可以创建文件，还可以对已存在的文件进行刷新。"
				}
			]
		},
		{
			"ID": "20230317202122-4ehxqih",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230317202122-4ehxqih"
			}
		}
	]
}