{
  "recentFiles": [
    {
      "basename": "733. 图像渲染",
      "path": "算法/优选基础算法/BFS解决FloodFill算法/733. 图像渲染.md"
    },
    {
      "basename": "readme - BFS解决FloodFill算法",
      "path": "算法/优选基础算法/BFS解决FloodFill算法/readme - BFS解决FloodFill算法.md"
    },
    {
      "basename": "readme - 算法",
      "path": "算法/readme - 算法.md"
    },
    {
      "basename": "readme - 递归、搜索和回溯",
      "path": "算法/递归、搜索和回溯/readme - 递归、搜索和回溯.md"
    },
    {
      "basename": "readme-动态规划",
      "path": "算法/动态规划/readme-动态规划.md"
    },
    {
      "basename": "64. 最小路径和",
      "path": "算法/动态规划/64. 最小路径和.md"
    },
    {
      "basename": "931. 下降路径最小和",
      "path": "算法/动态规划/931. 下降路径最小和.md"
    },
    {
      "basename": "readme - 贪心算法",
      "path": "算法/贪心算法/readme - 贪心算法.md"
    },
    {
      "basename": "860. 柠檬水找零 (easy)",
      "path": "算法/贪心算法/860. 柠檬水找零 (easy).md"
    },
    {
      "basename": "24. 两两交换链表中的节点 (medium)",
      "path": "算法/优选基础算法/链表/24. 两两交换链表中的节点 (medium).md"
    },
    {
      "basename": "206. 反转链表 (easy)",
      "path": "算法/递归、搜索和回溯/206. 反转链表 (easy).md"
    },
    {
      "basename": "算法解题模版",
      "path": "template/算法解题模版.md"
    },
    {
      "basename": "面试题 08.06. 汉诺塔问题 (easy)",
      "path": "算法/递归、搜索和回溯/面试题 08.06. 汉诺塔问题 (easy).md"
    },
    {
      "basename": "21. 合并两个有序链表 (easy)",
      "path": "算法/递归、搜索和回溯/21. 合并两个有序链表 (easy).md"
    },
    {
      "basename": "91. 解码方法 (medium)",
      "path": "算法/动态规划/91. 解码方法 (medium).md"
    },
    {
      "basename": "91. 解码方法 2025-01-20 21.21.08.excalidraw",
      "path": "算法/动态规划/attachments/91. 解码方法 2025-01-20 21.21.08.excalidraw.md"
    },
    {
      "basename": "面试题 08.06. 汉诺塔问题.excalidraw",
      "path": "算法/递归、搜索和回溯/attachments/面试题 08.06. 汉诺塔问题.excalidraw.md"
    },
    {
      "basename": "Linux常用命令",
      "path": "Linux 系统编程/Linux常用命令.md"
    },
    {
      "basename": "readme-Java",
      "path": "Java与Web开发/Java/readme-Java.md"
    },
    {
      "basename": "线性表",
      "path": "数据结构/线性表.md"
    },
    {
      "basename": "栈和队列",
      "path": "数据结构/栈和队列.md"
    },
    {
      "basename": "readme - 优先级队列",
      "path": "算法/优选基础算法/优先级队列/readme - 优先级队列.md"
    },
    {
      "basename": "295. 数据流的中位数",
      "path": "算法/优选基础算法/优先级队列/295. 数据流的中位数.md"
    },
    {
      "basename": "692. 前K个高频单词 (medium)",
      "path": "算法/优选基础算法/优先级队列/692. 前K个高频单词 (medium).md"
    },
    {
      "basename": "703. 数据流中的第 K 大元素 (easy)",
      "path": "算法/优选基础算法/优先级队列/703. 数据流中的第 K 大元素 (easy).md"
    },
    {
      "basename": "1046. 最后一块石头的重量 (easy)",
      "path": "算法/优选基础算法/优先级队列/1046. 最后一块石头的重量 (easy).md"
    },
    {
      "basename": "662. 二叉树最大宽度 (medium)",
      "path": "算法/优选基础算法/队列+宽搜/662. 二叉树最大宽度 (medium).md"
    },
    {
      "basename": "1.1 行列式的概念",
      "path": "数学/线性代数/一. 行列式/1.1 行列式的概念.md"
    },
    {
      "basename": "1.4 几种典型的行列式的计算",
      "path": "数学/线性代数/一. 行列式/1.4 几种典型的行列式的计算.md"
    },
    {
      "basename": "1.3 行列式的展开定理",
      "path": "数学/线性代数/一. 行列式/1.3 行列式的展开定理.md"
    },
    {
      "basename": "1.2 行列式的性质",
      "path": "数学/线性代数/一. 行列式/1.2 行列式的性质.md"
    },
    {
      "basename": "1.5 克拉默法则",
      "path": "数学/线性代数/一. 行列式/1.5 克拉默法则.md"
    },
    {
      "basename": "2.1 矩阵的定义",
      "path": "数学/线性代数/二. 矩阵及其运算/2.1 矩阵的定义.md"
    },
    {
      "basename": "行列式的概念",
      "path": "线性代数/行列式的概念.md"
    },
    {
      "basename": "行列式的定义",
      "path": "线性代数/行列式的定义.md"
    },
    {
      "basename": "全排列和对换",
      "path": "线性代数/全排列和对换.md"
    },
    {
      "basename": "readme - 队列+宽搜",
      "path": "算法/优选基础算法/队列+宽搜/readme - 队列+宽搜.md"
    },
    {
      "basename": "515. 在每个树行中找最大值 (medium)",
      "path": "算法/优选基础算法/队列+宽搜/515. 在每个树行中找最大值 (medium).md"
    },
    {
      "basename": "103. 二叉树的锯齿形层序遍历 (medium)",
      "path": "算法/优选基础算法/队列+宽搜/103. 二叉树的锯齿形层序遍历 (medium).md"
    },
    {
      "basename": "429. N 叉树的层序遍历 (medium)",
      "path": "算法/优选基础算法/队列+宽搜/429. N 叉树的层序遍历 (medium).md"
    },
    {
      "basename": "readme - 字符串",
      "path": "算法/优选基础算法/字符串/readme - 字符串.md"
    },
    {
      "basename": "394. 字符串解码 (medium)",
      "path": "算法/优选基础算法/栈/394. 字符串解码 (medium).md"
    },
    {
      "basename": "227. 基本计算器 II (medium)",
      "path": "算法/优选基础算法/栈/227. 基本计算器 II (medium).md"
    },
    {
      "basename": "43. 字符串相乘 (medium)",
      "path": "算法/优选基础算法/字符串/43. 字符串相乘 (medium).md"
    },
    {
      "basename": "67. 二进制求和 (easy)",
      "path": "算法/优选基础算法/字符串/67. 二进制求和 (easy).md"
    },
    {
      "basename": "14. 最长公共前缀 (easy)",
      "path": "算法/优选基础算法/字符串/14. 最长公共前缀 (easy).md"
    },
    {
      "basename": "5. 最长回文子串 (medium)",
      "path": "算法/优选基础算法/字符串/5. 最长回文子串 (medium).md"
    },
    {
      "basename": "1047. 删除字符串中的所有相邻重复项 (easy)",
      "path": "算法/优选基础算法/栈/1047. 删除字符串中的所有相邻重复项 (easy).md"
    },
    {
      "basename": "946. 验证栈序列",
      "path": "算法/优选基础算法/栈/946. 验证栈序列.md"
    },
    {
      "basename": "844. 比较含退格的字符串 (easy)",
      "path": "算法/优选基础算法/栈/844. 比较含退格的字符串 (easy).md"
    }
  ],
  "omittedPaths": [],
  "omittedTags": [],
  "updateOn": "file-open",
  "omitBookmarks": false
}